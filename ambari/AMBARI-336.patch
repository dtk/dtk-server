diff --git hmc/puppet/modules/hdp-ganglia/manifests/init.pp hmc/puppet/modules/hdp-ganglia/manifests/init.pp
index e7763f4..4696183 100644
--- hmc/puppet/modules/hdp-ganglia/manifests/init.pp
+++ hmc/puppet/modules/hdp-ganglia/manifests/init.pp
@@ -12,16 +12,14 @@ class hdp-ganglia(
     user { $gmetad_user : shell => '/bin/bash'} #provision for nobody user
   }
   if ($service_state == 'no_op') {
-   } elsif ($service_state == 'uninstalled') {
+  } elsif ($service_state == 'uninstalled') {
     hdp::package { 'ganglia-monitor' :
-      java_needed => 'false',
       ensure => 'uninstalled'
     }
-   } elsif ($service_state in ['running','installed_and_configured','stopped']) {
-      hdp::package { 'ganglia-monitor':
-        java_needed => 'false'
-      }
-
+  } elsif ($service_state in ['running','installed_and_configured','stopped']) {
+    hdp::package { 'ganglia-monitor':
+      java_needed => false
+    }
   } 
 
   anchor{'hdp-ganglia::begin':} -> User<|title == $gmond_user or title == $gmetad_user|> ->  
diff --git hmc/puppet/modules/hdp-ganglia/manifests/monitor.pp hmc/puppet/modules/hdp-ganglia/manifests/monitor.pp
index 8c84ec3..237d409 100644
--- hmc/puppet/modules/hdp-ganglia/manifests/monitor.pp
+++ hmc/puppet/modules/hdp-ganglia/manifests/monitor.pp
@@ -1,70 +1,72 @@
 class hdp-ganglia::monitor(
   $service_state = $hdp::params::cluster_service_state,
   $ganglia_server_host = undef,
-  $monitor_and_server_single_node = false,
   $opts = {}
 ) inherits hdp-ganglia::params
 {
   if ($service_state == 'no_op') {
   } elsif ($service_state in ['uninstalled']) {
+    #note: includes the common package ganglia-monitor
+    include hdp-ganglia
+    class { 'hdp-ganglia::config':
+      ganglia_server_host => $ganglia_server_host,
+      service_state       => $service_state
+    }
+  } elsif ($service_state in ['running','stopped','installed_and_configured']) {
+    #note: includes the common package ganglia-monitor
+    include hdp-ganglia
+    class { 'hdp-ganglia::config': 
+      ganglia_server_host => $ganglia_server_host,
+      service_state       => $service_state
+    }
 
-      if ($monitor_and_server_single_node == false) {
-      #note: includes the common package ganglia-monitor
-      include hdp-ganglia
-      class { 'hdp-ganglia::config':
-        ganglia_server_host => $ganglia_server_host,
-        service_state       => $service_state
-      }
-     }
-    } elsif ($service_state in ['running','stopped','installed_and_configured']) {
-        if ($monitor_and_server_single_node == false) {
-        #note: includes the common package ganglia-monitor
-        include hdp-ganglia
-        class { 'hdp-ganglia::config': 
-          ganglia_server_host => $ganglia_server_host,
-          require             => Class['hdp-ganglia'],
-          before              => Class['hdp-ganglia::monitor::config-gen'],
-          service_state       => $service_state
-        }
-      }
-
-      anchor {'hdp-ganglia::monitor::begin' : } -> class { 'hdp-ganglia::monitor::config-gen': } ->  anchor {'hdp-ganglia::monitor::end' : } 
+    class { 'hdp-ganglia::monitor::config-gen':}
 
-      if ($monitor_and_server_single_node == false) {
-        Class['hdp-ganglia'] -> Class['hdp-ganglia::monitor::config-gen']
-        class { 'hdp-ganglia::service::gmond': 
-          ensure => $service_state,
-          require  => Class['hdp-ganglia::monitor::config-gen']
-        }
-      }
-    } else {
-      hdp_fail("TODO not implemented yet: service_state = ${service_state}")
+    class { 'hdp-ganglia::service::gmond': 
+      ensure => $service_state
     }
+
+    Class['hdp-ganglia'] -> Class['hdp-ganglia::config'] -> Class['hdp-ganglia::monitor::config-gen'] -> Class['hdp-ganglia::service::gmond']
+  } else {
+    hdp_fail("TODO not implemented yet: service_state = ${service_state}")
+  }
 }
 
 class hdp-ganglia::monitor::config-gen()
 {
 
+  anchor{'hdp-ganglia::monitor::config-gen::begin':}
+
   #TODO: to get around anchor problems
   Class['hdp-ganglia'] -> Class['hdp-ganglia::monitor::config-gen']
 
-  $service_exists = $hdp::params::service_exists
-
   if ($hdp-ganglia::params::omit_namenode != true) {
-    hdp-ganglia::config::generate_monitor { 'HDPNameNode':}
+    hdp-ganglia::config::generate_monitor { 'HDPNameNode':
+      ganglia_service => 'gmond',
+      require => Anchor['hdp-ganglia::monitor::config-gen::begin'],
+      before  => Anchor['hdp-ganglia::monitor::config-gen::end']
+    }
   }
   if ($hdp-ganglia::params::omit_jobtracker != true) {
-    hdp-ganglia::config::generate_monitor { 'HDPJobTracker':}
+    hdp-ganglia::config::generate_monitor { 'HDPJobTracker':
+      ganglia_service => 'gmond',
+      require => Anchor['hdp-ganglia::monitor::config-gen::begin'],
+      before  => Anchor['hdp-ganglia::monitor::config-gen::end']
+    }
   }
   if ($hdp-ganglia::params::omit_hbase_master != true) {
-    hdp-ganglia::config::generate_monitor { 'HDPHBaseMaster':}
+    hdp-ganglia::config::generate_monitor { 'HDPHBaseMaster':
+      ganglia_service => 'gmond',
+      require => Anchor['hdp-ganglia::monitor::config-gen::begin'],
+      before  => Anchor['hdp-ganglia::monitor::config-gen::end']
+    }
   }
   if ($hdp-ganglia::params::omit_slaves != true) {
-    hdp-ganglia::config::generate_monitor { 'HDPSlaves':}
-  }
-  Hdp-ganglia::Config::Generate_monitor<||>{
-    ganglia_service => 'gmond'
-  }
-
-  anchor{'hdp-ganglia::monitor::config-gen::begin':} -> Hdp-ganglia::Config::Generate_monitor<||> -> anchor{'hdp-ganglia::monitor::config-gen::end':}
+    hdp-ganglia::config::generate_monitor { 'HDPSlaves':
+      ganglia_service => 'gmond',
+      require => Anchor['hdp-ganglia::monitor::config-gen::begin'],
+      before  => Anchor['hdp-ganglia::monitor::config-gen::end']
+    }
+  }  
+  anchor{'hdp-ganglia::monitor::config-gen::end':}
 }
diff --git hmc/puppet/modules/hdp-ganglia/manifests/monitor_and_server.pp hmc/puppet/modules/hdp-ganglia/manifests/monitor_and_server.pp
index c62676d..8328edf 100644
--- hmc/puppet/modules/hdp-ganglia/manifests/monitor_and_server.pp
+++ hmc/puppet/modules/hdp-ganglia/manifests/monitor_and_server.pp
@@ -3,29 +3,65 @@ class hdp-ganglia::monitor_and_server(
   $opts = {}
 ) inherits hdp-ganglia::params
 {
+  $ganglia_shell_cmds_dir = $hdp-ganglia::params::ganglia_shell_cmds_dir
+  $ganglia_conf_dir = $hdp-ganglia::params::ganglia_conf_dir
+  $ganglia_runtime_dir = $hdp-ganglia::params::ganglia_runtime_dir
 
-  class { 'hdp-ganglia': }
-  
-  class { 'hdp-ganglia::server':
-    service_state                  => $service_state,
-    opts                           => $opts,
-    monitor_and_server_single_node => true
-  }
+  if ($service_state == 'no_op') {
+  } elsif ($service_state in ['uninstalled']) {
+    class { 'hdp-ganglia::server::packages':
+      ensure => 'uninstalled'
+      }
 
-  class { 'hdp-ganglia::monitor':
-    service_state                  => $service_state,
-    opts                           => $opts,
-    monitor_and_server_single_node => true
-  }
+    hdp::directory { [$ganglia_shell_cmds_dir,$ganglia_conf_dir,$ganglia_runtime_dir]:
+      service_state => $service_state,
+      force => true
+    }
+    
+    class { 'hdp-ganglia::config':
+      service_state => $service_state
+    }
 
-  class { 'hdp-ganglia::service::gmond': 
-    ensure => $service_state
-  }
+    Class['hdp-ganglia::server::packages'] -> 
+      Hdp::Directory[$ganglia_shell_cmds_dir] ->  Hdp::Directory[$ganglia_conf_dir] -> Hdp::Directory[$ganglia_runtime_dir] ->
+      Class['hdp-ganglia::config']
+  } elsif ($service_state in ['running','stopped','installed_and_configured']) {
+    class { 'hdp-ganglia': }
 
-  class { 'hdp-ganglia::service::change_permission':
-    ensure => $service_state
-  }
+    class { 'hdp-ganglia::server::packages': }
+
+    class { 'hdp-ganglia::config': 
+     ganglia_server_host => $hdp::params::host_address,
+     service_state       => $service_state
+     }
+
+    class {'hdp-ganglia::monitor::config-gen': }      
 
-  anchor{'hdp-ganglia::monitor_and_server::begin':} -> Class['hdp-ganglia'] -> Class['hdp-ganglia::server'] ->
-    Class['hdp-ganglia::monitor'] -> Class['hdp-ganglia::service::gmond'] -> Class['hdp-ganglia::service::change_permission'] -> anchor{'hdp-ganglia::monitor_and_server::end':}
+    class {'hdp-ganglia::server::config-gen': }      
+    
+    hdp-ganglia::config::generate_server { 'gmetad':
+      ganglia_service => 'gmetad'
+    }
+
+    class { 'hdp-ganglia::service::gmond': 
+      ensure => $service_state
+    }
+
+    class { 'hdp-ganglia::server::services' : 
+      service_state => $service_state,
+      monitor_and_server_single_node => true
+    }
+
+    class { 'hdp-ganglia::service::change_permission':
+      ensure => $service_state
+    }
+
+    #top level no anchors needed
+    Class['hdp-ganglia'] -> Class['hdp-ganglia::server::packages'] -> Class['hdp-ganglia::config'] -> 
+      Class['hdp-ganglia::monitor::config-gen'] -> Class['hdp-ganglia::server::config-gen'] -> Hdp-ganglia::Config::Generate_server['gmetad'] ->
+      Class['hdp-ganglia::service::gmond'] -> Class['hdp-ganglia::server::services'] ->
+      Class['hdp-ganglia::service::change_permission']
+  } else {
+    hdp_fail("TODO not implemented yet: service_state = ${service_state}")
+  }
 }
diff --git hmc/puppet/modules/hdp-ganglia/manifests/server.pp hmc/puppet/modules/hdp-ganglia/manifests/server.pp
index c8f27c0..d1379e5 100644
--- hmc/puppet/modules/hdp-ganglia/manifests/server.pp
+++ hmc/puppet/modules/hdp-ganglia/manifests/server.pp
@@ -1,6 +1,5 @@
 class hdp-ganglia::server(
   $service_state = $hdp::params::cluster_service_state,
-  $monitor_and_server_single_node = false,
   $opts = {}
 ) inherits  hdp-ganglia::params
 {
@@ -12,7 +11,7 @@ class hdp-ganglia::server(
   } elsif ($service_state == 'uninstalled') {
     class { 'hdp-ganglia::server::packages':
       ensure => 'uninstalled'
-      }
+    }
 
     hdp::directory { $ganglia_shell_cmds_dir:
       service_state => $service_state,
@@ -29,40 +28,20 @@ class hdp-ganglia::server(
       force => true
     }
 
-    anchor { 'hdp-ganglia::server::begin': } -> Class['hdp-ganglia::server::packages'] -> Hdp::Directory[$ganglia_shell_cmds_dir] ->  Hdp::Directory[$ganglia_conf_dir] -> Hdp::Directory[$ganglia_runtime_dir] -> anchor { 'hdp-ganglia::server::end': }
+    #top level no anchors needed
+    Class['hdp-ganglia::server::packages'] -> Hdp::Directory[$ganglia_shell_cmds_dir] ->  Hdp::Directory[$ganglia_conf_dir] -> Hdp::Directory[$ganglia_runtime_dir]
 
-   } elsif ($service_state in ['running','stopped','installed_and_configured']) {
-    if ($monitor_and_server_single_node == false) {
-      include hdp-ganglia #note: includes the common package ganglia-monitor
-    }
+  } elsif ($service_state in ['running','stopped','installed_and_configured']) {
+    include hdp-ganglia #note: includes the common package ganglia-monitor
 
     class { 'hdp-ganglia::server::packages': }
 
     class { 'hdp-ganglia::config': 
-     ganglia_server_host => $hdp::params::host_address,
-     service_state       => $service_state
-     }
-   
-    if ($hdp-ganglia::params::omit_hbase_master != true) {
-      hdp-ganglia::config::generate_server { 'HDPHBaseMaster':
-        ganglia_service => 'gmond'
-      }
-    }
-    if ($hdp-ganglia::params::omit_jobtracker != true) {
-      hdp-ganglia::config::generate_server { 'HDPJobTracker':
-        ganglia_service => 'gmond'
-      }
-    }
-    if ($hdp-ganglia::params::omit_namenode != true) {
-      hdp-ganglia::config::generate_server { 'HDPNameNode':
-        ganglia_service => 'gmond'
-      }
-    }
-    if ($hdp-ganglia::params::omit_slaves != true) {
-      hdp-ganglia::config::generate_server { 'HDPSlaves':
-        ganglia_service => 'gmond'
-      }
+      ganglia_server_host => $hdp::params::host_address,
+      service_state       => $service_state
     }
+
+    class {'hdp-ganglia::server::config-gen': }   
     
     hdp-ganglia::config::generate_server { 'gmetad':
       ganglia_service => 'gmetad'
@@ -70,18 +49,13 @@ class hdp-ganglia::server(
 
     class { 'hdp-ganglia::server::services' : 
       service_state => $service_state,
-      monitor_and_server_single_node => $monitor_and_server_single_node
-    }
-
-    #TODO: to get around anchor problems
-    Class['hdp-ganglia'] -> Hdp-ganglia::Config::Generate_server<||>
-    
-    if ($monitor_and_server_single_node == false) {
-      Class['hdp-ganglia'] -> Class['hdp-ganglia::server::packages']
+      monitor_and_server_single_node => false
     }
 
-    anchor{'hdp-ganglia::server::begin':} -> Class['hdp-ganglia::server::packages'] -> Class['hdp-ganglia::config'] -> 
-      Hdp-ganglia::Config::Generate_server<||> -> Class['hdp-ganglia::server::services'] -> anchor{'hdp-ganglia::server::end':}
+    #top level no anchors needed
+    Class['hdp-ganglia'] -> Class['hdp-ganglia::server::packages'] -> Class['hdp-ganglia::config'] -> 
+      Class['hdp-ganglia::server::config-gen'] -> Hdp-ganglia::Config::Generate_server['gmetad'] -> 
+      Class['hdp-ganglia::server::services']
    } else {
     hdp_fail("TODO not implemented yet: service_state = ${service_state}")
   }
@@ -92,8 +66,8 @@ class hdp-ganglia::server::packages(
 )
 {
   hdp::package { ['ganglia-server','ganglia-gweb','ganglia-hdp-gweb-addons']:
-    java_needed => 'false',
-    ensure => $ensure
+    ensure      => $ensure,
+    java_needed => false
  } 
 }
 
@@ -115,3 +89,38 @@ class hdp-ganglia::server::services(
     }
   }
 }
+
+class hdp-ganglia::server::config-gen()
+{
+  anchor{'hdp-ganglia::server::config-gen::begin':} 
+
+  if ($hdp-ganglia::params::omit_hbase_master != true) {
+    hdp-ganglia::config::generate_server { 'HDPHBaseMaster':
+      ganglia_service => 'gmond',
+      require => Anchor['hdp-ganglia::server::config-gen::begin'],
+      before  => Anchor['hdp-ganglia::server::config-gen::end']
+    }
+  }
+  if ($hdp-ganglia::params::omit_jobtracker != true) {
+    hdp-ganglia::config::generate_server { 'HDPJobTracker':
+      ganglia_service => 'gmond',
+      require => Anchor['hdp-ganglia::server::config-gen::begin'],
+      before  => Anchor['hdp-ganglia::server::config-gen::end']
+    }
+  }
+  if ($hdp-ganglia::params::omit_namenode != true) {
+    hdp-ganglia::config::generate_server { 'HDPNameNode':
+      ganglia_service => 'gmond',
+      require => Anchor['hdp-ganglia::server::config-gen::begin'],
+      before  => Anchor['hdp-ganglia::server::config-gen::end']
+    }
+  }
+  if ($hdp-ganglia::params::omit_slaves != true) {
+    hdp-ganglia::config::generate_server { 'HDPSlaves':
+      ganglia_service => 'gmond',
+      require => Anchor['hdp-ganglia::server::config-gen::begin'],
+      before  => Anchor['hdp-ganglia::server::config-gen::end']
+    }
+  }
+  anchor{'hdp-ganglia::server::config-gen::end':} 
+}

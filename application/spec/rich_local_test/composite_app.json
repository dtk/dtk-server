{
  "datacenter": {
   "dc2": {
      "display_name" : "New Datacenter"
   },
    "dc1": {
      "display_name" : "Datacenter East 1",	
      "network_partition": {
        "internet": {
          "is_deployed": false,
          "is_internet": true,
          "ds_key": "",
          "display_name": "internet"
        }
      },
      "state_change": {
        "state_change1-2": {
          "status": "completed",
          "type": "create_node",
          "*node_id": "/datacenter/dc1/node/s-ami-ee38c987-2",
          "display_name": "create_node(s-ami-ee38c987-2)",
          "object_type": "node"
        },
        "state_change1-3": {
          "status": "completed",
          "type": "install_component",
          "display_name": "install-component(postgresql__app)",
          "*component_id": "/datacenter/dc1/node/s-ami-ee38c987-2/component/postgresql__app",
          "object_type": "component"
        },
        "state_change1-4": {
          "status": "completed",
          "type": "install_component",
          "display_name": "install-component(postgresql__server)",
          "*component_id": "/datacenter/dc1/node/s-ami-ee38c987/component/postgresql__server",
          "object_type": "component"
        },
        "state_change1": {
          "status": "completed",
          "type": "create_node",
          "*node_id": "/datacenter/dc1/node/s-ami-ee38c987",
          "display_name": "create_node(s-ami-ee38c987)",
          "object_type": "node"
        }
      },
      "attribute_link": {
        "attribute_link:2147490127-2147490131": {
          "function_index": "1",
          "display_name": "attribute_link",
          "label": "1",
          "*output_id": "/datacenter/dc1/node/s-ami-ee38c987/component/postgresql__server/attribute/sap_ipv4",
          "hidden": false,
          "function": "select_one",
          "*input_id": "/datacenter/dc1/node/s-ami-ee38c987-2/component/postgresql__app/attribute/postgresql][sap_ref]"
        }
      },
      "node": {
        "s-ami-ee38c987-2": {
          "type": "instance",
          "is_deployed": true,
          "ui": {
            "2147489984": {
              "left": 249,
              "top": 127
            }
          },
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*ancestor_id": "/library/test/node/ami-ee38c987/node_interface/eth0"
            }
          },
          "ds_key": "[:ec2, :image, \"ami-ee38c987\"]",
          "ds_source_obj_type": "image",
          "display_name": "app server",
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "enabled": true,
              "description": "ping",
              "display_name": "check_ping",
              "*ancestor_id": "/library/test/node/ami-ee38c987/monitoring_item/check_ping"
            },
            "check_mem": {
              "enabled": true,
              "description": "Free Memory",
              "display_name": "check_mem",
              "*ancestor_id": "/library/test/node/ami-ee38c987/monitoring_item/check_mem"
            },
            "check_local_procs": {
              "enabled": true,
              "description": "Processes",
              "display_name": "check_local_procs",
              "*ancestor_id": "/library/test/node/ami-ee38c987/monitoring_item/check_local_procs"
            },
            "check_all_disks": {
              "enabled": true,
              "description": "Free Space All Disks",
              "display_name": "check_all_disks",
              "*ancestor_id": "/library/test/node/ami-ee38c987/monitoring_item/check_all_disks"
            },
            "check_memory_profiler": {
              "enabled": true,
              "description": "Memory Profiler",
              "display_name": "check_memory_profiler",
              "*ancestor_id": "/library/test/node/ami-ee38c987/monitoring_item/check_memory_profiler"
            },
            "check_iostat": {
              "enabled": true,
              "description": "Iostat",
              "display_name": "check_iostat",
              "*ancestor_id": "/library/test/node/ami-ee38c987/monitoring_item/check_iostat"
            },
            "check_ssh": {
              "enabled": true,
              "description": "SSH",
              "display_name": "check_ssh",
              "*ancestor_id": "/library/test/node/ami-ee38c987/monitoring_item/check_ssh"
            }
          },
          "component": {
            "postgresql__app": {
              "type": "template",
              "ui": {
                "images": {
                  "tnail": "postgres.png",
                  "tiny": "",
                  "display": "postgres.png"
                }
              },
              "ds_key": "[:user_data, \"/library/test/postgresql__app\"]",
              "description": "Test app",
              "display_name": "postgresql__app",
              "only_one_per_node": true,
              "attribute": {
                "postgresql][sap_ref]": {
                  "dynamic": false,
                  "value_derived": {
                    "host_address": "ec2-184-73-10-255.compute-1.amazonaws.com",
                    "port": 5432,
                    "protocol": "tcp"
                  },
                  "cannot_change": false,
                  "description": "postgresql service access point reference to connect to db",
                  "semantic_type": {
                    "sap_ref": {
                      "application": {
                        "type": "sql::postgresql"
                      }
                    }
                  },
                  "is_port": true,
                  "display_name": "sap_ref",
                  "read_only": false,
                  "data_type": "json",
                  "hidden": false,
                  "semantic_type_summary": "sap_ref",
                  "required": true,
                  "*ancestor_id": "/library/test/component/postgresql__app/attribute/postgresql][sap_ref]",
                  "external_ref": {
                    "type": "service_attribute",
                    "path": "service[postgresql][sap_ref]"
                  }
                }
              },
              "basic_type": "application",
              "ds_attributes": {
                "ui": "{\"images\": {\"tnail\":\"postgres.png\",\"display\":\"postgres.png\",\"tiny\":\"\"}}",
                "qualified_ref": "/library/test/postgresql__app",
                "ref": "postgresql__app"
              },
              "*ancestor_id": "/library/test/component/postgresql__app",
              "external_ref": {
                "type": "chef_recipe",
                "recipe_name": "postgresql::app"
              }
            }
          },
          "attribute": {
            "host_addresses_ipv4": {
              "dynamic": true,
              "value_derived": [
                null
              ],
              "cannot_change": false,
              "semantic_type": {
                ":array": "host_address_ipv4"
              },
              "is_port": true,
              "display_name": "host_addresses_ipv4",
              "read_only": true,
              "data_type": "json",
              "value_asserted": [
                "ec2-184-73-10-255.compute-1.amazonaws.com"
              ],
              "hidden": false,
              "semantic_type_summary": "host_address_ipv4",
              "required": false,
              "*ancestor_id": "/library/test/node/ami-ee38c987/attribute/host_addresses_ipv4"
            }
          },
          "ds_attributes": {
            "type": "machine",
            "kernel_id": "aki-3af50453",
            "owner_id": "411986592491",
            "product_codes": [

            ],
            "architecture": "i386",
            "description": null,
            "state": "available",
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "tags": {
            },
            "block_device_mapping": [
              {
                "deleteOnTermination": "true",
                "volumeSize": 8,
                "snapshotId": "snap-f9179794",
                "deviceName": "/dev/sda1"
              }
            ],
            "is_public": false,
            "location": "411986592491/rnp-chef-09-12-mcollective-1-0-ubuntu-lucid-x86_32",
            "name": "rnp-chef-09-12-mcollective-1-0-ubuntu-lucid-x86_32",
            "virtualizationType": "paravirtual",
            "id": "ami-ee38c987"
          },
          "*ancestor_id": "/library/test/node/ami-ee38c987",
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-2724d36a"
          }
        },
        "s-ami-ee38c987": {
          "type": "instance",
          "is_deployed": true,
          "ui": {
            "2147489984": {
              "left": "249",
              "top": "285"
            }
          },
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*ancestor_id": "/library/test/node/ami-ee38c987/node_interface/eth0"
            }
          },
          "ds_key": "[:ec2, :image, \"ami-ee38c987\"]",
          "attribute_link": {
            "host_address:2147490105-2147490131": {
              "type": "internal",
              "display_name": "link:host_address-sap",
              "label": "1",
              "*output_id": "/datacenter/dc1/node/s-ami-ee38c987/attribute/host_addresses_ipv4",
              "hidden": true,
              "function": "host_address_ipv4",
              "*input_id": "/datacenter/dc1/node/s-ami-ee38c987/component/postgresql__server/attribute/sap_ipv4"
            },
            "sap_config:2147490130-2147490131": {
              "type": "internal",
              "display_name": "link:sap_config-sap",
              "label": "1",
              "*output_id": "/datacenter/dc1/node/s-ami-ee38c987/component/postgresql__server/attribute/postgresql][sap_config_ipv4]",
              "hidden": true,
              "function": "sap_config_ipv4",
              "*input_id": "/datacenter/dc1/node/s-ami-ee38c987/component/postgresql__server/attribute/sap_ipv4"
            }
          },
          "ds_source_obj_type": "image",
          "display_name": "db server",
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "enabled": true,
              "description": "ping",
              "display_name": "check_ping",
              "*ancestor_id": "/library/test/node/ami-ee38c987/monitoring_item/check_ping"
            },
            "check_mem": {
              "enabled": true,
              "description": "Free Memory",
              "display_name": "check_mem",
              "*ancestor_id": "/library/test/node/ami-ee38c987/monitoring_item/check_mem"
            },
            "check_local_procs": {
              "enabled": true,
              "description": "Processes",
              "display_name": "check_local_procs",
              "*ancestor_id": "/library/test/node/ami-ee38c987/monitoring_item/check_local_procs"
            },
            "check_all_disks": {
              "enabled": true,
              "description": "Free Space All Disks",
              "display_name": "check_all_disks",
              "*ancestor_id": "/library/test/node/ami-ee38c987/monitoring_item/check_all_disks"
            },
            "check_memory_profiler": {
              "enabled": true,
              "description": "Memory Profiler",
              "display_name": "check_memory_profiler",
              "*ancestor_id": "/library/test/node/ami-ee38c987/monitoring_item/check_memory_profiler"
            },
            "check_iostat": {
              "enabled": true,
              "description": "Iostat",
              "display_name": "check_iostat",
              "*ancestor_id": "/library/test/node/ami-ee38c987/monitoring_item/check_iostat"
            },
            "check_ssh": {
              "enabled": true,
              "description": "SSH",
              "display_name": "check_ssh",
              "*ancestor_id": "/library/test/node/ami-ee38c987/monitoring_item/check_ssh"
            }
          },
          "component": {
            "postgresql__server": {
              "type": "template",
              "ui": {
                "images": {
                  "tnail": "postgres.png",
                  "tiny": "",
                  "display": "postgres.png"
                }
              },
              "ds_key": "[:user_data, \"/library/test/postgresql__server\"]",
              "description": "Installs postgresql server packages, debian family style",
              "display_name": "postgresql__server",
              "only_one_per_node": true,
              "attribute": {
                "postgresql][sap_config_ipv4]": {
                  "dynamic": false,
                  "cannot_change": false,
                  "description": "postgres ip service access point configuration",
                  "semantic_type": {
                    ":array": {
                      "sap_config_ipv4": {
                        "application": {
                          "type": "sql::postgresql"
                        }
                      }
                    }
                  },
                  "is_port": true,
                  "display_name": "sap_config_ipv4",
                  "read_only": false,
                  "data_type": "json",
                  "value_asserted": [
                    {
                      "port": 5432,
                      "protocol": "tcp"
                    }
                  ],
                  "hidden": false,
                  "semantic_type_summary": "sap_config_ipv4",
                  "required": false,
                  "*ancestor_id": "/library/test/component/postgresql__server/attribute/postgresql][sap_config_ipv4]",
                  "external_ref": {
                    "type": "service_attribute",
                    "path": "service[postgresql][sap_config_ipv4]"
                  }
                },
                "sap_ipv4": {
                  "dynamic": false,
                  "value_derived": [
                    {
                      "host_address": "ec2-184-73-10-255.compute-1.amazonaws.com",
                      "port": 5432,
                      "protocol": "tcp"
                    }
                  ],
                  "cannot_change": false,
                  "description": "Postgresql__server SAP",
                  "semantic_type": {
                    ":array": "sap_ipv4"
                  },
                  "is_port": true,
                  "display_name": "sap_ipv4",
                  "read_only": false,
                  "data_type": "json",
                  "hidden": true,
                  "semantic_type_summary": "sap_ipv4",
                  "required": false
                }
              },
              "basic_type": "service",
              "ds_attributes": {
                "ui": "{\"images\": {\"tnail\":\"postgres.png\",\"display\":\"postgres.png\",\"tiny\":\"\"}}",
                "qualified_ref": "/library/test/postgresql__server",
                "ref": "postgresql__server"
              },
              "*ancestor_id": "/library/test/component/postgresql__server",
              "external_ref": {
                "type": "chef_recipe",
                "recipe_name": "postgresql::server"
              }
            }
          },
          "attribute": {
            "host_addresses_ipv4": {
              "dynamic": true,
              "value_derived": [
                null
              ],
              "cannot_change": false,
              "semantic_type": {
                ":array": "host_address_ipv4"
              },
              "is_port": true,
              "display_name": "host_addresses_ipv4",
              "read_only": true,
              "data_type": "json",
              "value_asserted": [
                "ec2-184-73-10-255.compute-1.amazonaws.com"
              ],
              "hidden": false,
              "semantic_type_summary": "host_address_ipv4",
              "required": false,
              "*ancestor_id": "/library/test/node/ami-ee38c987/attribute/host_addresses_ipv4"
            }
          },
          "ds_attributes": {
            "type": "machine",
            "kernel_id": "aki-3af50453",
            "owner_id": "411986592491",
            "product_codes": [

            ],
            "architecture": "i386",
            "description": null,
            "state": "available",
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "tags": {
            },
            "block_device_mapping": [
              {
                "deleteOnTermination": "true",
                "volumeSize": 8,
                "snapshotId": "snap-f9179794",
                "deviceName": "/dev/sda1"
              }
            ],
            "is_public": false,
            "location": "411986592491/rnp-chef-09-12-mcollective-1-0-ubuntu-lucid-x86_32",
            "name": "rnp-chef-09-12-mcollective-1-0-ubuntu-lucid-x86_32",
            "virtualizationType": "paravirtual",
            "id": "ami-ee38c987"
          },
          "*ancestor_id": "/library/test/node/ami-ee38c987",
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-6e670219"
          }
        }
      },
      "display_name": "dc1",
      "data_source": {
        "ec2": {
          "data_source_entry": {
            "node_group_member": {
              "ds_name": "ec2",
              "obj_type": "node_group_member",
              "ds_is_golden_store": true,
              "display_name": "node_group_member"
            },
            "node_group": {
              "ds_name": "ec2",
              "obj_type": "node_group",
              "ds_is_golden_store": true,
              "display_name": "node_group"
            },
            "network_partition": {
              "ds_name": "ec2",
              "obj_type": "network_partition",
              "ds_is_golden_store": true,
              "display_name": "network_partition"
            },
            "node_instance": {
              "ds_name": "ec2",
              "obj_type": "node",
              "source_obj_type": "instance",
              "ds_is_golden_store": true,
              "display_name": "node_instance"
            }
          },
          "ds_name": "ec2",
          "display_name": "ec2"
        }
      }
    }
  },
  "library": {
    "test": {
      "search_object": {
        "user accounts": {
          "relation": "component",
          "display_name": "user accounts",
          "search_pattern": {
            ":relation": ":component",
            ":order_by": [

            ],
            ":filter": [
              ":and",
              [
                ":match-prefix",
                ":display_name",
                "user"
              ]
            ],
            ":columns": [
              ":display_name",
              ":parent_name"
            ],
            ":paging": {
            }
          }
        },
        "postgres": {
          "relation": "component",
          "display_name": "postgres",
          "search_pattern": {
            ":relation": ":component",
            ":order_by": [

            ],
            ":filter": [
              ":and",
              [
                ":match-prefix",
                ":display_name",
                "postgres"
              ]
            ],
            ":columns": [
              ":display_name",
              ":parent_name"
            ],
            ":paging": {
            }
          }
        }
      },
      "node": {
        "ami-ee38c987": {
          "type": "image",
          "is_deployed": true,
          "ui": {
            "images": {
              "tnail": "ubuntu.png",
              "tiny": "",
              "display": "ubuntu.png"
            }
          },
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0"
            }
          },
          "ds_key": "[:ec2, :image, \"ami-ee38c987\"]",
          "ds_source_obj_type": "image",
          "display_name": "ami-ee38c987",
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "enabled": true,
              "description": "ping",
              "display_name": "check_ping"
            },
            "check_mem": {
              "enabled": true,
              "description": "Free Memory",
              "display_name": "check_mem"
            },
            "check_local_procs": {
              "enabled": true,
              "description": "Processes",
              "display_name": "check_local_procs"
            },
            "check_all_disks": {
              "enabled": true,
              "description": "Free Space All Disks",
              "display_name": "check_all_disks"
            },
            "check_memory_profiler": {
              "enabled": true,
              "description": "Memory Profiler",
              "display_name": "check_memory_profiler"
            },
            "check_iostat": {
              "enabled": true,
              "description": "Iostat",
              "display_name": "check_iostat"
            },
            "check_ssh": {
              "enabled": true,
              "description": "SSH",
              "display_name": "check_ssh"
            }
          },
          "attribute": {
            "host_addresses_ipv4": {
              "dynamic": true,
              "value_derived": [
                null
              ],
              "cannot_change": false,
              "semantic_type": {
                ":array": "host_address_ipv4"
              },
              "is_port": true,
              "display_name": "host_addresses_ipv4",
              "read_only": true,
              "data_type": "json",
              "hidden": false,
              "semantic_type_summary": "host_address_ipv4",
              "required": false
            }
          },
          "ds_attributes": {
            "type": "machine",
            "kernel_id": "aki-3af50453",
            "owner_id": "411986592491",
            "product_codes": [

            ],
            "architecture": "i386",
            "description": null,
            "state": "available",
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "tags": {
            },
            "block_device_mapping": [
              {
                "deleteOnTermination": "true",
                "volumeSize": 8,
                "snapshotId": "snap-f9179794",
                "deviceName": "/dev/sda1"
              }
            ],
            "is_public": false,
            "location": "411986592491/rnp-chef-09-12-mcollective-1-0-ubuntu-lucid-x86_32",
            "name": "rnp-chef-09-12-mcollective-1-0-ubuntu-lucid-x86_32",
            "virtualizationType": "paravirtual",
            "id": "ami-ee38c987"
          },
          "external_ref": {
            "type": "ec2_image",
            "image_id": "ami-ee38c987"
          }
        }
      },
      "display_name": "test",
      "data_source": {
        "chef": {
          "data_source_entry": {
            "component_recipe": {
              "data_source_entry": {
                "component_monitoring_item": {
                  "ds_name": "chef",
                  "obj_type": "monitoring_item",
                  "ds_is_golden_store": true,
                  "display_name": "component_monitoring_item"
                },
                "component_attribute": {
                  "ds_name": "chef",
                  "obj_type": "attribute",
                  "ds_is_golden_store": true,
                  "display_name": "component_attribute"
                }
              },
              "ds_name": "chef",
              "obj_type": "component",
              "source_obj_type": "recipe",
              "ds_is_golden_store": true,
              "display_name": "component_recipe"
            }
          },
          "ds_name": "chef",
          "last_collection_timestamp": "Tue Jan 25 00:52:37 +0000 2011",
          "display_name": "chef"
        },
        "ec2": {
          "data_source_entry": {
            "node_image": {
              "ds_name": "ec2",
              "obj_type": "node",
              "source_obj_type": "image",
              "ds_is_golden_store": true,
              "display_name": "node_image"
            }
          },
          "ds_name": "ec2",
          "last_collection_timestamp": "Tue Jan 25 00:56:23 +0000 2011",
          "display_name": "ec2"
        },
        "user_data": {
          "data_source_entry": {
            "component": {
              "ds_name": "user_data",
              "obj_type": "component",
              "ds_is_golden_store": true,
              "display_name": "component"
            }
          },
          "ds_name": "user_data",
          "last_collection_timestamp": "Tue Jan 25 00:56:31 +0000 2011",
          "display_name": "user_data"
        }
      },
      "component": {
        "hadoop__pig": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "hadoop-pig.png",
              "tiny": "",
              "display": "hadoop-pig.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/hadoop__pig\"]",
          "description": "Installs hadoop's pig package",
          "display_name": "hadoop__pig",
          "only_one_per_node": true,
          "basic_type": "feature",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"hadoop-pig.png\",\"display\":\"hadoop-pig.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/hadoop__pig",
            "ref": "hadoop__pig"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "hadoop::pig"
          }
        },
        "hadoop_cloudera_c3": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "cloudera.png",
              "tiny": "",
              "display": "cloudera.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/hadoop_cloudera_c3\"]",
          "description": "Installs hadoop from Cloudera's repo",
          "display_name": "hadoop_cloudera_c3",
          "only_one_per_node": true,
          "attribute": {
            "hadoop_cloudera_c3][jmxremote_password]": {
              "dynamic": false,
              "cannot_change": false,
              "is_port": true,
              "display_name": "jmxremote_password",
              "read_only": false,
              "data_type": "string",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[hadoop_namenode][jmxremote_password]"
              }
            },
            "hadoop_cloudera_c3][jmxremote_port]": {
              "dynamic": false,
              "cannot_change": false,
              "is_port": true,
              "display_name": "jmxremote_port",
              "read_only": false,
              "data_type": "string",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[hadoop_namenode][jmxremote_port]"
              }
            }
          },
          "basic_type": "service",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"cloudera.png\",\"display\":\"cloudera.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/hadoop_cloudera_c3",
            "ref": "hadoop_cloudera_c3"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "hadoop_cloudera_c3"
          }
        },
        "php__php5": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "php.png",
              "tiny": "",
              "display": "php.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/php__php5\"]",
          "description": "Install php5 packages and php.ini config file",
          "display_name": "php__php5",
          "only_one_per_node": true,
          "basic_type": "language",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"php.png\",\"display\":\"php.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/php__php5",
            "ref": "php__php5"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "php::php5"
          }
        },
        "wordpress": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "wordpress.png",
              "tiny": "",
              "display": "wordpress.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/wordpress\"]",
          "description": "Installs and configures wordpress LAMP stack on a single system",
          "display_name": "wordpress",
          "only_one_per_node": true,
          "attribute": {
            "wordpress][keys][secure_auth]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Wordpress secure auth key.",
              "is_port": false,
              "display_name": "keys[secure_auth]",
              "read_only": false,
              "data_type": "string",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[wordpress][keys][secure_auth]"
              }
            },
            "wordpress][db][user]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Wordpress will connect to MySQL using this user.",
              "is_port": false,
              "display_name": "db[user]",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "wordpressuser",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[wordpress][db][user]"
              }
            },
            "wordpress][keys][nonce]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Wordpress nonce key.",
              "is_port": false,
              "display_name": "keys[nonce]",
              "read_only": false,
              "data_type": "string",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[wordpress][keys][nonce]"
              }
            },
            "wordpress][checksum]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Checksum of the tarball for the version specified.",
              "is_port": false,
              "display_name": "checksum",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "7342627f4a3dca44886c5aca6834cc88671dbd3aa2760182d2fcb9a330807",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[wordpress][checksum]"
              }
            },
            "wordpress][keys][auth]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Wordpress auth key.",
              "is_port": false,
              "display_name": "keys[auth]",
              "read_only": false,
              "data_type": "string",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[wordpress][keys][auth]"
              }
            },
            "wordpress][db][password]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Password for the Wordpress MySQL user.",
              "is_port": false,
              "display_name": "db[password]",
              "read_only": false,
              "data_type": "string",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[wordpress][db][password]"
              }
            },
            "wordpress][keys][logged_in]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Wordpress logged-in key.",
              "is_port": false,
              "display_name": "keys[logged_in]",
              "read_only": false,
              "data_type": "string",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[wordpress][keys][logged_in]"
              }
            },
            "wordpress][db][database]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Wordpress will use this MySQL database to store its data.",
              "is_port": false,
              "display_name": "db[database]",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "wordpressdb",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[wordpress][db][database]"
              }
            },
            "wordpress][version]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Version of Wordpress to download from the Wordpress site.",
              "is_port": false,
              "display_name": "version",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "2.9.2",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[wordpress][version]"
              }
            },
            "wordpress][sap_ref]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "wordpress mysql service access point reference",
              "semantic_type": {
                "sap_ref": {
                  "application": {
                    "type": "sql::mysql"
                  }
                }
              },
              "is_port": true,
              "display_name": "sap_ref",
              "read_only": false,
              "data_type": "json",
              "hidden": false,
              "semantic_type_summary": "sap_ref",
              "required": true,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[wordpress][sap_ref]"
              }
            },
            "wordpress][dir]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Location to place wordpress files.",
              "is_port": false,
              "display_name": "dir",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "/var/www",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[wordpress][dir]"
              }
            }
          },
          "basic_type": "application",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"wordpress.png\",\"display\":\"wordpress.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/wordpress",
            "ref": "wordpress"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "wordpress"
          }
        },
        "mysql__slave": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "mysql.png",
              "tiny": "",
              "display": "mysql.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/mysql__slave\"]",
          "description": "For extending mysql server to serve as a slave",
          "display_name": "mysql__slave",
          "only_one_per_node": true,
          "attribute": {
            "mysql][sap_ref_to_master]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "mysql service access point reference for slave to connect with master",
              "semantic_type": {
                "sap_ref": {
                  "application": {
                    "type": "sql::mysql"
                  }
                }
              },
              "is_port": true,
              "display_name": "sap_ref_to_master",
              "read_only": false,
              "data_type": "json",
              "hidden": false,
              "semantic_type_summary": "sap_ref",
              "required": true,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[mysql_server][sap_ref_to_master]"
              }
            },
            "mysql][master_log_ref]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "reference for mysql slave to get master log position",
              "semantic_type": "\"mysql_master_log_info\"",
              "is_port": true,
              "display_name": "master_log_ref",
              "read_only": false,
              "data_type": "json",
              "hidden": false,
              "semantic_type_summary": "mysql_master_log_info",
              "required": true,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[mysql_server][master_log_ref]"
              }
            }
          },
          "basic_type": "feature",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"mysql.png\",\"display\":\"mysql.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/mysql__slave",
            "ref": "mysql__slave"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "mysql::slave"
          }
        },
        "postgresql__app": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "postgres.png",
              "tiny": "",
              "display": "postgres.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/postgresql__app\"]",
          "description": "Test app",
          "display_name": "postgresql__app",
          "only_one_per_node": true,
          "attribute": {
            "postgresql][sap_ref]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "postgresql service access point reference to connect to db",
              "semantic_type": {
                "sap_ref": {
                  "application": {
                    "type": "sql::postgresql"
                  }
                }
              },
              "is_port": true,
              "display_name": "sap_ref",
              "read_only": false,
              "data_type": "json",
              "hidden": false,
              "semantic_type_summary": "sap_ref",
              "required": true,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[postgresql][sap_ref]"
              }
            }
          },
          "basic_type": "application",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"postgres.png\",\"display\":\"postgres.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/postgresql__app",
            "ref": "postgresql__app"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "postgresql::app"
          }
        },
        "hadoop__hive": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "hadoop-hive.png",
              "tiny": "",
              "display": "hadoop-hive.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/hadoop__hive\"]",
          "description": "Installs hadoop's hive package",
          "display_name": "hadoop__hive",
          "only_one_per_node": true,
          "basic_type": "feature",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"hadoop-hive.png\",\"display\":\"hadoop-hive.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/hadoop__hive",
            "ref": "hadoop__hive"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "hadoop::hive"
          }
        },
        "postgresql__server": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "postgres.png",
              "tiny": "",
              "display": "postgres.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/postgresql__server\"]",
          "description": "Installs postgresql server packages, debian family style",
          "display_name": "postgresql__server",
          "only_one_per_node": true,
          "attribute": {
            "postgresql][sap_config_ipv4]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "postgres ip service access point configuration",
              "semantic_type": {
                ":array": {
                  "sap_config_ipv4": {
                    "application": {
                      "type": "sql::postgresql"
                    }
                  }
                }
              },
              "is_port": true,
              "display_name": "sap_config_ipv4",
              "read_only": false,
              "data_type": "json",
              "value_asserted": [
                {
                  "port": 5432,
                  "protocol": "tcp"
                }
              ],
              "hidden": false,
              "semantic_type_summary": "sap_config_ipv4",
              "required": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[postgresql][sap_config_ipv4]"
              }
            }
          },
          "basic_type": "service",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"postgres.png\",\"display\":\"postgres.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/postgresql__server",
            "ref": "postgresql__server"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "postgresql::server"
          }
        },
        "java": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "java-01.png",
              "tiny": "",
              "display": "java-01.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/java\"]",
          "description": "Installs openjdk to provide Java",
          "display_name": "java",
          "only_one_per_node": true,
          "basic_type": "language",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"java-01.png\",\"display\":\"java-01.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/java",
            "ref": "java"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "java"
          }
        },
        "java_sun": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "java-01.png",
              "tiny": "",
              "display": "java-01.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/java_sun\"]",
          "description": "Installs Sun Java using preseed to accept terms",
          "display_name": "java_sun",
          "only_one_per_node": true,
          "basic_type": "language",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"java-01.png\",\"display\":\"java-01.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/java_sun",
            "ref": "java_sun"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "java_sun"
          }
        },
        "rabbitmq__edge": {
          "ui": {
            "images": {
              "tnail": "rabbitmq.png",
              "tiny": "",
              "display": "rabbitmq.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/rabbitmq__edge\"]",
          "display_name": "rabbitmq__edge",
          "only_one_per_node": true,
          "basic_type": "feature",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"rabbitmq.png\",\"display\":\"rabbitmq.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/rabbitmq__edge",
            "ref": "rabbitmq__edge"
          }
        },
        "rabbitmq__default": {
          "ui": {
            "images": {
              "tnail": "rabbitmq.png",
              "tiny": "",
              "display": "rabbitmq.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/rabbitmq__default\"]",
          "display_name": "rabbitmq__default",
          "only_one_per_node": true,
          "basic_type": "service",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"rabbitmq.png\",\"display\":\"rabbitmq.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/rabbitmq__default",
            "ref": "rabbitmq__default"
          }
        },
        "hadoop": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "hadoop.png",
              "tiny": "",
              "display": "hadoop.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/hadoop\"]",
          "description": "Installs hadoop from Cloudera's repo",
          "display_name": "hadoop",
          "only_one_per_node": true,
          "basic_type": "service",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"hadoop.png\",\"display\":\"hadoop.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/hadoop",
            "ref": "hadoop"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "hadoop"
          }
        },
        "hadoop_cloudera_c3__conf_pseudo": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "cloudera.png",
              "tiny": "",
              "display": "cloudera.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/hadoop_cloudera_c3__conf_pseudo\"]",
          "description": "Installs hadoop-conf-pseudo and enables hadoop services",
          "display_name": "hadoop_cloudera_c3__conf_pseudo",
          "only_one_per_node": true,
          "monitoring_item": {
            "check_hadoop_namenode_remotely": {
              "enabled": true,
              "display_name": "check_hadoop_namenode_remotely"
            },
            "check_hadoop_datanode_remotely": {
              "enabled": true,
              "display_name": "check_hadoop_datanode_remotely"
            },
            "check_hadoop_dfs": {
              "enabled": true,
              "display_name": "check_hadoop_dfs"
            },
            "check_hadoop_namenode_jmx": {
              "enabled": true,
              "display_name": "check_hadoop_namenode_jmx"
            }
          },
          "attribute": {
            "hadoop_cloudera_c3][jmxremote_password]": {
              "dynamic": false,
              "cannot_change": false,
              "is_port": true,
              "display_name": "jmxremote_password",
              "read_only": false,
              "data_type": "string",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[hadoop_namenode][jmxremote_password]"
              }
            },
            "hadoop_cloudera_c3][jmxremote_port]": {
              "dynamic": false,
              "cannot_change": false,
              "is_port": true,
              "display_name": "jmxremote_port",
              "read_only": false,
              "data_type": "string",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[hadoop_namenode][jmxremote_port]"
              }
            }
          },
          "basic_type": "feature",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"cloudera.png\",\"display\":\"cloudera.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/hadoop_cloudera_c3__conf_pseudo",
            "ref": "hadoop_cloudera_c3__conf_pseudo"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "hadoop_cloudera_c3::conf_pseudo"
          }
        },
        "nagios__client": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "nagios.png",
              "tiny": "",
              "display": "nagios.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/nagios__client\"]",
          "description": "Installs and configures a nagios client with nrpe",
          "display_name": "nagios__client",
          "only_one_per_node": true,
          "attribute": {
            "nagios][monitored_client_sap_config]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "monitored client service access point",
              "semantic_type": {
                "sap_config_ipv4": {
                  "application": {
                    "type": "nrpe"
                  }
                }
              },
              "is_port": true,
              "display_name": "monitored_client_sap_config",
              "read_only": false,
              "data_type": "json",
              "value_asserted": {
                "port": "5666",
                "protocol": "tcp"
              },
              "hidden": false,
              "semantic_type_summary": "sap_config_ipv4",
              "required": true,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[nagios][monitored_client_sap_config]"
              }
            }
          },
          "basic_type": "service",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"nagios.png\",\"display\":\"nagios.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/nagios__client",
            "ref": "nagios__client"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "nagios::client"
          }
        },
        "mysql__server": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "mysql.png",
              "tiny": "",
              "display": "mysql.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/mysql__server\"]",
          "description": "Installs packages required for mysql servers w/o manual intervention",
          "display_name": "mysql__server",
          "only_one_per_node": true,
          "monitoring_item": {
            "mysql_basic_health": {
              "enabled": true,
              "display_name": "mysql_basic_health"
            },
            "inet_service_up": {
              "enabled": true,
              "display_name": "inet_service_up"
            }
          },
          "attribute": {
            "mysql][tunable][wait_timeout]": {
              "dynamic": false,
              "cannot_change": false,
              "is_port": false,
              "display_name": "tunable[wait_timeout]",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "180",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][wait_timeout]"
              }
            },
            "mysql][port]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "MySQL Server TCP port",
              "is_port": false,
              "display_name": "port",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "3306",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][port]"
              }
            },
            "mysql][tunable][net_read_timeout]": {
              "dynamic": false,
              "cannot_change": false,
              "is_port": false,
              "display_name": "tunable[net_read_timeout]",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "30",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][net_read_timeout]"
              }
            },
            "mysql][ec2_path]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Location of mysql directory on EC2 instance EBS volumes",
              "is_port": false,
              "display_name": "ec2_path",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "/mnt/mysql",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][ec2_path]"
              }
            },
            "mysql][tunable][key_buffer]": {
              "dynamic": false,
              "cannot_change": false,
              "is_port": false,
              "display_name": "tunable[key_buffer]",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "250M",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][key_buffer]"
              }
            },
            "mysql][server_root_password]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Randomly generated password for the mysqld root user",
              "is_port": false,
              "display_name": "server_root_password",
              "read_only": false,
              "data_type": "string",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][server_root_password]"
              }
            },
            "mysql][tunable][back_log]": {
              "dynamic": false,
              "cannot_change": false,
              "is_port": false,
              "display_name": "tunable[back_log]",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "128",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][back_log]"
              }
            },
            "mysql][sap_config_ipv4]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "mysql ip service access point configuration",
              "semantic_type": {
                ":array": {
                  "sap_config_ipv4": {
                    "application": {
                      "type": "sql::mysql",
                      "clients_provide_dbs": true
                    }
                  }
                }
              },
              "is_port": true,
              "display_name": "sap_config_ipv4",
              "read_only": false,
              "data_type": "json",
              "value_asserted": [
                {
                  "port": "3306",
                  "protocol": "tcp"
                }
              ],
              "hidden": false,
              "semantic_type_summary": "sap_config_ipv4",
              "required": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[mysql_server][sap_config_ipv4]"
              }
            },
            "mysql][sap_socket]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "mysql unix socket service access point",
              "semantic_type": {
                "sap_socket": {
                  "application": {
                    "type": "sql::mysql"
                  }
                }
              },
              "is_port": true,
              "display_name": "sap_socket",
              "read_only": false,
              "data_type": "json",
              "value_asserted": {
                "socket_file": "/var/run/mysqld/mysqld.sock"
              },
              "hidden": false,
              "semantic_type_summary": "sap_socket",
              "required": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[mysql_server][sap_socket]"
              }
            },
            "mysql][tunable][max_heap_table_size]": {
              "dynamic": false,
              "cannot_change": false,
              "is_port": false,
              "display_name": "tunable[max_heap_table_size]",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "32M",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][max_heap_table_size]"
              }
            },
            "mysql][bind_address]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Address that mysqld should listen on",
              "is_port": false,
              "display_name": "bind_address",
              "read_only": false,
              "data_type": "string",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][bind_address]"
              }
            },
            "mysql][tunable][net_write_timeout]": {
              "dynamic": false,
              "cannot_change": false,
              "is_port": false,
              "display_name": "tunable[net_write_timeout]",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "30",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][net_write_timeout]"
              }
            },
            "mysql][datadir]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Location of mysql databases",
              "is_port": false,
              "display_name": "datadir",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "/var/lib/mysql",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][datadir]"
              }
            },
            "mysql][monitor_user_id]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "db userid for monitoring application to use",
              "is_port": true,
              "display_name": "monitor_user_id",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "root",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[mysql_server][monitor_user_id]"
              }
            },
            "mysql][tunable][max_connections]": {
              "dynamic": false,
              "cannot_change": false,
              "is_port": false,
              "display_name": "tunable[max_connections]",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "800",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][max_connections]"
              }
            },
            "mysql][tunable][table_cache]": {
              "dynamic": false,
              "cannot_change": false,
              "is_port": false,
              "display_name": "tunable[table_cache]",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "128",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][table_cache]"
              }
            }
          },
          "basic_type": "service",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"mysql.png\",\"display\":\"mysql.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/mysql__server",
            "ref": "mysql__server"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "mysql::server"
          }
        },
        "postgresql__client": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "postgres.png",
              "tiny": "",
              "display": "postgres.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/postgresql__client\"]",
          "description": "Installs postgresql client package(s)",
          "display_name": "postgresql__client",
          "only_one_per_node": true,
          "basic_type": "client",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"postgres.png\",\"display\":\"postgres.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/postgresql__client",
            "ref": "postgresql__client"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "postgresql::client"
          }
        },
        "user_account": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "user.png",
              "tiny": "",
              "display": "user.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/user_account\"]",
          "description": "Installs a user account",
          "display_name": "user_account",
          "only_one_per_node": true,
          "attribute": {
            "user_account][home]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Home directory location",
              "is_port": false,
              "display_name": "home",
              "read_only": false,
              "data_type": "string",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[user_account][home]"
              }
            },
            "user_account][shell]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Login shell",
              "is_port": false,
              "display_name": "shell",
              "read_only": false,
              "data_type": "string",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[user_account][shell]"
              }
            },
            "user_account][username]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "User name",
              "is_port": false,
              "display_name": "username",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "rich",
              "hidden": false,
              "required": true,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[user_account][username]"
              }
            },
            "user_account][home_base]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Home directories base location (home will be $home_base/$username",
              "is_port": false,
              "display_name": "home_base",
              "read_only": false,
              "data_type": "string",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[user_account][home_base]"
              }
            },
            "user_account][uid]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Numeric user id",
              "is_port": false,
              "display_name": "uid",
              "read_only": false,
              "data_type": "integer",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[user_account][uid]"
              }
            },
            "user_account][gid]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Primary group id",
              "is_port": false,
              "display_name": "gid",
              "read_only": false,
              "data_type": "integer",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[user_account][gid]"
              }
            }
          },
          "basic_type": "user",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"user.png\",\"display\":\"user.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/user_account",
            "ref": "user_account"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "user_account"
          }
        },
        "apache2": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "apache.png",
              "tiny": "",
              "display": "apache.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/apache2\"]",
          "description": "Main Apache configuration",
          "display_name": "apache2",
          "only_one_per_node": true,
          "monitoring_item": {
            "inet_service_up": {
              "enabled": true,
              "display_name": "inet_service_up"
            }
          },
          "attribute": {
            "apache2][user]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "User Apache runs as",
              "is_port": false,
              "display_name": "user",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "www-data",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[apache2][user]"
              }
            },
            "apache2][contact]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Email address of webmaster",
              "is_port": false,
              "display_name": "contact",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "ops@example.com",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[apache2][contact]"
              }
            },
            "apache2][serversignature]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Configure footer on server-generated documents",
              "is_port": false,
              "display_name": "serversignature",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "On",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[apache2][serversignature]"
              }
            },
            "apache2][keepaliverequests]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Number of requests allowed on a persistent connection",
              "is_port": false,
              "display_name": "keepaliverequests",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "100",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[apache2][keepaliverequests]"
              }
            },
            "apache2][keepalive]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "HTTP persistent connections",
              "is_port": false,
              "display_name": "keepalive",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "On",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[apache2][keepalive]"
              }
            },
            "apache2][icondir]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Directory location for icons",
              "is_port": false,
              "display_name": "icondir",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "/usr/share/apache2/icons",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[apache2][icondir]"
              }
            },
            "apache2][listen_ports]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Ports that Apache should listen on",
              "is_port": false,
              "display_name": "listen_ports",
              "read_only": false,
              "data_type": "json",
              "value_asserted": [
                "80",
                "443"
              ],
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[apache2][listen_ports]"
              }
            },
            "apache2][keepalivetimeout]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Time to wait for requests on persistent connection",
              "is_port": false,
              "display_name": "keepalivetimeout",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "5",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[apache2][keepalivetimeout]"
              }
            },
            "apache2][log_dir]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Location for Apache logs",
              "is_port": false,
              "display_name": "log_dir",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "/etc/apache2",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[apache2][log_dir]"
              }
            },
            "apache2][binary]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Apache server daemon program",
              "is_port": false,
              "display_name": "binary",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "/usr/sbin/apache2",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[apache2][binary]"
              }
            },
            "apache2][dir]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Location for Apache configuration",
              "is_port": false,
              "display_name": "dir",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "/etc/apache2",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[apache2][dir]"
              }
            },
            "apache2][sap_config_ipv4]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "apache2 ip service access point configuration",
              "semantic_type": {
                ":array": {
                  "sap_config_ipv4": {
                    "application": "webserver"
                  }
                }
              },
              "is_port": true,
              "display_name": "sap_config_ipv4",
              "read_only": false,
              "data_type": "json",
              "value_asserted": [
                {
                  "protocol": "tcp",
                  "ports": [
                    "80",
                    "443"
                  ]
                }
              ],
              "hidden": false,
              "semantic_type_summary": "sap_config_ipv4",
              "required": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[apache2_service][sap_config_ipv4]"
              }
            },
            "apache2][timeout]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Connection timeout value",
              "is_port": false,
              "display_name": "timeout",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "300",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[apache2][timeout]"
              }
            },
            "apache2][servertokens]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "Server response header",
              "is_port": false,
              "display_name": "servertokens",
              "read_only": false,
              "data_type": "string",
              "value_asserted": "Prod",
              "hidden": false,
              "required": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[apache2][servertokens]"
              }
            }
          },
          "basic_type": "service",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"apache.png\",\"display\":\"apache.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/apache2",
            "ref": "apache2"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "apache2"
          }
        },
        "mysql__master": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "mysql.png",
              "tiny": "",
              "display": "mysql.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/mysql__master\"]",
          "description": "For extending mysql server to serve as a master",
          "display_name": "mysql__master",
          "only_one_per_node": true,
          "attribute": {
            "mysql][master_log]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "master log position",
              "semantic_type": "\"mysql_master_log_info\"",
              "is_port": true,
              "display_name": "master_log",
              "read_only": false,
              "data_type": "json",
              "hidden": false,
              "semantic_type_summary": "mysql_master_log_info",
              "required": true,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[mysql_server][master_log]"
              }
            },
            "mysql][sap_config_for_slave]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "mysql ip service access point configuration for slave",
              "semantic_type": {
                ":array": {
                  "sap_config_ipv4": {
                    "application": {
                      "type": "sql::mysql",
                      "clients_provide_dbs": false
                    }
                  }
                }
              },
              "is_port": true,
              "display_name": "sap_config_for_slave",
              "read_only": false,
              "data_type": "json",
              "value_asserted": [
                {
                  "port": "3306",
                  "protocol": "tcp",
                  "application": {
                    "username": "slave",
                    "database": "mysql",
                    "password": null
                  }
                }
              ],
              "hidden": false,
              "semantic_type_summary": "sap_config_ipv4",
              "required": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[mysql_server][sap_config_for_slave]"
              }
            }
          },
          "basic_type": "feature",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"mysql.png\",\"display\":\"mysql.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/mysql__master",
            "ref": "mysql__master"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "mysql::master"
          }
        },
        "nagios__server": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "nagios.png",
              "tiny": "",
              "display": "nagios.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/nagios__server\"]",
          "description": "Installs and configures a nagios server",
          "display_name": "nagios__server",
          "only_one_per_node": true,
          "attribute": {
            "nagios][monitor_sap_refs]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "monitor client service access point ref",
              "semantic_type": {
                ":array": {
                  "sap_ref": {
                    "application": {
                      "type": "nrpe"
                    }
                  }
                }
              },
              "is_port": true,
              "display_name": "monitor_sap_refs",
              "read_only": false,
              "data_type": "json",
              "hidden": false,
              "semantic_type_summary": "sap_ref",
              "required": true,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[nagios][monitor_sap_refs]"
              }
            }
          },
          "basic_type": "service",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"nagios.png\",\"display\":\"nagios.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/nagios__server",
            "ref": "nagios__server"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "nagios::server"
          }
        },
        "redis": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "redis.png",
              "tiny": "",
              "display": "redis.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/redis\"]",
          "description": "Installs/Configures redis",
          "display_name": "redis",
          "only_one_per_node": true,
          "monitoring_item": {
            "inet_service_up": {
              "enabled": true,
              "display_name": "inet_service_up"
            },
            "redis_basic_health": {
              "enabled": true,
              "display_name": "redis_basic_health"
            }
          },
          "attribute": {
            "redis][sap_config_ipv4]": {
              "dynamic": false,
              "cannot_change": false,
              "description": "redis ip service access point configuration",
              "semantic_type": {
                ":array": {
                  "sap_config_ipv4": {
                    "application": "redis"
                  }
                }
              },
              "is_port": true,
              "display_name": "sap_config_ipv4",
              "read_only": false,
              "data_type": "json",
              "value_asserted": [
                {
                  "port": null,
                  "protocol": "tcp"
                }
              ],
              "hidden": false,
              "semantic_type_summary": "sap_config_ipv4",
              "required": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[redis_service][sap_config_ipv4]"
              }
            }
          },
          "basic_type": "service",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"redis.png\",\"display\":\"redis.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/redis",
            "ref": "redis"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "redis"
          }
        },
        "hadoop__doc": {
          "type": "template",
          "ui": {
            "images": {
              "tnail": "hadoop.png",
              "tiny": "",
              "display": "hadoop.png"
            }
          },
          "ds_key": "[:user_data, \"/library/test/hadoop__doc\"]",
          "description": "Installs hadoop documentation",
          "display_name": "hadoop__doc",
          "only_one_per_node": true,
          "basic_type": "feature",
          "ds_attributes": {
            "ui": "{\"images\": {\"tnail\":\"hadoop.png\",\"display\":\"hadoop.png\",\"tiny\":\"\"}}",
            "qualified_ref": "/library/test/hadoop__doc",
            "ref": "hadoop__doc"
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "hadoop::doc"
          }
        }
      }
    }
  }
}

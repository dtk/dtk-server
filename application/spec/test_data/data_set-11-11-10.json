{
  "datacenter": {
    "dc1": {
      "network_partition": {
        "internet": {
          "display_name": "internet",
          "ds_key": "",
          "is_internet": false,
          "is_deployed": false
        },
        "basic__default": {
          "display_name": "basic__default",
          "ds_key": "[:ec2, \"basic__default\"]",
          "is_internet": false,
          "is_deployed": false
        }
      },
      "node_group": {
        "ec2_sg_basic__default": {
          "display_name": "ec2 security groups [basic,default]",
          "description": "Group corresponding to ec2 security groups [basic,default]"
        },
        "all_instances": {
          "display_name": "all_instances",
          "dynamic_search_pattern": {
            ":filter": [
              ":and",
              [
                ":eq",
                ":type",
                "instance"
              ]
            ],
            ":relation": ":node"
          }
        }
      },
      "node_group_member": {
        "ec2_sg_basic__default--i-bd39e2d7": {
          "display_name": "ec2_sg_basic__default--i-bd39e2d7",
          "is_elastic_node": false,
          "*node_id": "/node/i-bd39e2d7",
          "*node_group_id": "/node_group/ec2_sg_basic__default"
        },
        "ec2_sg_basic__default--i-335f0059": {
          "display_name": "ec2_sg_basic__default--i-335f0059",
          "is_elastic_node": false,
          "*node_id": "/node/i-335f0059",
          "*node_group_id": "/node_group/ec2_sg_basic__default"
        },
        "ec2_sg_basic__default--i-374b945d": {
          "display_name": "ec2_sg_basic__default--i-374b945d",
          "is_elastic_node": false,
          "*node_id": "/node/i-374b945d",
          "*node_group_id": "/node_group/ec2_sg_basic__default"
        },
        "ec2_sg_basic__default--i-fb486291": {
          "display_name": "ec2_sg_basic__default--i-fb486291",
          "is_elastic_node": false,
          "*node_id": "/node/i-fb486291",
          "*node_group_id": "/node_group/ec2_sg_basic__default"
        },
        "ec2_sg_basic__default--i-33886f59": {
          "display_name": "ec2_sg_basic__default--i-33886f59",
          "is_elastic_node": false,
          "*node_id": "/node/i-33886f59",
          "*node_group_id": "/node_group/ec2_sg_basic__default"
        },
        "ec2_sg_basic__default--i-97bb8ffd": {
          "display_name": "ec2_sg_basic__default--i-97bb8ffd",
          "is_elastic_node": false,
          "*node_id": "/node/i-97bb8ffd",
          "*node_group_id": "/node_group/ec2_sg_basic__default"
        },
        "ec2_sg_basic__default--i-2f5b7a44": {
          "display_name": "ec2_sg_basic__default--i-2f5b7a44",
          "is_elastic_node": false,
          "*node_id": "/node/i-2f5b7a44",
          "*node_group_id": "/node_group/ec2_sg_basic__default"
        },
        "ec2_sg_basic__default--i-07af096d": {
          "display_name": "ec2_sg_basic__default--i-07af096d",
          "is_elastic_node": false,
          "*node_id": "/node/i-07af096d",
          "*node_group_id": "/node_group/ec2_sg_basic__default"
        },
        "ec2_sg_basic__default--i-9bad8cf1": {
          "display_name": "ec2_sg_basic__default--i-9bad8cf1",
          "is_elastic_node": false,
          "*node_id": "/node/i-9bad8cf1",
          "*node_group_id": "/node_group/ec2_sg_basic__default"
        },
        "ec2_sg_basic__default--i-4fc62e25": {
          "display_name": "ec2_sg_basic__default--i-4fc62e25",
          "is_elastic_node": false,
          "*node_id": "/node/i-4fc62e25",
          "*node_group_id": "/node_group/ec2_sg_basic__default"
        },
        "ec2_sg_basic__default--i-c5f5afaf": {
          "display_name": "ec2_sg_basic__default--i-c5f5afaf",
          "is_elastic_node": false,
          "*node_id": "/node/i-c5f5afaf",
          "*node_group_id": "/node_group/ec2_sg_basic__default"
        },
        "ec2_sg_basic__default--i-7550141f": {
          "display_name": "ec2_sg_basic__default--i-7550141f",
          "is_elastic_node": false,
          "*node_id": "/node/i-7550141f",
          "*node_group_id": "/node_group/ec2_sg_basic__default"
        },
        "ec2_sg_basic__default--i-c1b527ab": {
          "display_name": "ec2_sg_basic__default--i-c1b527ab",
          "is_elastic_node": false,
          "*node_id": "/node/i-c1b527ab",
          "*node_group_id": "/node_group/ec2_sg_basic__default"
        },
        "ec2_sg_basic__default--i-63775608": {
          "display_name": "ec2_sg_basic__default--i-63775608",
          "is_elastic_node": false,
          "*node_id": "/node/i-63775608",
          "*node_group_id": "/node_group/ec2_sg_basic__default"
        },
        "ec2_sg_basic__default--i-656e580f": {
          "display_name": "ec2_sg_basic__default--i-656e580f",
          "is_elastic_node": false,
          "*node_id": "/node/i-656e580f",
          "*node_group_id": "/node_group/ec2_sg_basic__default"
        }
      },
      "node": {
        "i-4fc62e25": {
          "type": "instance",
          "image_size": "0.17408E4",
          "display_name": "i-4fc62e25",
          "ds_key": "[:ec2, :instance, \"i-4fc62e25\"]",
          "operational_status": "stopped",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*network_partition_id": "/network_partition/basic__default"
            }
          },
          "ds_source_obj_type": "instance",
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-4fc62e25"
          },
          "ds_attributes": {
            "flavor": {
              "cores": 1,
              "bits": 32,
              "disk": 160,
              "name": "Small Instance",
              "ram": 1740.8,
              "id": "m1.small"
            },
            "groups": [
              "basic",
              "default"
            ]
          }
        },
        "i-7550141f": {
          "type": "instance",
          "image_size": "0.17408E4",
          "display_name": "i-7550141f",
          "ds_key": "[:ec2, :instance, \"i-7550141f\"]",
          "operational_status": "stopped",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*network_partition_id": "/network_partition/basic__default"
            }
          },
          "ds_source_obj_type": "instance",
          "os": "Ubuntu 9.10",
          "component": {
            "chef_aux": {
              "type": "instance",
              "display_name": "chef_aux",
              "ds_key": "",
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "chef_aux",
                "node_name": "i-7550141f"
              },
              "only_one_per_node": true
            },
            "java_sun": {
              "type": "instance",
              "display_name": "java_sun",
              "ds_key": "",
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "java_sun",
                "node_name": "i-7550141f"
              },
              "only_one_per_node": true
            }
          },
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-7550141f"
          },
          "ds_attributes": {
            "flavor": {
              "cores": 1,
              "bits": 32,
              "disk": 160,
              "name": "Small Instance",
              "ram": 1740.8,
              "id": "m1.small"
            },
            "groups": [
              "basic",
              "default"
            ]
          }
        },
        "i-c1b527ab": {
          "type": "instance",
          "image_size": "0.17408E4",
          "display_name": "i-c1b527ab",
          "ds_key": "[:ec2, :instance, \"i-c1b527ab\"]",
          "operational_status": "stopped",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*network_partition_id": "/network_partition/basic__default"
            }
          },
          "ds_source_obj_type": "instance",
          "os": "Ubuntu 9.10",
          "component": {
            "chef_aux": {
              "type": "instance",
              "display_name": "chef_aux",
              "ds_key": "",
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "chef_aux",
                "node_name": "i-c1b527ab"
              },
              "only_one_per_node": true
            },
            "java_sun": {
              "type": "instance",
              "display_name": "java_sun",
              "ds_key": "",
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "java_sun",
                "node_name": "i-c1b527ab"
              },
              "only_one_per_node": true
            },
            "nagios::client": {
              "type": "instance",
              "display_name": "nagios::client",
              "ds_key": "",
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "nagios::client",
                "node_name": "i-c1b527ab"
              },
              "only_one_per_node": true
            }
          },
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-c1b527ab"
          },
          "ds_attributes": {
            "flavor": {
              "cores": 1,
              "bits": 32,
              "disk": 160,
              "name": "Small Instance",
              "ram": 1740.8,
              "id": "m1.small"
            },
            "groups": [
              "basic",
              "default"
            ]
          }
        },
        "i-374b945d": {
          "type": "instance",
          "image_size": "0.17408E4",
          "display_name": "i-374b945d",
          "ds_key": "[:ec2, :instance, \"i-374b945d\"]",
          "operational_status": "stopped",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*network_partition_id": "/network_partition/basic__default"
            }
          },
          "ds_source_obj_type": "instance",
          "os": "Ubuntu 9.10",
          "component": {
            "hadoop::conf_pseudo": {
              "type": "instance",
              "display_name": "hadoop::conf_pseudo",
              "ds_key": "",
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "hadoop::conf_pseudo",
                "node_name": "i-374b945d"
              },
              "only_one_per_node": true
            },
            "hadoop": {
              "type": "instance",
              "display_name": "hadoop",
              "ds_key": "",
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "hadoop",
                "node_name": "i-374b945d"
              },
              "only_one_per_node": true
            },
            "hudson": {
              "type": "instance",
              "display_name": "hudson",
              "ds_key": "",
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "hudson",
                "node_name": "i-374b945d"
              },
              "only_one_per_node": true
            }
          },
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-374b945d"
          },
          "ds_attributes": {
            "flavor": {
              "cores": 1,
              "bits": 32,
              "disk": 160,
              "name": "Small Instance",
              "ram": 1740.8,
              "id": "m1.small"
            },
            "groups": [
              "basic",
              "default"
            ]
          }
        },
        "i-fb486291": {
          "type": "instance",
          "image_size": "0.17408E4",
          "display_name": "i-fb486291",
          "ds_key": "[:ec2, :instance, \"i-fb486291\"]",
          "operational_status": "stopped",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*network_partition_id": "/network_partition/basic__default"
            }
          },
          "ds_source_obj_type": "instance",
          "os": "Ubuntu 9.10",
          "component": {
            "chef_aux": {
              "type": "instance",
              "display_name": "chef_aux",
              "ds_key": "",
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "chef_aux",
                "node_name": "i-fb486291"
              },
              "only_one_per_node": true
            },
            "hadoop_cloudera_c3::conf_pseudo": {
              "type": "instance",
              "display_name": "hadoop_cloudera_c3::conf_pseudo",
              "ds_key": "",
              "attribute": {
                "port[jmxremote_port]": {
                  "port_type": "output",
                  "display_name": "port[jmxremote_port]",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "service_attribute",
                    "path": "service[hadoop_namenode][jmxremote_port]"
                  }
                },
                "port[jmxremote_password]": {
                  "port_type": "output",
                  "display_name": "port[jmxremote_password]",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "service_attribute",
                    "path": "service[hadoop_namenode][jmxremote_password]"
                  }
                }
              },
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
                "node_name": "i-fb486291"
              },
              "only_one_per_node": true
            }
          },
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-fb486291"
          },
          "ds_attributes": {
            "flavor": {
              "cores": 1,
              "bits": 32,
              "disk": 160,
              "name": "Small Instance",
              "ram": 1740.8,
              "id": "m1.small"
            },
            "groups": [
              "basic",
              "default"
            ]
          }
        },
        "i-97bb8ffd": {
          "type": "instance",
          "image_size": "0.17408E4",
          "display_name": "i-97bb8ffd",
          "ds_key": "[:ec2, :instance, \"i-97bb8ffd\"]",
          "operational_status": "stopped",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*network_partition_id": "/network_partition/basic__default"
            }
          },
          "ds_source_obj_type": "instance",
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-97bb8ffd"
          },
          "ds_attributes": {
            "flavor": {
              "cores": 1,
              "bits": 32,
              "disk": 160,
              "name": "Small Instance",
              "ram": 1740.8,
              "id": "m1.small"
            },
            "groups": [
              "basic",
              "default"
            ]
          }
        },
        "i-656e580f": {
          "type": "instance",
          "image_size": "0.17408E4",
          "display_name": "i-656e580f",
          "ds_key": "[:ec2, :instance, \"i-656e580f\"]",
          "operational_status": "stopped",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*network_partition_id": "/network_partition/basic__default"
            }
          },
          "ds_source_obj_type": "instance",
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-656e580f"
          },
          "ds_attributes": {
            "flavor": {
              "cores": 1,
              "bits": 32,
              "disk": 160,
              "name": "Small Instance",
              "ram": 1740.8,
              "id": "m1.small"
            },
            "groups": [
              "basic",
              "default"
            ]
          }
        },
        "i-33886f59": {
          "type": "instance",
          "image_size": "0.17408E4",
          "display_name": "i-33886f59",
          "ds_key": "[:ec2, :instance, \"i-33886f59\"]",
          "operational_status": "running",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "address": "10.248.110.165",
              "*network_partition_id": "/network_partition/basic__default"
            }
          },
          "ds_source_obj_type": "instance",
          "address_access_point": {
            "internet_ipv4": {
              "type": "internet",
              "display_name": "internet_ipv4",
              "network_address": {
                "address": "184.73.175.145",
                "family": "ipv4"
              },
              "*network_partition_id": "/network_partition/internet"
            }
          },
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-33886f59"
          },
          "ds_attributes": {
            "flavor": {
              "cores": 1,
              "bits": 32,
              "disk": 160,
              "name": "Small Instance",
              "ram": 1740.8,
              "id": "m1.small"
            },
            "groups": [
              "basic",
              "default"
            ]
          }
        },
        "i-335f0059": {
          "type": "instance",
          "image_size": "0.17408E4",
          "display_name": "i-335f0059",
          "ds_key": "[:ec2, :instance, \"i-335f0059\"]",
          "operational_status": "stopped",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*network_partition_id": "/network_partition/basic__default"
            }
          },
          "ds_source_obj_type": "instance",
          "os": "Ubuntu 9.10",
          "component": {
            "collectd::server": {
              "type": "instance",
              "display_name": "collectd::server",
              "ds_key": "",
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "collectd::server",
                "node_name": "i-335f0059"
              },
              "only_one_per_node": true
            }
          },
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-335f0059"
          },
          "ds_attributes": {
            "flavor": {
              "cores": 1,
              "bits": 32,
              "disk": 160,
              "name": "Small Instance",
              "ram": 1740.8,
              "id": "m1.small"
            },
            "groups": [
              "basic",
              "default"
            ]
          }
        },
        "i-bd39e2d7": {
          "type": "instance",
          "image_size": "0.17408E4",
          "display_name": "i-bd39e2d7",
          "tag": "test nagios client",
          "ds_key": "[:ec2, :instance, \"i-bd39e2d7\"]",
          "operational_status": "stopped",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*network_partition_id": "/network_partition/basic__default"
            }
          },
          "ds_source_obj_type": "instance",
          "os": "Ubuntu 9.10",
          "component": {
            "mysql::server2": {
              "type": "instance",
              "display_name": "mysql::server2",
              "ds_key": "",
              "attribute": {
                "var[bind_address]": {
                  "display_name": "var[bind_address]",
                  "description": "Address that mysqld should listen on",
                  "value_asserted": "10.254.185.190",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "chef_attribute",
                    "path": "node[mysql][bind_address]"
                  }
                },
                "var[tunable][key_buffer]": {
                  "display_name": "var[tunable][key_buffer]",
                  "value_asserted": "250M",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "chef_attribute",
                    "path": "node[mysql][tunable][key_buffer]"
                  }
                },
                "var[tunable][back_log]": {
                  "display_name": "var[tunable][back_log]",
                  "value_asserted": "128",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "chef_attribute",
                    "path": "node[mysql][tunable][back_log]"
                  }
                },
                "var[tunable][max_connections]": {
                  "display_name": "var[tunable][max_connections]",
                  "value_asserted": "800",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "chef_attribute",
                    "path": "node[mysql][tunable][max_connections]"
                  }
                },
                "var[tunable][wait_timeout]": {
                  "display_name": "var[tunable][wait_timeout]",
                  "value_asserted": "180",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "chef_attribute",
                    "path": "node[mysql][tunable][wait_timeout]"
                  }
                },
                "port[monitor_user_id]": {
                  "display_name": "port[monitor_user_id]",
                  "value_asserted": "root",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "service_attribute",
                    "path": "service[mysql_server][monitor_user_id]"
                  }
                },
                "var[server_root_password]": {
                  "display_name": "var[server_root_password]",
                  "description": "Randomly generated password for the mysqld root user",
                  "value_asserted": "tempt5",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "chef_attribute",
                    "path": "node[mysql][server_root_password]"
                  }
                },
                "var[tunable][max_heap_table_size]": {
                  "display_name": "var[tunable][max_heap_table_size]",
                  "value_asserted": "32M",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "chef_attribute",
                    "path": "node[mysql][tunable][max_heap_table_size]"
                  }
                },
                "var[tunable][net_write_timeout]": {
                  "display_name": "var[tunable][net_write_timeout]",
                  "value_asserted": "30",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "chef_attribute",
                    "path": "node[mysql][tunable][net_write_timeout]"
                  }
                },
                "var[datadir]": {
                  "display_name": "var[datadir]",
                  "description": "Location of mysql databases",
                  "value_asserted": "/var/lib/mysql",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "chef_attribute",
                    "path": "node[mysql][datadir]"
                  }
                },
                "var[tunable][net_read_timeout]": {
                  "display_name": "var[tunable][net_read_timeout]",
                  "value_asserted": "30",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "chef_attribute",
                    "path": "node[mysql][tunable][net_read_timeout]"
                  }
                },
                "var[ec2_path]": {
                  "display_name": "var[ec2_path]",
                  "description": "Location of mysql directory on EC2 instance EBS volumes",
                  "value_asserted": "/mnt/mysql",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "chef_attribute",
                    "path": "node[mysql][ec2_path]"
                  }
                },
                "port[db_info]": {
                  "display_name": "port[db_info]",
                  "value_asserted": [
                    {
                      "database": "mysql",
                      "password": "tempt5",
                      "username": "root"
                    }
                  ],
                  "data_type": "json",
                  "required": false,
                  "read_only": false,
                  "schema_if_json": {
                    ":required": {
                      ":array": {
                        "database": true,
                        "password": true,
                        "username": true
                      }
                    }
                  },
                  "is_array": false,
                  "external_ref": {
                    "type": "service_attribute",
                    "path": "service[mysql_server][db_info]"
                  }
                },
                "var[tunable][table_cache]": {
                  "display_name": "var[tunable][table_cache]",
                  "value_asserted": "128",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "chef_attribute",
                    "path": "node[mysql][tunable][table_cache]"
                  }
                }
              },
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "mysql::server2",
                "node_name": "i-bd39e2d7"
              },
              "basic_type": "service",
              "only_one_per_node": true
            },
            "chef_aux": {
              "type": "instance",
              "display_name": "chef_aux",
              "ds_key": "",
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "chef_aux",
                "node_name": "i-bd39e2d7"
              },
              "only_one_per_node": true
            },
            "nagios::client": {
              "type": "instance",
              "display_name": "nagios::client",
              "ds_key": "",
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "nagios::client",
                "node_name": "i-bd39e2d7"
              },
              "only_one_per_node": true
            },
            "redis": {
              "type": "instance",
              "display_name": "redis",
              "ds_key": "",
              "attribute": {
                "port[sap]": {
                  "display_name": "port[sap]",
                  "value_asserted": [
                    {
                      "type": "inet",
                      "port": "6379",
                      "protocol": "tcp"
                    }
                  ],
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "service_attribute",
                    "path": "service[redis_service][sap]"
                  }
                }
              },
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "redis",
                "node_name": "i-bd39e2d7"
              },
              "only_one_per_node": true
            },
            "rabbitmq": {
              "type": "instance",
              "display_name": "rabbitmq",
              "ds_key": "",
              "attribute": {
                "port[sap]": {
                  "display_name": "port[sap]",
                  "value_asserted": [
                    {
                      "type": "inet",
                      "port": 5672,
                      "protocol": "tcp"
                    }
                  ],
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "service_attribute",
                    "path": "service[rabbitmq][sap]"
                  }
                },
                "var[branch_tag]": {
                  "display_name": "var[branch_tag]",
                  "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "chef_attribute",
                    "path": "node[rabbitmq][branch_tag]"
                  }
                },
                "var[stomp][branch_tag]": {
                  "display_name": "var[stomp][branch_tag]",
                  "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "chef_attribute",
                    "path": "node[rabbitmq][stomp][branch_tag]"
                  }
                }
              },
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "rabbitmq",
                "node_name": "i-bd39e2d7"
              },
              "only_one_per_node": true
            }
          },
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-bd39e2d7"
          },
          "ds_attributes": {
            "flavor": {
              "cores": 1,
              "bits": 32,
              "disk": 160,
              "name": "Small Instance",
              "ram": 1740.8,
              "id": "m1.small"
            },
            "groups": [
              "basic",
              "default"
            ]
          }
        },
        "i-2f5b7a44": {
          "type": "instance",
          "image_size": "0.17408E4",
          "display_name": "i-2f5b7a44",
          "ds_key": "[:ec2, :instance, \"i-2f5b7a44\"]",
          "operational_status": "stopped",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*network_partition_id": "/network_partition/basic__default"
            }
          },
          "ds_source_obj_type": "instance",
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-2f5b7a44"
          },
          "ds_attributes": {
            "flavor": {
              "cores": 1,
              "bits": 32,
              "disk": 160,
              "name": "Small Instance",
              "ram": 1740.8,
              "id": "m1.small"
            },
            "groups": [
              "basic",
              "default"
            ]
          }
        },
        "i-9bad8cf1": {
          "type": "instance",
          "image_size": "0.17408E4",
          "display_name": "i-9bad8cf1",
          "ds_key": "[:ec2, :instance, \"i-9bad8cf1\"]",
          "operational_status": "stopped",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*network_partition_id": "/network_partition/basic__default"
            }
          },
          "ds_source_obj_type": "instance",
          "os": "Ubuntu 9.10",
          "component": {
            "postgresql::server": {
              "type": "instance",
              "display_name": "postgresql::server",
              "ds_key": "",
              "attribute": {
                "var[dir]": {
                  "port_type": "input",
                  "display_name": "var[dir]",
                  "description": "Location of the PostgreSQL databases",
                  "value_asserted": "/etc/postgresql/8.4/main",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "chef_attribute",
                    "path": "node[postgresql][dir]"
                  }
                }
              },
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "postgresql::server",
                "node_name": "i-9bad8cf1"
              },
              "only_one_per_node": true
            }
          },
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-9bad8cf1"
          },
          "ds_attributes": {
            "flavor": {
              "cores": 1,
              "bits": 32,
              "disk": 160,
              "name": "Small Instance",
              "ram": 1740.8,
              "id": "m1.small"
            },
            "groups": [
              "basic",
              "default"
            ]
          }
        },
        "i-c5f5afaf": {
          "type": "instance",
          "image_size": "0.17408E4",
          "display_name": "i-c5f5afaf",
          "ds_key": "[:ec2, :instance, \"i-c5f5afaf\"]",
          "operational_status": "stopped",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*network_partition_id": "/network_partition/basic__default"
            }
          },
          "ds_source_obj_type": "instance",
          "os": "Ubuntu 10.04.1 LTS",
          "component": {
            "chef_aux": {
              "type": "instance",
              "display_name": "chef_aux",
              "ds_key": "",
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "chef_aux",
                "node_name": "i-c5f5afaf"
              },
              "only_one_per_node": true
            },
            "collectd::server": {
              "type": "instance",
              "display_name": "collectd::server",
              "ds_key": "",
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "collectd::server",
                "node_name": "i-c5f5afaf"
              },
              "only_one_per_node": true
            },
            "hadoop_cloudera_c3::conf_pseudo": {
              "type": "instance",
              "display_name": "hadoop_cloudera_c3::conf_pseudo",
              "ds_key": "",
              "attribute": {
                "port[jmxremote_port]": {
                  "port_type": "output",
                  "display_name": "port[jmxremote_port]",
                  "value_asserted": "1618",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "service_attribute",
                    "path": "service[hadoop_namenode][jmxremote_port]"
                  }
                },
                "port[jmxremote_password]": {
                  "port_type": "output",
                  "display_name": "port[jmxremote_password]",
                  "value_asserted": "QED",
                  "data_type": "string",
                  "required": false,
                  "read_only": false,
                  "is_array": false,
                  "external_ref": {
                    "type": "service_attribute",
                    "path": "service[hadoop_namenode][jmxremote_password]"
                  }
                }
              },
              "external_ref": {
                "type": "chef_recipe_instance",
                "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
                "node_name": "i-c5f5afaf"
              },
              "only_one_per_node": true
            }
          },
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-c5f5afaf"
          },
          "ds_attributes": {
            "flavor": {
              "cores": 1,
              "bits": 32,
              "disk": 160,
              "name": "Small Instance",
              "ram": 1740.8,
              "id": "m1.small"
            },
            "groups": [
              "basic",
              "default"
            ]
          }
        },
        "i-07af096d": {
          "type": "instance",
          "image_size": "0.17408E4",
          "display_name": "i-07af096d",
          "ds_key": "[:ec2, :instance, \"i-07af096d\"]",
          "operational_status": "stopped",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*network_partition_id": "/network_partition/basic__default"
            }
          },
          "ds_source_obj_type": "instance",
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-07af096d"
          },
          "ds_attributes": {
            "flavor": {
              "cores": 1,
              "bits": 32,
              "disk": 160,
              "name": "Small Instance",
              "ram": 1740.8,
              "id": "m1.small"
            },
            "groups": [
              "basic",
              "default"
            ]
          }
        },
        "i-63775608": {
          "type": "instance",
          "image_size": "0.17408E4",
          "display_name": "i-63775608",
          "ds_key": "[:ec2, :instance, \"i-63775608\"]",
          "operational_status": "stopped",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0",
              "*network_partition_id": "/network_partition/basic__default"
            }
          },
          "ds_source_obj_type": "instance",
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_instance",
            "instance_id": "i-63775608"
          },
          "ds_attributes": {
            "flavor": {
              "cores": 1,
              "bits": 32,
              "disk": 160,
              "name": "Small Instance",
              "ram": 1740.8,
              "id": "m1.small"
            },
            "groups": [
              "basic",
              "default"
            ]
          }
        }
      },
      "data_source": {
        "chef": {
          "data_source_entry": {
            "node": {
              "data_source_entry": {
                "component_instance": {
                  "data_source_entry": {
                    "component_attribute": {
                      "ds_name": "chef",
                      "display_name": "component_attribute",
                      "ds_is_golden_store": true,
                      "obj_type": "attribute"
                    }
                  },
                  "ds_name": "chef",
                  "display_name": "component_instance",
                  "source_obj_type": "instance",
                  "ds_is_golden_store": true,
                  "obj_type": "component"
                }
              },
              "ds_name": "chef",
              "display_name": "node",
              "ds_is_golden_store": true,
              "obj_type": "node"
            }
          },
          "ds_name": "chef",
          "display_name": "chef",
          "last_collection_timestamp": "Thu Oct 07 19:33:48 +0000 2010"
        },
        "ec2": {
          "data_source_entry": {
            "node_group_member": {
              "ds_name": "ec2",
              "display_name": "node_group_member",
              "ds_is_golden_store": true,
              "obj_type": "node_group_member"
            },
            "node_group": {
              "ds_name": "ec2",
              "display_name": "node_group",
              "ds_is_golden_store": true,
              "obj_type": "node_group"
            },
            "network_partition": {
              "ds_name": "ec2",
              "display_name": "network_partition",
              "ds_is_golden_store": true,
              "obj_type": "network_partition"
            },
            "node_instance": {
              "ds_name": "ec2",
              "display_name": "node_instance",
              "source_obj_type": "instance",
              "ds_is_golden_store": true,
              "obj_type": "node"
            }
          },
          "ds_name": "ec2",
          "display_name": "ec2",
          "last_collection_timestamp": "Thu Oct 07 19:34:07 +0000 2010"
        },
        "user_data": {
          "data_source_entry": {
            "node": {
              "ds_name": "user_data",
              "display_name": "node",
              "ds_is_golden_store": true,
              "obj_type": "node"
            }
          },
          "ds_name": "user_data",
          "display_name": "user_data",
          "last_collection_timestamp": "Thu Oct 07 19:33:09 +0000 2010"
        }
      }
    }
  },
  "library": {
    "test": {
      "node": {
        "ami-6743ae0e": {
          "type": "image",
          "display_name": "ami-6743ae0e",
          "ds_key": "[:ec2, :image, \"ami-6743ae0e\"]",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0"
            }
          },
          "ds_source_obj_type": "image",
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_image",
            "image_id": "ami-6743ae0e"
          },
          "ds_attributes": {
            "type": "machine",
            "block_device_mapping": [
              {
                "snapshotId": "snap-5d6f2234",
                "deviceName": "/dev/sda1",
                "deleteOnTermination": "true",
                "volumeSize": "15"
              }
            ],
            "is_public": true,
            "state": "available",
            "root_device_type": "ebs",
            "ramdisk_id": "ari-d5709dbc",
            "location": "063491364108/ubuntu-9.10-karmic-server-i386-20100121",
            "owner_id": "063491364108",
            "product_codes": [

            ],
            "architecture": "i386",
            "id": "ami-6743ae0e",
            "root_device_name": "/dev/sda1",
            "platform": null,
            "kernel_id": "aki-5f15f636"
          }
        },
        "ami-06c72c6f": {
          "type": "image",
          "display_name": "ami-06c72c6f",
          "ds_key": "[:ec2, :image, \"ami-06c72c6f\"]",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0"
            }
          },
          "ds_source_obj_type": "image",
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_image",
            "image_id": "ami-06c72c6f"
          },
          "ds_attributes": {
            "type": "machine",
            "block_device_mapping": [
              {
                "snapshotId": "snap-caa459a1",
                "deviceName": "/dev/sda1",
                "deleteOnTermination": "true",
                "volumeSize": "15"
              }
            ],
            "is_public": false,
            "state": "available",
            "root_device_type": "ebs",
            "ramdisk_id": "ari-d5709dbc",
            "location": "411986592491/rnp-chef-09-6-ubuntu-910-x86_32",
            "owner_id": "411986592491",
            "product_codes": [

            ],
            "architecture": "i386",
            "id": "ami-06c72c6f",
            "root_device_name": "/dev/sda1",
            "platform": null,
            "kernel_id": "aki-5f15f636"
          }
        },
        "ami-bf3ad3d6": {
          "type": "image",
          "display_name": "ami-bf3ad3d6",
          "ds_key": "[:ec2, :image, \"ami-bf3ad3d6\"]",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0"
            }
          },
          "ds_source_obj_type": "image",
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_image",
            "image_id": "ami-bf3ad3d6"
          },
          "ds_attributes": {
            "type": "machine",
            "block_device_mapping": [
              {
                "snapshotId": "snap-324cdb5a",
                "deviceName": "/dev/sda1",
                "deleteOnTermination": "true",
                "volumeSize": "15"
              }
            ],
            "is_public": false,
            "state": "available",
            "root_device_type": "ebs",
            "ramdisk_id": "ari-d5709dbc",
            "location": "411986592491/rnp-chef-server-0816-ubuntu-910-x86_32",
            "owner_id": "411986592491",
            "product_codes": [

            ],
            "architecture": "i386",
            "id": "ami-bf3ad3d6",
            "root_device_name": "/dev/sda1",
            "platform": null,
            "kernel_id": "aki-5f15f636"
          }
        },
        "ami-693ad300": {
          "type": "image",
          "display_name": "ami-693ad300",
          "ds_key": "[:ec2, :image, \"ami-693ad300\"]",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0"
            }
          },
          "ds_source_obj_type": "image",
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_image",
            "image_id": "ami-693ad300"
          },
          "ds_attributes": {
            "type": "machine",
            "block_device_mapping": [
              {
                "snapshotId": "snap-3c57c054",
                "deviceName": "/dev/sda1",
                "deleteOnTermination": "true",
                "volumeSize": "15"
              }
            ],
            "is_public": false,
            "state": "available",
            "root_device_type": "ebs",
            "ramdisk_id": "ari-d5709dbc",
            "location": "411986592491/rnp-chef-0816-ubuntu-910-x86_32",
            "owner_id": "411986592491",
            "product_codes": [

            ],
            "architecture": "i386",
            "id": "ami-693ad300",
            "root_device_name": "/dev/sda1",
            "platform": null,
            "kernel_id": "aki-5f15f636"
          }
        },
        "ami-28ee1b41": {
          "type": "image",
          "display_name": "ami-28ee1b41",
          "ds_key": "[:ec2, :image, \"ami-28ee1b41\"]",
          "node_interface": {
            "eth0": {
              "type": "ethernet",
              "display_name": "eth0"
            }
          },
          "ds_source_obj_type": "image",
          "data_source": "ec2",
          "monitoring_item": {
            "check_ping": {
              "display_name": "check_ping",
              "description": "ping",
              "enabled": true
            },
            "check_mem": {
              "display_name": "check_mem",
              "description": "Free Memory",
              "enabled": true
            },
            "check_local_procs": {
              "display_name": "check_local_procs",
              "description": "Processes",
              "enabled": true
            },
            "check_all_disks": {
              "display_name": "check_all_disks",
              "description": "Free Space All Disks",
              "enabled": true
            },
            "check_memory_profiler": {
              "display_name": "check_memory_profiler",
              "description": "Memory Profiler",
              "enabled": true
            },
            "check_iostat": {
              "display_name": "check_iostat",
              "description": "Iostat",
              "enabled": true
            },
            "check_ssh": {
              "display_name": "check_ssh",
              "description": "SSH",
              "enabled": true
            }
          },
          "is_deployed": true,
          "external_ref": {
            "type": "ec2_image",
            "image_id": "ami-28ee1b41"
          },
          "ds_attributes": {
            "type": "machine",
            "block_device_mapping": [
              {
                "snapshotId": "snap-1cfdda77",
                "deviceName": "/dev/sda1",
                "deleteOnTermination": "true",
                "volumeSize": "15"
              }
            ],
            "is_public": false,
            "state": "available",
            "root_device_type": "ebs",
            "ramdisk_id": "ari-d5709dbc",
            "location": "411986592491//rnp-chef-09-8-ubuntu-910-x86_32",
            "owner_id": "411986592491",
            "product_codes": [

            ],
            "architecture": "i386",
            "id": "ami-28ee1b41",
            "root_device_name": "/dev/sda1",
            "platform": null,
            "kernel_id": "aki-5f15f636"
          }
        }
      },
      "component": {
        "hadoop::conf_pseudo": {
          "type": "template",
          "display_name": "hadoop::conf_pseudo",
          "description": "Installs hadoop-conf-pseudo and enables hadoop services",
          "ds_key": "[:chef, :template, \"hadoop::conf_pseudo\"]",
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "hadoop::conf_pseudo"
          },
          "ds_attributes": {
            "description": "Installs hadoop-conf-pseudo and enables hadoop services",
            "recipe_name": "hadoop::conf_pseudo",
            "monitoring_items": {
            },
            "attributes": {
            },
            "basic_type": null
          },
          "only_one_per_node": true
        },
        "hadoop::pig": {
          "type": "template",
          "display_name": "hadoop::pig",
          "description": "Installs hadoop's pig package",
          "ds_key": "[:chef, :template, \"hadoop::pig\"]",
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "hadoop::pig"
          },
          "ds_attributes": {
            "description": "Installs hadoop's pig package",
            "recipe_name": "hadoop::pig",
            "monitoring_items": {
            },
            "attributes": {
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "hadoop-pig.png",
              "tiny": "",
              "display": "hadoop-pig.png"
            }
          }
        },
        "hadoop_cloudera_c3": {
          "type": "template",
          "display_name": "hadoop_cloudera_c3",
          "description": "Installs hadoop from Cloudera's repo",
          "ds_key": "[:chef, :template, \"hadoop_cloudera_c3\"]",
          "attribute": {
            "port[jmxremote_port]": {
              "port_type": "output",
              "display_name": "port[jmxremote_port]",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[hadoop_namenode][jmxremote_port]"
              }
            },
            "port[jmxremote_password]": {
              "port_type": "output",
              "display_name": "port[jmxremote_password]",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[hadoop_namenode][jmxremote_password]"
              }
            }
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "hadoop_cloudera_c3"
          },
          "ds_attributes": {
            "description": "Installs hadoop from Cloudera's repo",
            "recipe_name": "hadoop_cloudera_c3",
            "monitoring_items": {
            },
            "attributes": {
              "hadoop_cloudera_c3/jmxremote_port": {
                "type": "string",
                "port_type": "output",
                "recipes": [

                ],
                "value": null,
                "transform": {
                  "__ref": "node[hadoop][jmxremote][namenode][port]"
                },
                "required": "optional",
                "is_service_attribute": true,
                "service_name": "hadoop_namenode",
                "calculated": false,
                "choice": [

                ]
              },
              "hadoop_cloudera_c3/jmxremote_password": {
                "type": "string",
                "port_type": "output",
                "recipes": [

                ],
                "value": null,
                "transform": {
                  "__ref": "node[hadoop][jmxremote][password]"
                },
                "required": "optional",
                "is_service_attribute": true,
                "service_name": "hadoop_namenode",
                "calculated": false,
                "choice": [

                ]
              }
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "cloudera.png",
              "tiny": "",
              "display": "cloudera.png"
            }
          }
        },
        "postgresql::server": {
          "type": "template",
          "display_name": "postgresql::server",
          "description": "Installs postgresql server packages, templates",
          "ds_key": "[:chef, :template, \"postgresql::server\"]",
          "attribute": {
            "var[dir]": {
              "port_type": "input",
              "display_name": "var[dir]",
              "description": "Location of the PostgreSQL databases",
              "value_asserted": "/etc/postgresql/8.3/main",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[postgresql][dir]"
              }
            }
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "postgresql::server"
          },
          "ds_attributes": {
            "description": "Installs postgresql server packages, templates",
            "recipe_name": "postgresql::server",
            "monitoring_items": {
            },
            "attributes": {
              "postgresql/dir": {
                "type": "string",
                "port_type": "input",
                "display_name": "PostgreSQL Directory",
                "description": "Location of the PostgreSQL databases",
                "recipes": [

                ],
                "value": "/etc/postgresql/8.3/main",
                "required": "optional",
                "calculated": false,
                "default": "/etc/postgresql/8.3/main",
                "choice": [

                ]
              }
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "postgres.png",
              "tiny": "",
              "display": "postgres.png"
            }
          }
        },
        "chef_aux": {
          "type": "template",
          "display_name": "chef_aux",
          "description": "",
          "ds_key": "[:chef, :template, \"chef_aux\"]",
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "chef_aux"
          },
          "ds_attributes": {
            "description": "",
            "recipe_name": "chef_aux",
            "monitoring_items": {
            },
            "attributes": {
            },
            "basic_type": null
          },
          "only_one_per_node": true
        },
        "postgresql::client": {
          "type": "template",
          "display_name": "postgresql::client",
          "description": "Installs postgresql client package(s)",
          "ds_key": "[:chef, :template, \"postgresql::client\"]",
          "attribute": {
            "var[dir]": {
              "port_type": "input",
              "display_name": "var[dir]",
              "description": "Location of the PostgreSQL databases",
              "value_asserted": "/etc/postgresql/8.3/main",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[postgresql][dir]"
              }
            }
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "postgresql::client"
          },
          "ds_attributes": {
            "description": "Installs postgresql client package(s)",
            "recipe_name": "postgresql::client",
            "monitoring_items": {
            },
            "attributes": {
              "postgresql/dir": {
                "type": "string",
                "port_type": "input",
                "display_name": "PostgreSQL Directory",
                "description": "Location of the PostgreSQL databases",
                "recipes": [

                ],
                "value": "/etc/postgresql/8.3/main",
                "required": "optional",
                "calculated": false,
                "default": "/etc/postgresql/8.3/main",
                "choice": [

                ]
              }
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "postgres.png",
              "tiny": "",
              "display": "postgres.png"
            }
          }
        },
        "mysql::server2": {
          "type": "template",
          "display_name": "mysql::server2",
          "description": "Installs packages required for mysql servers w/o manual intervention",
          "ds_key": "[:chef, :template, \"mysql::server2\"]",
          "attribute": {
            "var[bind_address]": {
              "display_name": "var[bind_address]",
              "description": "Address that mysqld should listen on",
              "value_asserted": "ipaddress",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][bind_address]"
              }
            },
            "var[tunable][key_buffer]": {
              "display_name": "var[tunable][key_buffer]",
              "value_asserted": "250M",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][key_buffer]"
              }
            },
            "var[tunable][back_log]": {
              "display_name": "var[tunable][back_log]",
              "value_asserted": "128",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][back_log]"
              }
            },
            "var[tunable][max_connections]": {
              "display_name": "var[tunable][max_connections]",
              "value_asserted": "800",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][max_connections]"
              }
            },
            "var[tunable][wait_timeout]": {
              "display_name": "var[tunable][wait_timeout]",
              "value_asserted": "180",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][wait_timeout]"
              }
            },
            "port[monitor_user_id]": {
              "display_name": "port[monitor_user_id]",
              "value_asserted": "root",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[mysql_server][monitor_user_id]"
              }
            },
            "var[server_root_password]": {
              "display_name": "var[server_root_password]",
              "description": "Randomly generated password for the mysqld root user",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][server_root_password]"
              }
            },
            "var[tunable][max_heap_table_size]": {
              "display_name": "var[tunable][max_heap_table_size]",
              "value_asserted": "32M",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][max_heap_table_size]"
              }
            },
            "var[tunable][net_write_timeout]": {
              "display_name": "var[tunable][net_write_timeout]",
              "value_asserted": "30",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][net_write_timeout]"
              }
            },
            "var[datadir]": {
              "display_name": "var[datadir]",
              "description": "Location of mysql databases",
              "value_asserted": "/var/lib/mysql",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][datadir]"
              }
            },
            "var[tunable][net_read_timeout]": {
              "display_name": "var[tunable][net_read_timeout]",
              "value_asserted": "30",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][net_read_timeout]"
              }
            },
            "var[ec2_path]": {
              "display_name": "var[ec2_path]",
              "description": "Location of mysql directory on EC2 instance EBS volumes",
              "value_asserted": "/mnt/mysql",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][ec2_path]"
              }
            },
            "port[db_info]": {
              "display_name": "port[db_info]",
              "value_asserted": [
                {
                  "database": "mysql",
                  "password": null,
                  "username": "root"
                }
              ],
              "data_type": "json",
              "required": false,
              "read_only": false,
              "schema_if_json": {
                ":required": {
                  ":array": {
                    "database": true,
                    "password": true,
                    "username": true
                  }
                }
              },
              "is_array": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[mysql_server][db_info]"
              }
            },
            "var[tunable][table_cache]": {
              "display_name": "var[tunable][table_cache]",
              "value_asserted": "128",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][table_cache]"
              }
            }
          },
          "monitoring_item": {
            "mysql_basic_health": {
              "display_name": "mysql_basic_health",
              "enabled": true
            },
            "inet_service_up": {
              "display_name": "inet_service_up",
              "enabled": true
            }
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "mysql::server2"
          },
          "basic_type": "service",
          "ds_attributes": {
            "description": "Installs packages required for mysql servers w/o manual intervention",
            "recipe_name": "mysql::server2",
            "monitoring_items": {
              "mysql_basic_health": {
                "condition_description": "the user 'monitor_user_id' should be able to log into this service",
                "enabled": true,
                "applicability_conditions": [
                  "lambda{|p|p[:db_info] and p[:db_info].find{|x|x[:username] == p[:monitor_user_id]}}"
                ],
                "params": [
                  "db_info",
                  "monitor_user_id"
                ],
                "service_name": "mysql_server",
                "name": "mysql_basic_health",
                "condition_name": null
              },
              "inet_service_up": {
                "condition_description": "this service should be accessible over tcp",
                "enabled": true,
                "params": [
                  "sap"
                ],
                "service_name": "mysql_server",
                "name": "inet_service_up",
                "condition_name": "accessible_over_tcp"
              }
            },
            "attributes": {
              "mysql/tunable/net_read_timeout": {
                "type": "string",
                "display_name": "MySQL Tunable Net Read Timeout",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "30",
                "required": "optional",
                "calculated": false,
                "default": "30",
                "choice": [

                ]
              },
              "mysql/bind_address": {
                "type": "string",
                "display_name": "MySQL Bind Address",
                "description": "Address that mysqld should listen on",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "ipaddress",
                "required": "optional",
                "calculated": false,
                "default": "ipaddress",
                "choice": [

                ]
              },
              "mysql/tunable/max_connections": {
                "type": "string",
                "display_name": "MySQL Tunable Max Connections",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "800",
                "required": "optional",
                "calculated": false,
                "default": "800",
                "choice": [

                ]
              },
              "mysql/datadir": {
                "type": "string",
                "display_name": "MySQL Data Directory",
                "description": "Location of mysql databases",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "/var/lib/mysql",
                "required": "optional",
                "calculated": false,
                "default": "/var/lib/mysql",
                "choice": [

                ]
              },
              "mysql/tunable/table_cache": {
                "type": "string",
                "display_name": "MySQL Tunable Table Cache",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "128",
                "required": "optional",
                "calculated": false,
                "default": "128",
                "choice": [

                ]
              },
              "mysql/server_root_password": {
                "type": "string",
                "display_name": "MySQL Server Root Password",
                "description": "Randomly generated password for the mysqld root user",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "required": "optional",
                "calculated": false,
                "choice": [

                ]
              },
              "mysql/db_info": {
                "type": "string",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "monitoring_input": "true",
                "value": [
                  {
                    "database": "mysql",
                    "password": null,
                    "username": "root"
                  }
                ],
                "transform": [
                  {
                    "database": "mysql",
                    "password": {
                      "__ref": "node[mysql][server_root_password]"
                    },
                    "username": "root"
                  }
                ],
                "required": "optional",
                "is_service_attribute": true,
                "service_name": "mysql_server",
                "calculated": false,
                "choice": [

                ]
              },
              "mysql/ec2_path": {
                "type": "string",
                "display_name": "MySQL EC2 Path",
                "description": "Location of mysql directory on EC2 instance EBS volumes",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "/mnt/mysql",
                "required": "optional",
                "calculated": false,
                "default": "/mnt/mysql",
                "choice": [

                ]
              },
              "mysql/monitor_user_id": {
                "type": "string",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "monitoring_input": "true",
                "value": "root",
                "transform": "root",
                "required": "optional",
                "is_service_attribute": true,
                "service_name": "mysql_server",
                "calculated": false,
                "choice": [

                ]
              },
              "mysql/tunable/wait_timeout": {
                "type": "string",
                "display_name": "MySQL Tunable Wait Timeout",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "180",
                "required": "optional",
                "calculated": false,
                "default": "180",
                "choice": [

                ]
              },
              "mysql/tunable/key_buffer": {
                "type": "string",
                "display_name": "MySQL Tuntable Key Buffer",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "250M",
                "required": "optional",
                "calculated": false,
                "default": "250M",
                "choice": [

                ]
              },
              "mysql/tunable/back_log": {
                "type": "string",
                "display_name": "MySQL Tunable Back Log",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "128",
                "required": "optional",
                "calculated": false,
                "default": "128",
                "choice": [

                ]
              },
              "mysql/tunable/net_write_timeout": {
                "type": "string",
                "display_name": "MySQL Tunable Net Write Timeout",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "30",
                "required": "optional",
                "calculated": false,
                "default": "30",
                "choice": [

                ]
              },
              "mysql/tunable/max_heap_table_size": {
                "type": "string",
                "display_name": "MySQL Tunable Max Heap Table Size",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "32M",
                "required": "optional",
                "calculated": false,
                "default": "32M",
                "choice": [

                ]
              }
            },
            "basic_type": "service"
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "mysql.png",
              "tiny": "",
              "display": "mysql.png"
            }
          }
        },
        "hadoop::hive": {
          "type": "template",
          "display_name": "hadoop::hive",
          "description": "Installs hadoop's hive package",
          "ds_key": "[:chef, :template, \"hadoop::hive\"]",
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "hadoop::hive"
          },
          "ds_attributes": {
            "description": "Installs hadoop's hive package",
            "recipe_name": "hadoop::hive",
            "monitoring_items": {
            },
            "attributes": {
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "hadoop-hive.png",
              "tiny": "",
              "display": "hadoop-hive.png"
            }
          }
        },
        "nagios": {
          "type": "template",
          "display_name": "nagios",
          "description": "Empty, use one of the other recipes",
          "ds_key": "[:chef, :template, \"nagios\"]",
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "nagios"
          },
          "ds_attributes": {
            "description": "Empty, use one of the other recipes",
            "recipe_name": "nagios",
            "monitoring_items": {
            },
            "attributes": {
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "nagios.png",
              "tiny": "",
              "display": "nagios.png"
            }
          }
        },
        "rabbitmq::edge_stomp": {
          "type": "template",
          "display_name": "rabbitmq::edge_stomp",
          "description": "Set up RabbitMQ-stomp adapter from source mercurial repository.",
          "ds_key": "[:chef, :template, \"rabbitmq::edge_stomp\"]",
          "attribute": {
            "port[sap]": {
              "display_name": "port[sap]",
              "value_asserted": [
                {
                  "type": "inet",
                  "port": 5672,
                  "protocol": "tcp"
                }
              ],
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[rabbitmq][sap]"
              }
            },
            "var[branch_tag]": {
              "display_name": "var[branch_tag]",
              "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
              "value_asserted": "default",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[rabbitmq][branch_tag]"
              }
            },
            "var[stomp][branch_tag]": {
              "display_name": "var[stomp][branch_tag]",
              "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
              "value_asserted": "default",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[rabbitmq][stomp][branch_tag]"
              }
            }
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "rabbitmq::edge_stomp"
          },
          "ds_attributes": {
            "description": "Set up RabbitMQ-stomp adapter from source mercurial repository.",
            "recipe_name": "rabbitmq::edge_stomp",
            "monitoring_items": {
            },
            "attributes": {
              "rabbitmq/stomp/branch_tag": {
                "type": "string",
                "display_name": "RabbitMQ-stomp adapter tag/branch name",
                "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
                "recipes": [

                ],
                "value": "default",
                "required": "optional",
                "calculated": false,
                "default": "default",
                "choice": [

                ]
              },
              "rabbitmq/branch_tag": {
                "type": "string",
                "display_name": "RabbitMQ tag/branch name",
                "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
                "recipes": [

                ],
                "value": "default",
                "required": "optional",
                "calculated": false,
                "default": "default",
                "choice": [

                ]
              },
              "rabbitmq/sap": {
                "type": "string",
                "recipes": [

                ],
                "value": [
                  {
                    "type": "inet",
                    "port": 5672,
                    "protocol": "tcp"
                  }
                ],
                "transform": [
                  {
                    "type": "inet",
                    "port": 5672,
                    "protocol": "tcp"
                  }
                ],
                "required": "optional",
                "is_service_attribute": true,
                "service_name": "rabbitmq",
                "calculated": false,
                "choice": [

                ]
              }
            },
            "basic_type": null
          },
          "only_one_per_node": true
        },
        "mysql::client_app1": {
          "type": "template",
          "display_name": "mysql::client_app1",
          "description": "Sample client application that connects to a mysql database",
          "ds_key": "[:chef, :template, \"mysql::client_app1\"]",
          "attribute": {
            "port[sap_ref]": {
              "port_type": "output",
              "display_name": "port[sap_ref]",
              "description": "Service access point reference",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[mysql_server][sap_ref]"
              },
              "semantic_type": {
                "sap_ref": {
                  "application": "sql::mysql"
                }
              }
            }
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "mysql::client_app1"
          },
          "basic_type": "application",
          "ds_attributes": {
            "description": "Sample client application that connects to a mysql database",
            "recipe_name": "mysql::client_app1",
            "monitoring_items": {
            },
            "attributes": {
              "mysql/sap_ref": {
                "type": "string",
                "port_type": "output",
                "description": "Service access point reference",
                "recipes": [
                  "mysql::client_app1"
                ],
                "required": "optional",
                "is_service_attribute": true,
                "service_name": "mysql_server",
                "calculated": false,
                "semantic_type": {
                  "sap_ref": {
                    "application": "sql::mysql"
                  }
                },
                "choice": [

                ]
              }
            },
            "basic_type": "application"
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "mysql.png",
              "tiny": "",
              "display": "mysql.png"
            }
          }
        },
        "mysql::client": {
          "type": "template",
          "display_name": "mysql::client",
          "description": "Installs packages required for mysql clients using run_action magic",
          "ds_key": "[:chef, :template, \"mysql::client\"]",
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "mysql::client"
          },
          "basic_type": "package",
          "ds_attributes": {
            "description": "Installs packages required for mysql clients using run_action magic",
            "recipe_name": "mysql::client",
            "monitoring_items": {
            },
            "attributes": {
            },
            "basic_type": "package"
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "mysql.png",
              "tiny": "",
              "display": "mysql.png"
            }
          }
        },
        "java_sun": {
          "type": "template",
          "display_name": "java_sun",
          "description": "Installs Sun Java using preseed to accept terms",
          "ds_key": "[:chef, :template, \"java_sun\"]",
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "java_sun"
          },
          "ds_attributes": {
            "description": "Installs Sun Java using preseed to accept terms",
            "recipe_name": "java_sun",
            "monitoring_items": {
            },
            "attributes": {
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "java-01.png",
              "tiny": "",
              "display": "java-01.png"
            }
          }
        },
        "java": {
          "type": "template",
          "display_name": "java",
          "description": "Installs openjdk to provide Java",
          "ds_key": "[:chef, :template, \"java\"]",
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "java"
          },
          "ds_attributes": {
            "description": "Installs openjdk to provide Java",
            "recipe_name": "java",
            "monitoring_items": {
            },
            "attributes": {
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "java-01.png",
              "tiny": "",
              "display": "java-01.png"
            }
          }
        },
        "hadoop": {
          "type": "template",
          "display_name": "hadoop",
          "description": "Installs hadoop from Cloudera's repo",
          "ds_key": "[:chef, :template, \"hadoop\"]",
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "hadoop"
          },
          "ds_attributes": {
            "description": "Installs hadoop from Cloudera's repo",
            "recipe_name": "hadoop",
            "monitoring_items": {
            },
            "attributes": {
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "hadoop.png",
              "tiny": "",
              "display": "hadoop.png"
            }
          }
        },
        "rabbitmq::edge": {
          "type": "template",
          "display_name": "rabbitmq::edge",
          "description": "Set up RabbitMQ from source mercurial repository.",
          "ds_key": "[:chef, :template, \"rabbitmq::edge\"]",
          "attribute": {
            "port[sap]": {
              "display_name": "port[sap]",
              "value_asserted": [
                {
                  "type": "inet",
                  "port": 5672,
                  "protocol": "tcp"
                }
              ],
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[rabbitmq][sap]"
              }
            },
            "var[branch_tag]": {
              "display_name": "var[branch_tag]",
              "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
              "value_asserted": "default",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[rabbitmq][branch_tag]"
              }
            },
            "var[stomp][branch_tag]": {
              "display_name": "var[stomp][branch_tag]",
              "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
              "value_asserted": "default",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[rabbitmq][stomp][branch_tag]"
              }
            }
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "rabbitmq::edge"
          },
          "ds_attributes": {
            "description": "Set up RabbitMQ from source mercurial repository.",
            "recipe_name": "rabbitmq::edge",
            "monitoring_items": {
            },
            "attributes": {
              "rabbitmq/stomp/branch_tag": {
                "type": "string",
                "display_name": "RabbitMQ-stomp adapter tag/branch name",
                "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
                "recipes": [

                ],
                "value": "default",
                "required": "optional",
                "calculated": false,
                "default": "default",
                "choice": [

                ]
              },
              "rabbitmq/branch_tag": {
                "type": "string",
                "display_name": "RabbitMQ tag/branch name",
                "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
                "recipes": [

                ],
                "value": "default",
                "required": "optional",
                "calculated": false,
                "default": "default",
                "choice": [

                ]
              },
              "rabbitmq/sap": {
                "type": "string",
                "recipes": [

                ],
                "value": [
                  {
                    "type": "inet",
                    "port": 5672,
                    "protocol": "tcp"
                  }
                ],
                "transform": [
                  {
                    "type": "inet",
                    "port": 5672,
                    "protocol": "tcp"
                  }
                ],
                "required": "optional",
                "is_service_attribute": true,
                "service_name": "rabbitmq",
                "calculated": false,
                "choice": [

                ]
              }
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "rabbitmq.png",
              "tiny": "",
              "display": "rabbitmq.png"
            }
          }
        },
        "rabbitmq::default": {
          "type": "template",
          "display_name": "rabbitmq::default",
          "description": "Set up RabbitMQ from rabbitmq.com debian repository.",
          "ds_key": "[:chef, :template, \"rabbitmq::default\"]",
          "attribute": {
            "port[sap]": {
              "display_name": "port[sap]",
              "value_asserted": [
                {
                  "type": "inet",
                  "port": 5672,
                  "protocol": "tcp"
                }
              ],
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[rabbitmq][sap]"
              }
            },
            "var[branch_tag]": {
              "display_name": "var[branch_tag]",
              "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
              "value_asserted": "default",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[rabbitmq][branch_tag]"
              }
            },
            "var[stomp][branch_tag]": {
              "display_name": "var[stomp][branch_tag]",
              "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
              "value_asserted": "default",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[rabbitmq][stomp][branch_tag]"
              }
            }
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "rabbitmq::default"
          },
          "ds_attributes": {
            "description": "Set up RabbitMQ from rabbitmq.com debian repository.",
            "recipe_name": "rabbitmq::default",
            "monitoring_items": {
            },
            "attributes": {
              "rabbitmq/stomp/branch_tag": {
                "type": "string",
                "display_name": "RabbitMQ-stomp adapter tag/branch name",
                "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
                "recipes": [

                ],
                "value": "default",
                "required": "optional",
                "calculated": false,
                "default": "default",
                "choice": [

                ]
              },
              "rabbitmq/branch_tag": {
                "type": "string",
                "display_name": "RabbitMQ tag/branch name",
                "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
                "recipes": [

                ],
                "value": "default",
                "required": "optional",
                "calculated": false,
                "default": "default",
                "choice": [

                ]
              },
              "rabbitmq/sap": {
                "type": "string",
                "recipes": [

                ],
                "value": [
                  {
                    "type": "inet",
                    "port": 5672,
                    "protocol": "tcp"
                  }
                ],
                "transform": [
                  {
                    "type": "inet",
                    "port": 5672,
                    "protocol": "tcp"
                  }
                ],
                "required": "optional",
                "is_service_attribute": true,
                "service_name": "rabbitmq",
                "calculated": false,
                "choice": [

                ]
              }
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "rabbitmq.png",
              "tiny": "",
              "display": "rabbitmq.png"
            }
          }
        },
        "mysql::server_ec2": {
          "type": "template",
          "display_name": "mysql::server_ec2",
          "description": "Performs EC2-specific mountpoint manipulation",
          "ds_key": "[:chef, :template, \"mysql::server_ec2\"]",
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "mysql::server_ec2"
          },
          "ds_attributes": {
            "description": "Performs EC2-specific mountpoint manipulation",
            "recipe_name": "mysql::server_ec2",
            "monitoring_items": {
            },
            "attributes": {
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "mysql.png",
              "tiny": "",
              "display": "mysql.png"
            }
          }
        },
        "nagios::client": {
          "type": "template",
          "display_name": "nagios::client",
          "description": "Installs and configures a nagios client with nrpe",
          "ds_key": "[:chef, :template, \"nagios::client\"]",
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "nagios::client"
          },
          "ds_attributes": {
            "description": "Installs and configures a nagios client with nrpe",
            "recipe_name": "nagios::client",
            "monitoring_items": {
            },
            "attributes": {
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "nagios.png",
              "tiny": "",
              "display": "nagios.png"
            }
          }
        },
        "hadoop_cloudera_c3::conf_pseudo": {
          "type": "template",
          "display_name": "hadoop_cloudera_c3::conf_pseudo",
          "description": "Installs hadoop-conf-pseudo and enables hadoop services",
          "ds_key": "[:chef, :template, \"hadoop_cloudera_c3::conf_pseudo\"]",
          "attribute": {
            "port[jmxremote_port]": {
              "port_type": "output",
              "display_name": "port[jmxremote_port]",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[hadoop_namenode][jmxremote_port]"
              }
            },
            "port[jmxremote_password]": {
              "port_type": "output",
              "display_name": "port[jmxremote_password]",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[hadoop_namenode][jmxremote_password]"
              }
            }
          },
          "monitoring_item": {
            "check_hadoop_namenode_remotely": {
              "display_name": "check_hadoop_namenode_remotely",
              "enabled": true
            },
            "check_hadoop_datanode_remotely": {
              "display_name": "check_hadoop_datanode_remotely",
              "enabled": true
            },
            "check_hadoop_dfs": {
              "display_name": "check_hadoop_dfs",
              "enabled": true
            },
            "check_hadoop_namenode_jmx": {
              "display_name": "check_hadoop_namenode_jmx",
              "enabled": true
            }
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "hadoop_cloudera_c3::conf_pseudo"
          },
          "ds_attributes": {
            "description": "Installs hadoop-conf-pseudo and enables hadoop services",
            "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
            "monitoring_items": {
              "check_hadoop_namenode_remotely": {
                "condition_description": "this service should be accessible over tcp",
                "enabled": true,
                "service_name": "hadoop_namenode",
                "name": "check_hadoop_namenode_remotely",
                "condition_name": "accessible_over_tcp"
              },
              "check_hadoop_datanode_remotely": {
                "condition_description": "this service should be accessible over tcp",
                "enabled": true,
                "service_name": "hadoop_datanode",
                "name": "check_hadoop_datanode_remotely",
                "condition_name": "accessible_over_tcp"
              },
              "check_hadoop_dfs": {
                "condition_description": "a hadoop dfs report is available",
                "enabled": true,
                "service_name": "hadoop_namenode",
                "name": "check_hadoop_dfs",
                "condition_name": null
              },
              "check_hadoop_namenode_jmx": {
                "condition_description": "jmx attributes are monitored",
                "enabled": true,
                "attributes_to_monitor": [
                  {
                    "attribute": "FilesTotal",
                    "object_name": "hadoop:name=FSNamesystemState,service=NameNode",
                    "critical": ">1000000",
                    "warning": ">750000"
                  },
                  {
                    "attribute": "CapacityTotal",
                    "object_name": "hadoop:name=FSNamesystemState,service=NameNode",
                    "critical": "<20000000",
                    "warning": ""
                  },
                  {
                    "attribute": "HeapMemoryUsage.used",
                    "object_name": "java.lang:type=Memory",
                    "critical": "",
                    "warning": ""
                  }
                ],
                "params": [
                  "jmxremote_port",
                  "jmxremote_password"
                ],
                "service_name": "hadoop_namenode",
                "name": "check_hadoop_namenode_jmx",
                "condition_name": null
              }
            },
            "attributes": {
              "hadoop_cloudera_c3/jmxremote_port": {
                "type": "string",
                "port_type": "output",
                "recipes": [

                ],
                "value": null,
                "transform": {
                  "__ref": "node[hadoop][jmxremote][namenode][port]"
                },
                "required": "optional",
                "is_service_attribute": true,
                "service_name": "hadoop_namenode",
                "calculated": false,
                "choice": [

                ]
              },
              "hadoop_cloudera_c3/jmxremote_password": {
                "type": "string",
                "port_type": "output",
                "recipes": [

                ],
                "value": null,
                "transform": {
                  "__ref": "node[hadoop][jmxremote][password]"
                },
                "required": "optional",
                "is_service_attribute": true,
                "service_name": "hadoop_namenode",
                "calculated": false,
                "choice": [

                ]
              }
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "cloudera.png",
              "tiny": "",
              "display": "cloudera.png"
            }
          }
        },
        "mysql::server": {
          "type": "template",
          "display_name": "mysql::server",
          "description": "Installs packages required for mysql servers w/o manual intervention",
          "ds_key": "[:chef, :template, \"mysql::server\"]",
          "attribute": {
            "var[bind_address]": {
              "display_name": "var[bind_address]",
              "description": "Address that mysqld should listen on",
              "value_asserted": "ipaddress",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][bind_address]"
              }
            },
            "var[tunable][key_buffer]": {
              "display_name": "var[tunable][key_buffer]",
              "value_asserted": "250M",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][key_buffer]"
              }
            },
            "var[tunable][back_log]": {
              "display_name": "var[tunable][back_log]",
              "value_asserted": "128",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][back_log]"
              }
            },
            "var[tunable][max_connections]": {
              "display_name": "var[tunable][max_connections]",
              "value_asserted": "800",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][max_connections]"
              }
            },
            "var[tunable][wait_timeout]": {
              "display_name": "var[tunable][wait_timeout]",
              "value_asserted": "180",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][wait_timeout]"
              }
            },
            "port[monitor_user_id]": {
              "display_name": "port[monitor_user_id]",
              "value_asserted": "root",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[mysql_server][monitor_user_id]"
              }
            },
            "var[server_root_password]": {
              "display_name": "var[server_root_password]",
              "description": "Randomly generated password for the mysqld root user",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][server_root_password]"
              }
            },
            "var[tunable][max_heap_table_size]": {
              "display_name": "var[tunable][max_heap_table_size]",
              "value_asserted": "32M",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][max_heap_table_size]"
              }
            },
            "var[tunable][net_write_timeout]": {
              "display_name": "var[tunable][net_write_timeout]",
              "value_asserted": "30",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][net_write_timeout]"
              }
            },
            "var[datadir]": {
              "display_name": "var[datadir]",
              "description": "Location of mysql databases",
              "value_asserted": "/var/lib/mysql",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][datadir]"
              }
            },
            "var[tunable][net_read_timeout]": {
              "display_name": "var[tunable][net_read_timeout]",
              "value_asserted": "30",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][net_read_timeout]"
              }
            },
            "var[ec2_path]": {
              "display_name": "var[ec2_path]",
              "description": "Location of mysql directory on EC2 instance EBS volumes",
              "value_asserted": "/mnt/mysql",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][ec2_path]"
              }
            },
            "port[db_info]": {
              "display_name": "port[db_info]",
              "value_asserted": [
                {
                  "database": "mysql",
                  "password": null,
                  "username": "root"
                }
              ],
              "data_type": "json",
              "required": false,
              "read_only": false,
              "schema_if_json": {
                ":required": {
                  ":array": {
                    "database": true,
                    "password": true,
                    "username": true
                  }
                }
              },
              "is_array": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[mysql_server][db_info]"
              }
            },
            "var[tunable][table_cache]": {
              "display_name": "var[tunable][table_cache]",
              "value_asserted": "128",
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][table_cache]"
              }
            }
          },
          "monitoring_item": {
            "mysql_basic_health": {
              "display_name": "mysql_basic_health",
              "enabled": true
            },
            "inet_service_up": {
              "display_name": "inet_service_up",
              "enabled": true
            }
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "mysql::server"
          },
          "basic_type": "service",
          "ds_attributes": {
            "description": "Installs packages required for mysql servers w/o manual intervention",
            "recipe_name": "mysql::server",
            "monitoring_items": {
              "mysql_basic_health": {
                "condition_description": "the user 'monitor_user_id' should be able to log into this service",
                "enabled": true,
                "applicability_conditions": [
                  "lambda{|p|p[:db_info] and p[:db_info].find{|x|x[:username] == p[:monitor_user_id]}}"
                ],
                "params": [
                  "db_info",
                  "monitor_user_id"
                ],
                "service_name": "mysql_server",
                "name": "mysql_basic_health",
                "condition_name": null
              },
              "inet_service_up": {
                "condition_description": "this service should be accessible over tcp",
                "enabled": true,
                "params": [
                  "sap"
                ],
                "service_name": "mysql_server",
                "name": "inet_service_up",
                "condition_name": "accessible_over_tcp"
              }
            },
            "attributes": {
              "mysql/tunable/net_read_timeout": {
                "type": "string",
                "display_name": "MySQL Tunable Net Read Timeout",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "30",
                "required": "optional",
                "calculated": false,
                "default": "30",
                "choice": [

                ]
              },
              "mysql/bind_address": {
                "type": "string",
                "display_name": "MySQL Bind Address",
                "description": "Address that mysqld should listen on",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "ipaddress",
                "required": "optional",
                "calculated": false,
                "default": "ipaddress",
                "choice": [

                ]
              },
              "mysql/tunable/max_connections": {
                "type": "string",
                "display_name": "MySQL Tunable Max Connections",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "800",
                "required": "optional",
                "calculated": false,
                "default": "800",
                "choice": [

                ]
              },
              "mysql/datadir": {
                "type": "string",
                "display_name": "MySQL Data Directory",
                "description": "Location of mysql databases",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "/var/lib/mysql",
                "required": "optional",
                "calculated": false,
                "default": "/var/lib/mysql",
                "choice": [

                ]
              },
              "mysql/tunable/table_cache": {
                "type": "string",
                "display_name": "MySQL Tunable Table Cache",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "128",
                "required": "optional",
                "calculated": false,
                "default": "128",
                "choice": [

                ]
              },
              "mysql/server_root_password": {
                "type": "string",
                "display_name": "MySQL Server Root Password",
                "description": "Randomly generated password for the mysqld root user",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "required": "optional",
                "calculated": false,
                "choice": [

                ]
              },
              "mysql/db_info": {
                "type": "string",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "monitoring_input": "true",
                "value": [
                  {
                    "database": "mysql",
                    "password": null,
                    "username": "root"
                  }
                ],
                "transform": [
                  {
                    "database": "mysql",
                    "password": {
                      "__ref": "node[mysql][server_root_password]"
                    },
                    "username": "root"
                  }
                ],
                "required": "optional",
                "is_service_attribute": true,
                "service_name": "mysql_server",
                "calculated": false,
                "choice": [

                ]
              },
              "mysql/ec2_path": {
                "type": "string",
                "display_name": "MySQL EC2 Path",
                "description": "Location of mysql directory on EC2 instance EBS volumes",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "/mnt/mysql",
                "required": "optional",
                "calculated": false,
                "default": "/mnt/mysql",
                "choice": [

                ]
              },
              "mysql/monitor_user_id": {
                "type": "string",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "monitoring_input": "true",
                "value": "root",
                "transform": "root",
                "required": "optional",
                "is_service_attribute": true,
                "service_name": "mysql_server",
                "calculated": false,
                "choice": [

                ]
              },
              "mysql/tunable/wait_timeout": {
                "type": "string",
                "display_name": "MySQL Tunable Wait Timeout",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "180",
                "required": "optional",
                "calculated": false,
                "default": "180",
                "choice": [

                ]
              },
              "mysql/tunable/key_buffer": {
                "type": "string",
                "display_name": "MySQL Tuntable Key Buffer",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "250M",
                "required": "optional",
                "calculated": false,
                "default": "250M",
                "choice": [

                ]
              },
              "mysql/tunable/back_log": {
                "type": "string",
                "display_name": "MySQL Tunable Back Log",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "128",
                "required": "optional",
                "calculated": false,
                "default": "128",
                "choice": [

                ]
              },
              "mysql/tunable/net_write_timeout": {
                "type": "string",
                "display_name": "MySQL Tunable Net Write Timeout",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "30",
                "required": "optional",
                "calculated": false,
                "default": "30",
                "choice": [

                ]
              },
              "mysql/tunable/max_heap_table_size": {
                "type": "string",
                "display_name": "MySQL Tunable Max Heap Table Size",
                "recipes": [
                  "mysql::server",
                  "mysql::server2"
                ],
                "value": "32M",
                "required": "optional",
                "calculated": false,
                "default": "32M",
                "choice": [

                ]
              }
            },
            "basic_type": "service"
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "mysql.png",
              "tiny": "",
              "display": "mysql.png"
            }
          }
        },
        "redis": {
          "type": "template",
          "display_name": "redis",
          "description": "Installs/Configures redis",
          "ds_key": "[:chef, :template, \"redis\"]",
          "attribute": {
            "port[sap]": {
              "display_name": "port[sap]",
              "value_asserted": [
                {
                  "type": "inet",
                  "port": null,
                  "protocol": "tcp"
                }
              ],
              "data_type": "string",
              "required": false,
              "read_only": false,
              "is_array": false,
              "external_ref": {
                "type": "service_attribute",
                "path": "service[redis_service][sap]"
              }
            }
          },
          "monitoring_item": {
            "inet_service_up": {
              "display_name": "inet_service_up",
              "enabled": true
            },
            "redis_basic_health": {
              "display_name": "redis_basic_health",
              "enabled": true
            }
          },
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "redis"
          },
          "ds_attributes": {
            "description": "Installs/Configures redis",
            "recipe_name": "redis",
            "monitoring_items": {
              "redis_basic_health": {
                "condition_description": "anonymous user should be able to log into this service",
                "enabled": true,
                "params": [
                  "sap"
                ],
                "service_name": "redis_service",
                "name": "redis_basic_health",
                "condition_name": null
              },
              "inet_service_up": {
                "condition_description": "this service should be accessible over tcp",
                "enabled": true,
                "params": [
                  "sap"
                ],
                "service_name": "redis_service",
                "name": "inet_service_up",
                "condition_name": "accessible_over_tcp"
              }
            },
            "attributes": {
              "redis/sap": {
                "type": "string",
                "recipes": [

                ],
                "value": [
                  {
                    "type": "inet",
                    "port": null,
                    "protocol": "tcp"
                  }
                ],
                "transform": [
                  {
                    "type": "inet",
                    "port": {
                      "__ref": "node[redis][port]"
                    },
                    "protocol": "tcp"
                  }
                ],
                "required": "optional",
                "is_service_attribute": true,
                "service_name": "redis_service",
                "calculated": false,
                "choice": [

                ]
              }
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "redis.png",
              "tiny": "",
              "display": "redis.png"
            }
          }
        },
        "hadoop::doc": {
          "type": "template",
          "display_name": "hadoop::doc",
          "description": "Installs hadoop documentation",
          "ds_key": "[:chef, :template, \"hadoop::doc\"]",
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "hadoop::doc"
          },
          "ds_attributes": {
            "description": "Installs hadoop documentation",
            "recipe_name": "hadoop::doc",
            "monitoring_items": {
            },
            "attributes": {
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "hadoop.png",
              "tiny": "",
              "display": "hadoop.png"
            }
          }
        },
        "nagios::server": {
          "type": "template",
          "display_name": "nagios::server",
          "description": "Installs and configures a nagios server",
          "ds_key": "[:chef, :template, \"nagios::server\"]",
          "external_ref": {
            "type": "chef_recipe",
            "recipe_name": "nagios::server"
          },
          "ds_attributes": {
            "description": "Installs and configures a nagios server",
            "recipe_name": "nagios::server",
            "monitoring_items": {
            },
            "attributes": {
            },
            "basic_type": null
          },
          "only_one_per_node": true,
          "ui": {
            "images": {
              "tnail": "nagios.png",
              "tiny": "",
              "display": "nagios.png"
            }
          }
        }
      },
      "data_source": {
        "chef": {
          "data_source_entry": {
            "component_recipe": {
              "data_source_entry": {
                "component_monitoring_item": {
                  "ds_name": "chef",
                  "display_name": "component_monitoring_item",
                  "ds_is_golden_store": true,
                  "obj_type": "monitoring_item"
                },
                "component_attribute": {
                  "ds_name": "chef",
                  "display_name": "component_attribute",
                  "ds_is_golden_store": true,
                  "obj_type": "attribute"
                }
              },
              "ds_name": "chef",
              "display_name": "component_recipe",
              "source_obj_type": "recipe",
              "ds_is_golden_store": true,
              "obj_type": "component"
            }
          },
          "ds_name": "chef",
          "display_name": "chef",
          "last_collection_timestamp": "Thu Oct 07 19:31:56 +0000 2010"
        },
        "ec2": {
          "data_source_entry": {
            "node_image": {
              "ds_name": "ec2",
              "display_name": "node_image",
              "source_obj_type": "image",
              "ds_is_golden_store": true,
              "obj_type": "node"
            }
          },
          "ds_name": "ec2",
          "display_name": "ec2",
          "last_collection_timestamp": "Thu Oct 07 19:32:08 +0000 2010"
        },
        "user_data": {
          "data_source_entry": {
            "component": {
              "ds_name": "user_data",
              "display_name": "component",
              "ds_is_golden_store": true,
              "obj_type": "component"
            }
          },
          "ds_name": "user_data",
          "display_name": "user_data",
          "last_collection_timestamp": "Thu Oct 07 19:31:37 +0000 2010"
        }
      },
      "search_object": {
        "test1": {
          "display_name": "test1",
          "search_pattern": {
            ":filter": [
              ":and",
              [
                ":match-prefix",
                ":display_name",
                "port[db_info]"
              ]
            ],
            ":columns": [
              ":display_name",
              ":attribute_value",
              ":is_unset"
            ],
            ":paging": {
            },
            ":relation": ":attribute",
            ":order_by": [

            ]
          },
          "relation": "attribute"
        }
      }
    }
  }
}

{
  "network_partition": {
    "internet": {
      "is_deployed": false,
      "is_internet": false,
      "display_name": "internet",
      "ds_key": ""
    },
    "basic__default": {
      "is_deployed": false,
      "is_internet": false,
      "display_name": "basic__default",
      "ds_key": "[:ec2, \"basic__default\"]"
    }
  },
  "node": {
    "i-4fc62e25": {
      "ds_source_obj_type": "instance",
      "external_ref": {
        "type": "ec2_instance",
        "instance_id": "i-4fc62e25"
      },
      "type": "instance",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "flavor": {
          "bits": 32,
          "disk": 160,
          "ram": 1740.8,
          "name": "Small Instance",
          "id": "m1.small",
          "cores": 1
        },
        "groups": [
          "basic",
          "default"
        ]
      },
      "operational_status": "stopped",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "*network_partition_id": "/network_partition/basic__default",
          "display_name": "eth0"
        }
      },
      "display_name": "i-4fc62e25",
      "ds_key": "[:ec2, :instance, \"i-4fc62e25\"]"
    },
    "i-7550141f": {
      "ds_source_obj_type": "instance",
      "external_ref": {
        "type": "ec2_instance",
        "instance_id": "i-7550141f"
      },
      "type": "instance",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "os": "Ubuntu 9.10",
      "component": {
        "chef_aux": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-7550141f",
            "recipe_name": "chef_aux"
          },
          "type": "instance",
          "only_one_per_node": true,
          "display_name": "chef_aux",
          "ds_key": ""
        },
        "java_sun": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-7550141f",
            "recipe_name": "java_sun"
          },
          "type": "instance",
          "only_one_per_node": true,
          "display_name": "java_sun",
          "ds_key": ""
        }
      },
      "image_size": "0.17408E4",
      "ds_attributes": {
        "flavor": {
          "bits": 32,
          "disk": 160,
          "ram": 1740.8,
          "name": "Small Instance",
          "id": "m1.small",
          "cores": 1
        },
        "groups": [
          "basic",
          "default"
        ]
      },
      "operational_status": "stopped",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "*network_partition_id": "/network_partition/basic__default",
          "display_name": "eth0"
        }
      },
      "display_name": "i-7550141f",
      "ds_key": "[:ec2, :instance, \"i-7550141f\"]"
    },
    "ami-6743ae0e": {
      "ds_source_obj_type": "image",
      "external_ref": {
        "type": "ec2_image",
        "image_id": "ami-6743ae0e"
      },
      "type": "image",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "ds_attributes": {
        "state": "available",
        "type": "machine",
        "root_device_name": "/dev/sda1",
        "architecture": "i386",
        "owner_id": "063491364108",
        "kernel_id": "aki-5f15f636",
        "location": "063491364108/ubuntu-9.10-karmic-server-i386-20100121",
        "block_device_mapping": [
          {
            "deleteOnTermination": "true",
            "volumeSize": "15",
            "snapshotId": "snap-5d6f2234",
            "deviceName": "/dev/sda1"
          }
        ],
        "root_device_type": "ebs",
        "platform": null,
        "is_public": true,
        "ramdisk_id": "ari-d5709dbc",
        "id": "ami-6743ae0e",
        "product_codes": [

        ]
      },
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "ami-6743ae0e",
      "ds_key": "[:ec2, :image, \"ami-6743ae0e\"]"
    },
    "ami-06c72c6f": {
      "ds_source_obj_type": "image",
      "external_ref": {
        "type": "ec2_image",
        "image_id": "ami-06c72c6f"
      },
      "type": "image",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "ds_attributes": {
        "state": "available",
        "type": "machine",
        "root_device_name": "/dev/sda1",
        "architecture": "i386",
        "owner_id": "411986592491",
        "kernel_id": "aki-5f15f636",
        "location": "411986592491/rnp-chef-09-6-ubuntu-910-x86_32",
        "block_device_mapping": [
          {
            "deleteOnTermination": "true",
            "volumeSize": "15",
            "snapshotId": "snap-caa459a1",
            "deviceName": "/dev/sda1"
          }
        ],
        "root_device_type": "ebs",
        "platform": null,
        "is_public": false,
        "ramdisk_id": "ari-d5709dbc",
        "id": "ami-06c72c6f",
        "product_codes": [

        ]
      },
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "ami-06c72c6f",
      "ds_key": "[:ec2, :image, \"ami-06c72c6f\"]"
    },
    "i-c1b527ab": {
      "ds_source_obj_type": "instance",
      "external_ref": {
        "type": "ec2_instance",
        "instance_id": "i-c1b527ab"
      },
      "type": "instance",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "os": "Ubuntu 9.10",
      "component": {
        "chef_aux": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-c1b527ab",
            "recipe_name": "chef_aux"
          },
          "type": "instance",
          "only_one_per_node": true,
          "display_name": "chef_aux",
          "ds_key": ""
        },
        "java_sun": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-c1b527ab",
            "recipe_name": "java_sun"
          },
          "type": "instance",
          "only_one_per_node": true,
          "display_name": "java_sun",
          "ds_key": ""
        },
        "nagios::client": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-c1b527ab",
            "recipe_name": "nagios::client"
          },
          "type": "instance",
          "only_one_per_node": true,
          "display_name": "nagios::client",
          "ds_key": ""
        }
      },
      "image_size": "0.17408E4",
      "ds_attributes": {
        "flavor": {
          "bits": 32,
          "disk": 160,
          "ram": 1740.8,
          "name": "Small Instance",
          "id": "m1.small",
          "cores": 1
        },
        "groups": [
          "basic",
          "default"
        ]
      },
      "operational_status": "stopped",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "*network_partition_id": "/network_partition/basic__default",
          "display_name": "eth0"
        }
      },
      "display_name": "i-c1b527ab",
      "ds_key": "[:ec2, :instance, \"i-c1b527ab\"]"
    },
    "i-374b945d": {
      "ds_source_obj_type": "instance",
      "external_ref": {
        "type": "ec2_instance",
        "instance_id": "i-374b945d"
      },
      "type": "instance",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "os": "Ubuntu 9.10",
      "component": {
        "hadoop::conf_pseudo": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-374b945d",
            "recipe_name": "hadoop::conf_pseudo"
          },
          "type": "instance",
          "only_one_per_node": true,
          "display_name": "hadoop::conf_pseudo",
          "ds_key": ""
        },
        "hadoop": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-374b945d",
            "recipe_name": "hadoop"
          },
          "type": "instance",
          "only_one_per_node": true,
          "display_name": "hadoop",
          "ds_key": ""
        },
        "hudson": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-374b945d",
            "recipe_name": "hudson"
          },
          "type": "instance",
          "only_one_per_node": true,
          "display_name": "hudson",
          "ds_key": ""
        }
      },
      "image_size": "0.17408E4",
      "ds_attributes": {
        "flavor": {
          "bits": 32,
          "disk": 160,
          "ram": 1740.8,
          "name": "Small Instance",
          "id": "m1.small",
          "cores": 1
        },
        "groups": [
          "basic",
          "default"
        ]
      },
      "operational_status": "stopped",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "*network_partition_id": "/network_partition/basic__default",
          "display_name": "eth0"
        }
      },
      "display_name": "i-374b945d",
      "ds_key": "[:ec2, :instance, \"i-374b945d\"]"
    },
    "i-fb486291": {
      "ds_source_obj_type": "instance",
      "external_ref": {
        "type": "ec2_instance",
        "instance_id": "i-fb486291"
      },
      "type": "instance",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "os": "Ubuntu 9.10",
      "component": {
        "chef_aux": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-fb486291",
            "recipe_name": "chef_aux"
          },
          "type": "instance",
          "only_one_per_node": true,
          "display_name": "chef_aux",
          "ds_key": ""
        },
        "hadoop_cloudera_c3::conf_pseudo": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-fb486291",
            "recipe_name": "hadoop_cloudera_c3::conf_pseudo"
          },
          "type": "instance",
          "only_one_per_node": true,
          "attribute": {
            "port[jmxremote_port]": {
              "external_ref": {
                "type": "service_attribute",
                "path": "service[hadoop_namenode][jmxremote_port]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "port_type": "output",
              "propagation_type": "immediate",
              "display_name": "port[jmxremote_port]",
              "output_variable": false
            },
            "port[jmxremote_password]": {
              "external_ref": {
                "type": "service_attribute",
                "path": "service[hadoop_namenode][jmxremote_password]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "port_type": "output",
              "propagation_type": "immediate",
              "display_name": "port[jmxremote_password]",
              "output_variable": false
            }
          },
          "display_name": "hadoop_cloudera_c3::conf_pseudo",
          "ds_key": ""
        }
      },
      "image_size": "0.17408E4",
      "ds_attributes": {
        "flavor": {
          "bits": 32,
          "disk": 160,
          "ram": 1740.8,
          "name": "Small Instance",
          "id": "m1.small",
          "cores": 1
        },
        "groups": [
          "basic",
          "default"
        ]
      },
      "operational_status": "stopped",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "*network_partition_id": "/network_partition/basic__default",
          "display_name": "eth0"
        }
      },
      "display_name": "i-fb486291",
      "ds_key": "[:ec2, :instance, \"i-fb486291\"]"
    },
    "i-97bb8ffd": {
      "ds_source_obj_type": "instance",
      "external_ref": {
        "type": "ec2_instance",
        "instance_id": "i-97bb8ffd"
      },
      "type": "instance",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "flavor": {
          "bits": 32,
          "disk": 160,
          "ram": 1740.8,
          "name": "Small Instance",
          "id": "m1.small",
          "cores": 1
        },
        "groups": [
          "basic",
          "default"
        ]
      },
      "operational_status": "stopped",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "*network_partition_id": "/network_partition/basic__default",
          "display_name": "eth0"
        }
      },
      "display_name": "i-97bb8ffd",
      "ds_key": "[:ec2, :instance, \"i-97bb8ffd\"]"
    },
    "i-656e580f": {
      "ds_source_obj_type": "instance",
      "external_ref": {
        "type": "ec2_instance",
        "instance_id": "i-656e580f"
      },
      "type": "instance",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "flavor": {
          "bits": 32,
          "disk": 160,
          "ram": 1740.8,
          "name": "Small Instance",
          "id": "m1.small",
          "cores": 1
        },
        "groups": [
          "basic",
          "default"
        ]
      },
      "operational_status": "stopped",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "*network_partition_id": "/network_partition/basic__default",
          "display_name": "eth0"
        }
      },
      "display_name": "i-656e580f",
      "ds_key": "[:ec2, :instance, \"i-656e580f\"]"
    },
    "i-33886f59": {
      "address_access_point": {
        "internet_ipv4": {
          "type": "internet",
          "network_address": {
            "address": "184.73.175.145",
            "family": "ipv4"
          },
          "*network_partition_id": "/network_partition/internet",
          "display_name": "internet_ipv4"
        }
      },
      "ds_source_obj_type": "instance",
      "external_ref": {
        "type": "ec2_instance",
        "instance_id": "i-33886f59"
      },
      "type": "instance",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "flavor": {
          "bits": 32,
          "disk": 160,
          "ram": 1740.8,
          "name": "Small Instance",
          "id": "m1.small",
          "cores": 1
        },
        "groups": [
          "basic",
          "default"
        ]
      },
      "operational_status": "running",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "address": "10.206.243.147",
          "*network_partition_id": "/network_partition/basic__default",
          "display_name": "eth0"
        }
      },
      "display_name": "i-33886f59",
      "ds_key": "[:ec2, :instance, \"i-33886f59\"]",
      "tag": "chef server 9.8"
    },
    "ami-bf3ad3d6": {
      "ds_source_obj_type": "image",
      "external_ref": {
        "type": "ec2_image",
        "image_id": "ami-bf3ad3d6"
      },
      "type": "image",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "ds_attributes": {
        "state": "available",
        "type": "machine",
        "root_device_name": "/dev/sda1",
        "architecture": "i386",
        "owner_id": "411986592491",
        "kernel_id": "aki-5f15f636",
        "location": "411986592491/rnp-chef-server-0816-ubuntu-910-x86_32",
        "block_device_mapping": [
          {
            "deleteOnTermination": "true",
            "volumeSize": "15",
            "snapshotId": "snap-324cdb5a",
            "deviceName": "/dev/sda1"
          }
        ],
        "root_device_type": "ebs",
        "platform": null,
        "is_public": false,
        "ramdisk_id": "ari-d5709dbc",
        "id": "ami-bf3ad3d6",
        "product_codes": [

        ]
      },
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "ami-bf3ad3d6",
      "ds_key": "[:ec2, :image, \"ami-bf3ad3d6\"]"
    },
    "ami-693ad300": {
      "ds_source_obj_type": "image",
      "external_ref": {
        "type": "ec2_image",
        "image_id": "ami-693ad300"
      },
      "type": "image",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "ds_attributes": {
        "state": "available",
        "type": "machine",
        "root_device_name": "/dev/sda1",
        "architecture": "i386",
        "owner_id": "411986592491",
        "kernel_id": "aki-5f15f636",
        "location": "411986592491/rnp-chef-0816-ubuntu-910-x86_32",
        "block_device_mapping": [
          {
            "deleteOnTermination": "true",
            "volumeSize": "15",
            "snapshotId": "snap-3c57c054",
            "deviceName": "/dev/sda1"
          }
        ],
        "root_device_type": "ebs",
        "platform": null,
        "is_public": false,
        "ramdisk_id": "ari-d5709dbc",
        "id": "ami-693ad300",
        "product_codes": [

        ]
      },
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "ami-693ad300",
      "ds_key": "[:ec2, :image, \"ami-693ad300\"]"
    },
    "i-335f0059": {
      "ds_source_obj_type": "instance",
      "external_ref": {
        "type": "ec2_instance",
        "instance_id": "i-335f0059"
      },
      "type": "instance",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "os": "Ubuntu 9.10",
      "component": {
        "collectd::server": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-335f0059",
            "recipe_name": "collectd::server"
          },
          "type": "instance",
          "only_one_per_node": true,
          "display_name": "collectd::server",
          "ds_key": ""
        }
      },
      "image_size": "0.17408E4",
      "ds_attributes": {
        "flavor": {
          "bits": 32,
          "disk": 160,
          "ram": 1740.8,
          "name": "Small Instance",
          "id": "m1.small",
          "cores": 1
        },
        "groups": [
          "basic",
          "default"
        ]
      },
      "operational_status": "stopped",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "*network_partition_id": "/network_partition/basic__default",
          "display_name": "eth0"
        }
      },
      "display_name": "i-335f0059",
      "ds_key": "[:ec2, :instance, \"i-335f0059\"]"
    },
    "i-bd39e2d7": {
      "ds_source_obj_type": "instance",
      "external_ref": {
        "type": "ec2_instance",
        "instance_id": "i-bd39e2d7"
      },
      "type": "instance",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "os": "Ubuntu 9.10",
      "component": {
        "mysql::server2": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-bd39e2d7",
            "recipe_name": "mysql::server2"
          },
          "type": "instance",
          "only_one_per_node": true,
          "attribute": {
            "var[bind_address]": {
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][bind_address]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "10.254.185.190",
              "propagation_type": "immediate",
              "display_name": "var[bind_address]",
              "description": "Address that mysqld should listen on",
              "output_variable": false
            },
            "var[tunable][key_buffer]": {
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][key_buffer]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "250M",
              "propagation_type": "immediate",
              "display_name": "var[tunable][key_buffer]",
              "output_variable": false
            },
            "var[tunable][back_log]": {
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][back_log]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "128",
              "propagation_type": "immediate",
              "display_name": "var[tunable][back_log]",
              "output_variable": false
            },
            "var[tunable][max_connections]": {
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][max_connections]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "800",
              "propagation_type": "immediate",
              "display_name": "var[tunable][max_connections]",
              "output_variable": false
            },
            "var[tunable][wait_timeout]": {
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][wait_timeout]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "180",
              "propagation_type": "immediate",
              "display_name": "var[tunable][wait_timeout]",
              "output_variable": false
            },
            "port[monitor_user_id]": {
              "external_ref": {
                "type": "service_attribute",
                "path": "service[mysql_server][monitor_user_id]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "root",
              "propagation_type": "immediate",
              "display_name": "port[monitor_user_id]",
              "output_variable": false
            },
            "var[server_root_password]": {
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][server_root_password]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "tempt5",
              "propagation_type": "immediate",
              "display_name": "var[server_root_password]",
              "description": "Randomly generated password for the mysqld root user",
              "output_variable": false
            },
            "var[tunable][max_heap_table_size]": {
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][max_heap_table_size]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "32M",
              "propagation_type": "immediate",
              "display_name": "var[tunable][max_heap_table_size]",
              "output_variable": false
            },
            "var[tunable][net_write_timeout]": {
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][net_write_timeout]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "30",
              "propagation_type": "immediate",
              "display_name": "var[tunable][net_write_timeout]",
              "output_variable": false
            },
            "var[datadir]": {
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][datadir]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "/var/lib/mysql",
              "propagation_type": "immediate",
              "display_name": "var[datadir]",
              "description": "Location of mysql databases",
              "output_variable": false
            },
            "var[tunable][net_read_timeout]": {
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][net_read_timeout]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "30",
              "propagation_type": "immediate",
              "display_name": "var[tunable][net_read_timeout]",
              "output_variable": false
            },
            "var[ec2_path]": {
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][ec2_path]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "/mnt/mysql",
              "propagation_type": "immediate",
              "display_name": "var[ec2_path]",
              "description": "Location of mysql directory on EC2 instance EBS volumes",
              "output_variable": false
            },
            "port[db_info]": {
              "external_ref": {
                "type": "service_attribute",
                "path": "service[mysql_server][db_info]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": [
                {
                  "database": "mysql",
                  "password": "tempt5",
                  "username": "root"
                }
              ],
              "propagation_type": "immediate",
              "display_name": "port[db_info]",
              "output_variable": false
            },
            "var[tunable][table_cache]": {
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[mysql][tunable][table_cache]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "128",
              "propagation_type": "immediate",
              "display_name": "var[tunable][table_cache]",
              "output_variable": false
            }
          },
          "display_name": "mysql::server2",
          "ds_key": "",
          "basic_type": "service"
        },
        "chef_aux": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-bd39e2d7",
            "recipe_name": "chef_aux"
          },
          "type": "instance",
          "only_one_per_node": true,
          "display_name": "chef_aux",
          "ds_key": ""
        },
        "nagios::client": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-bd39e2d7",
            "recipe_name": "nagios::client"
          },
          "type": "instance",
          "only_one_per_node": true,
          "display_name": "nagios::client",
          "ds_key": ""
        },
        "redis": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-bd39e2d7",
            "recipe_name": "redis"
          },
          "type": "instance",
          "only_one_per_node": true,
          "attribute": {
            "port[sap]": {
              "external_ref": {
                "type": "service_attribute",
                "path": "service[redis_service][sap]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": [
                {
                  "type": "inet",
                  "protocol": "tcp",
                  "port": "6379"
                }
              ],
              "propagation_type": "immediate",
              "display_name": "port[sap]",
              "output_variable": false
            }
          },
          "display_name": "redis",
          "ds_key": ""
        },
        "rabbitmq": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-bd39e2d7",
            "recipe_name": "rabbitmq"
          },
          "type": "instance",
          "only_one_per_node": true,
          "attribute": {
            "port[sap]": {
              "external_ref": {
                "type": "service_attribute",
                "path": "service[rabbitmq][sap]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": [
                {
                  "type": "inet",
                  "protocol": "tcp",
                  "port": 5672
                }
              ],
              "propagation_type": "immediate",
              "display_name": "port[sap]",
              "output_variable": false
            },
            "var[branch_tag]": {
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[rabbitmq][branch_tag]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "propagation_type": "immediate",
              "display_name": "var[branch_tag]",
              "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
              "output_variable": false
            },
            "var[stomp][branch_tag]": {
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[rabbitmq][stomp][branch_tag]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "propagation_type": "immediate",
              "display_name": "var[stomp][branch_tag]",
              "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
              "output_variable": false
            }
          },
          "display_name": "rabbitmq",
          "ds_key": ""
        }
      },
      "image_size": "0.17408E4",
      "ds_attributes": {
        "flavor": {
          "bits": 32,
          "disk": 160,
          "ram": 1740.8,
          "name": "Small Instance",
          "id": "m1.small",
          "cores": 1
        },
        "groups": [
          "basic",
          "default"
        ]
      },
      "operational_status": "stopped",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "*network_partition_id": "/network_partition/basic__default",
          "display_name": "eth0"
        }
      },
      "display_name": "i-bd39e2d7",
      "ds_key": "[:ec2, :instance, \"i-bd39e2d7\"]",
      "tag": "test3 nagios client"
    },
    "i-2f5b7a44": {
      "ds_source_obj_type": "instance",
      "external_ref": {
        "type": "ec2_instance",
        "instance_id": "i-2f5b7a44"
      },
      "type": "instance",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "flavor": {
          "bits": 32,
          "disk": 160,
          "ram": 1740.8,
          "name": "Small Instance",
          "id": "m1.small",
          "cores": 1
        },
        "groups": [
          "basic",
          "default"
        ]
      },
      "operational_status": "stopped",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "*network_partition_id": "/network_partition/basic__default",
          "display_name": "eth0"
        }
      },
      "display_name": "i-2f5b7a44",
      "ds_key": "[:ec2, :instance, \"i-2f5b7a44\"]"
    },
    "ami-28ee1b41": {
      "ds_source_obj_type": "image",
      "external_ref": {
        "type": "ec2_image",
        "image_id": "ami-28ee1b41"
      },
      "type": "image",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "ds_attributes": {
        "state": "available",
        "type": "machine",
        "root_device_name": "/dev/sda1",
        "architecture": "i386",
        "owner_id": "411986592491",
        "kernel_id": "aki-5f15f636",
        "location": "411986592491//rnp-chef-09-8-ubuntu-910-x86_32",
        "block_device_mapping": [
          {
            "deleteOnTermination": "true",
            "volumeSize": "15",
            "snapshotId": "snap-1cfdda77",
            "deviceName": "/dev/sda1"
          }
        ],
        "root_device_type": "ebs",
        "platform": null,
        "is_public": false,
        "ramdisk_id": "ari-d5709dbc",
        "id": "ami-28ee1b41",
        "product_codes": [

        ]
      },
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "ami-28ee1b41",
      "ds_key": "[:ec2, :image, \"ami-28ee1b41\"]"
    },
    "i-9bad8cf1": {
      "ds_source_obj_type": "instance",
      "external_ref": {
        "type": "ec2_instance",
        "instance_id": "i-9bad8cf1"
      },
      "type": "instance",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "os": "Ubuntu 9.10",
      "component": {
        "postgresql::server": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-9bad8cf1",
            "recipe_name": "postgresql::server"
          },
          "type": "instance",
          "only_one_per_node": true,
          "attribute": {
            "var[dir]": {
              "external_ref": {
                "type": "chef_attribute",
                "path": "node[postgresql][dir]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "/etc/postgresql/8.4/main",
              "port_type": "input",
              "propagation_type": "immediate",
              "display_name": "var[dir]",
              "description": "Location of the PostgreSQL databases",
              "output_variable": false
            }
          },
          "display_name": "postgresql::server",
          "ds_key": ""
        }
      },
      "image_size": "0.17408E4",
      "ds_attributes": {
        "flavor": {
          "bits": 32,
          "disk": 160,
          "ram": 1740.8,
          "name": "Small Instance",
          "id": "m1.small",
          "cores": 1
        },
        "groups": [
          "basic",
          "default"
        ]
      },
      "operational_status": "stopped",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "*network_partition_id": "/network_partition/basic__default",
          "display_name": "eth0"
        }
      },
      "display_name": "i-9bad8cf1",
      "ds_key": "[:ec2, :instance, \"i-9bad8cf1\"]"
    },
    "i-c5f5afaf": {
      "ds_source_obj_type": "instance",
      "external_ref": {
        "type": "ec2_instance",
        "instance_id": "i-c5f5afaf"
      },
      "type": "instance",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "os": "Ubuntu 10.04.1 LTS",
      "component": {
        "chef_aux": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-c5f5afaf",
            "recipe_name": "chef_aux"
          },
          "type": "instance",
          "only_one_per_node": true,
          "display_name": "chef_aux",
          "ds_key": ""
        },
        "collectd::server": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-c5f5afaf",
            "recipe_name": "collectd::server"
          },
          "type": "instance",
          "only_one_per_node": true,
          "display_name": "collectd::server",
          "ds_key": ""
        },
        "hadoop_cloudera_c3::conf_pseudo": {
          "external_ref": {
            "type": "chef_recipe_instance",
            "node_name": "i-c5f5afaf",
            "recipe_name": "hadoop_cloudera_c3::conf_pseudo"
          },
          "type": "instance",
          "only_one_per_node": true,
          "attribute": {
            "port[jmxremote_port]": {
              "external_ref": {
                "type": "service_attribute",
                "path": "service[hadoop_namenode][jmxremote_port]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "1618",
              "port_type": "output",
              "propagation_type": "immediate",
              "display_name": "port[jmxremote_port]",
              "output_variable": false
            },
            "port[jmxremote_password]": {
              "external_ref": {
                "type": "service_attribute",
                "path": "service[hadoop_namenode][jmxremote_password]"
              },
              "required": false,
              "data_type": "string",
              "is_array": false,
              "value_asserted": "QED",
              "port_type": "output",
              "propagation_type": "immediate",
              "display_name": "port[jmxremote_password]",
              "output_variable": false
            }
          },
          "display_name": "hadoop_cloudera_c3::conf_pseudo",
          "ds_key": ""
        }
      },
      "image_size": "0.17408E4",
      "ds_attributes": {
        "flavor": {
          "bits": 32,
          "disk": 160,
          "ram": 1740.8,
          "name": "Small Instance",
          "id": "m1.small",
          "cores": 1
        },
        "groups": [
          "basic",
          "default"
        ]
      },
      "operational_status": "stopped",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "*network_partition_id": "/network_partition/basic__default",
          "display_name": "eth0"
        }
      },
      "display_name": "i-c5f5afaf",
      "ds_key": "[:ec2, :instance, \"i-c5f5afaf\"]"
    },
    "i-07af096d": {
      "ds_source_obj_type": "instance",
      "external_ref": {
        "type": "ec2_instance",
        "instance_id": "i-07af096d"
      },
      "type": "instance",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "flavor": {
          "bits": 32,
          "disk": 160,
          "ram": 1740.8,
          "name": "Small Instance",
          "id": "m1.small",
          "cores": 1
        },
        "groups": [
          "basic",
          "default"
        ]
      },
      "operational_status": "stopped",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "*network_partition_id": "/network_partition/basic__default",
          "display_name": "eth0"
        }
      },
      "display_name": "i-07af096d",
      "ds_key": "[:ec2, :instance, \"i-07af096d\"]"
    },
    "i-63775608": {
      "ds_source_obj_type": "instance",
      "external_ref": {
        "type": "ec2_instance",
        "instance_id": "i-63775608"
      },
      "type": "instance",
      "is_deployed": true,
      "monitoring_item": {
        "check_ping": {
          "enabled": true,
          "display_name": "check_ping",
          "description": "ping"
        },
        "check_mem": {
          "enabled": true,
          "display_name": "check_mem",
          "description": "Free Memory"
        },
        "check_local_procs": {
          "enabled": true,
          "display_name": "check_local_procs",
          "description": "Processes"
        },
        "check_all_disks": {
          "enabled": true,
          "display_name": "check_all_disks",
          "description": "Free Space All Disks"
        },
        "check_memory_profiler": {
          "enabled": true,
          "display_name": "check_memory_profiler",
          "description": "Memory Profiler"
        },
        "check_iostat": {
          "enabled": true,
          "display_name": "check_iostat",
          "description": "Iostat"
        },
        "check_ssh": {
          "enabled": true,
          "display_name": "check_ssh",
          "description": "SSH"
        }
      },
      "data_source": "ec2",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "flavor": {
          "bits": 32,
          "disk": 160,
          "ram": 1740.8,
          "name": "Small Instance",
          "id": "m1.small",
          "cores": 1
        },
        "groups": [
          "basic",
          "default"
        ]
      },
      "operational_status": "stopped",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "*network_partition_id": "/network_partition/basic__default",
          "display_name": "eth0"
        }
      },
      "display_name": "i-63775608",
      "ds_key": "[:ec2, :instance, \"i-63775608\"]"
    }
  },
  "data_source": {
    "chef": {
      "data_source_entry": {
        "node": {
          "obj_type": "node",
          "data_source_entry": {
            "component_instance": {
              "obj_type": "component",
              "data_source_entry": {
                "component_attribute": {
                  "obj_type": "attribute",
                  "ds_is_golden_store": true,
                  "ds_name": "chef",
                  "display_name": "component_attribute"
                }
              },
              "ds_is_golden_store": true,
              "ds_name": "chef",
              "display_name": "component_instance",
              "source_obj_type": "instance"
            }
          },
          "ds_is_golden_store": true,
          "ds_name": "chef",
          "display_name": "node"
        },
        "component_recipe": {
          "obj_type": "component",
          "data_source_entry": {
            "component_monitoring_item": {
              "obj_type": "monitoring_item",
              "ds_is_golden_store": true,
              "ds_name": "chef",
              "display_name": "component_monitoring_item"
            },
            "component_attribute": {
              "obj_type": "attribute",
              "ds_is_golden_store": true,
              "ds_name": "chef",
              "display_name": "component_attribute"
            }
          },
          "ds_is_golden_store": true,
          "ds_name": "chef",
          "display_name": "component_recipe",
          "source_obj_type": "recipe"
        }
      },
      "last_collection_timestamp": "Tue Oct 05 17:46:03 +0000 2010",
      "ds_name": "chef",
      "display_name": "chef"
    },
    "ec2": {
      "data_source_entry": {
        "network_partition": {
          "obj_type": "network_partition",
          "ds_is_golden_store": true,
          "ds_name": "ec2",
          "display_name": "network_partition"
        },
        "node_image": {
          "obj_type": "node",
          "ds_is_golden_store": true,
          "ds_name": "ec2",
          "display_name": "node_image",
          "source_obj_type": "image"
        },
        "node_instance": {
          "obj_type": "node",
          "ds_is_golden_store": true,
          "ds_name": "ec2",
          "display_name": "node_instance",
          "source_obj_type": "instance"
        }
      },
      "last_collection_timestamp": "Tue Oct 05 17:46:20 +0000 2010",
      "ds_name": "ec2",
      "display_name": "ec2"
    },
    "user_data": {
      "data_source_entry": {
        "component": {
          "obj_type": "component",
          "ds_is_golden_store": true,
          "ds_name": "user_data",
          "display_name": "component"
        },
        "node": {
          "obj_type": "node",
          "ds_is_golden_store": true,
          "ds_name": "user_data",
          "display_name": "node"
        }
      },
      "last_collection_timestamp": "Tue Oct 05 17:45:21 +0000 2010",
      "ds_name": "user_data",
      "display_name": "user_data"
    }
  },
  "component": {
    "hadoop::conf_pseudo": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "hadoop::conf_pseudo"
      },
      "type": "template",
      "only_one_per_node": true,
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
        },
        "recipe_name": "hadoop::conf_pseudo",
        "description": "Installs hadoop-conf-pseudo and enables hadoop services",
        "basic_type": null
      },
      "display_name": "hadoop::conf_pseudo",
      "ds_key": "[:chef, :template, \"hadoop::conf_pseudo\"]",
      "description": "Installs hadoop-conf-pseudo and enables hadoop services"
    },
    "hadoop::pig": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "hadoop::pig"
      },
      "type": "template",
      "only_one_per_node": true,
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
        },
        "recipe_name": "hadoop::pig",
        "description": "Installs hadoop's pig package",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "hadoop-pig.png",
          "display": "hadoop-pig.png"
        }
      },
      "display_name": "hadoop::pig",
      "ds_key": "[:chef, :template, \"hadoop::pig\"]",
      "description": "Installs hadoop's pig package"
    },
    "hadoop_cloudera_c3": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "hadoop_cloudera_c3"
      },
      "type": "template",
      "only_one_per_node": true,
      "attribute": {
        "port[jmxremote_port]": {
          "external_ref": {
            "type": "service_attribute",
            "path": "service[hadoop_namenode][jmxremote_port]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "port_type": "output",
          "propagation_type": "immediate",
          "display_name": "port[jmxremote_port]",
          "output_variable": false
        },
        "port[jmxremote_password]": {
          "external_ref": {
            "type": "service_attribute",
            "path": "service[hadoop_namenode][jmxremote_password]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "port_type": "output",
          "propagation_type": "immediate",
          "display_name": "port[jmxremote_password]",
          "output_variable": false
        }
      },
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
          "hadoop_cloudera_c3/jmxremote_password": {
            "type": "string",
            "transform": {
              "__ref": "node[hadoop][jmxremote][password]"
            },
            "required": "optional",
            "value": null,
            "service_name": "hadoop_namenode",
            "is_service_attribute": true,
            "calculated": false,
            "port_type": "output",
            "recipes": [

            ],
            "choice": [

            ]
          },
          "hadoop_cloudera_c3/jmxremote_port": {
            "type": "string",
            "transform": {
              "__ref": "node[hadoop][jmxremote][namenode][port]"
            },
            "required": "optional",
            "value": null,
            "service_name": "hadoop_namenode",
            "is_service_attribute": true,
            "calculated": false,
            "port_type": "output",
            "recipes": [

            ],
            "choice": [

            ]
          }
        },
        "recipe_name": "hadoop_cloudera_c3",
        "description": "Installs hadoop from Cloudera's repo",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "cloudera.png",
          "display": "cloudera.png"
        }
      },
      "display_name": "hadoop_cloudera_c3",
      "ds_key": "[:chef, :template, \"hadoop_cloudera_c3\"]",
      "description": "Installs hadoop from Cloudera's repo"
    },
    "postgresql::server": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "postgresql::server"
      },
      "type": "template",
      "only_one_per_node": true,
      "attribute": {
        "var[dir]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[postgresql][dir]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "/etc/postgresql/8.3/main",
          "port_type": "input",
          "propagation_type": "immediate",
          "display_name": "var[dir]",
          "description": "Location of the PostgreSQL databases",
          "output_variable": false
        }
      },
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
          "postgresql/dir": {
            "type": "string",
            "required": "optional",
            "value": "/etc/postgresql/8.3/main",
            "calculated": false,
            "port_type": "input",
            "recipes": [

            ],
            "display_name": "PostgreSQL Directory",
            "default": "/etc/postgresql/8.3/main",
            "description": "Location of the PostgreSQL databases",
            "choice": [

            ]
          }
        },
        "recipe_name": "postgresql::server",
        "description": "Installs postgresql server packages, templates",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "postgres.png",
          "display": "postgres.png"
        }
      },
      "display_name": "postgresql::server",
      "ds_key": "[:chef, :template, \"postgresql::server\"]",
      "description": "Installs postgresql server packages, templates"
    },
    "chef_aux": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "chef_aux"
      },
      "type": "template",
      "only_one_per_node": true,
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
        },
        "recipe_name": "chef_aux",
        "description": "",
        "basic_type": null
      },
      "display_name": "chef_aux",
      "ds_key": "[:chef, :template, \"chef_aux\"]",
      "description": ""
    },
    "postgresql::client": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "postgresql::client"
      },
      "type": "template",
      "only_one_per_node": true,
      "attribute": {
        "var[dir]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[postgresql][dir]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "/etc/postgresql/8.3/main",
          "port_type": "input",
          "propagation_type": "immediate",
          "display_name": "var[dir]",
          "description": "Location of the PostgreSQL databases",
          "output_variable": false
        }
      },
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
          "postgresql/dir": {
            "type": "string",
            "required": "optional",
            "value": "/etc/postgresql/8.3/main",
            "calculated": false,
            "port_type": "input",
            "recipes": [

            ],
            "display_name": "PostgreSQL Directory",
            "default": "/etc/postgresql/8.3/main",
            "description": "Location of the PostgreSQL databases",
            "choice": [

            ]
          }
        },
        "recipe_name": "postgresql::client",
        "description": "Installs postgresql client package(s)",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "postgres.png",
          "display": "postgres.png"
        }
      },
      "display_name": "postgresql::client",
      "ds_key": "[:chef, :template, \"postgresql::client\"]",
      "description": "Installs postgresql client package(s)"
    },
    "mysql::server2": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "mysql::server2"
      },
      "type": "template",
      "monitoring_item": {
        "mysql_basic_health": {
          "enabled": true,
          "display_name": "mysql_basic_health"
        },
        "inet_service_up": {
          "enabled": true,
          "display_name": "inet_service_up"
        }
      },
      "only_one_per_node": true,
      "attribute": {
        "var[bind_address]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][bind_address]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "ipaddress",
          "propagation_type": "immediate",
          "display_name": "var[bind_address]",
          "description": "Address that mysqld should listen on",
          "output_variable": false
        },
        "var[tunable][key_buffer]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][key_buffer]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "250M",
          "propagation_type": "immediate",
          "display_name": "var[tunable][key_buffer]",
          "output_variable": false
        },
        "var[tunable][back_log]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][back_log]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate",
          "display_name": "var[tunable][back_log]",
          "output_variable": false
        },
        "var[tunable][max_connections]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][max_connections]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "800",
          "propagation_type": "immediate",
          "display_name": "var[tunable][max_connections]",
          "output_variable": false
        },
        "var[tunable][wait_timeout]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][wait_timeout]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "180",
          "propagation_type": "immediate",
          "display_name": "var[tunable][wait_timeout]",
          "output_variable": false
        },
        "port[monitor_user_id]": {
          "external_ref": {
            "type": "service_attribute",
            "path": "service[mysql_server][monitor_user_id]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "root",
          "propagation_type": "immediate",
          "display_name": "port[monitor_user_id]",
          "output_variable": false
        },
        "var[server_root_password]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][server_root_password]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "display_name": "var[server_root_password]",
          "description": "Randomly generated password for the mysqld root user",
          "output_variable": false
        },
        "var[tunable][max_heap_table_size]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][max_heap_table_size]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "32M",
          "propagation_type": "immediate",
          "display_name": "var[tunable][max_heap_table_size]",
          "output_variable": false
        },
        "var[tunable][net_write_timeout]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][net_write_timeout]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate",
          "display_name": "var[tunable][net_write_timeout]",
          "output_variable": false
        },
        "var[datadir]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][datadir]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "/var/lib/mysql",
          "propagation_type": "immediate",
          "display_name": "var[datadir]",
          "description": "Location of mysql databases",
          "output_variable": false
        },
        "var[tunable][net_read_timeout]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][net_read_timeout]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate",
          "display_name": "var[tunable][net_read_timeout]",
          "output_variable": false
        },
        "var[ec2_path]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][ec2_path]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "/mnt/mysql",
          "propagation_type": "immediate",
          "display_name": "var[ec2_path]",
          "description": "Location of mysql directory on EC2 instance EBS volumes",
          "output_variable": false
        },
        "port[db_info]": {
          "external_ref": {
            "type": "service_attribute",
            "path": "service[mysql_server][db_info]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": [
            {
              "database": "mysql",
              "password": null,
              "username": "root"
            }
          ],
          "propagation_type": "immediate",
          "display_name": "port[db_info]",
          "output_variable": false
        },
        "var[tunable][table_cache]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][table_cache]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate",
          "display_name": "var[tunable][table_cache]",
          "output_variable": false
        }
      },
      "ds_attributes": {
        "monitoring_items": {
          "mysql_basic_health": {
            "service_name": "mysql_server",
            "applicability_conditions": [
              "lambda{|p|p[:db_info] and p[:db_info].find{|x|x[:username] == p[:monitor_user_id]}}"
            ],
            "condition_name": null,
            "params": [
              "db_info",
              "monitor_user_id"
            ],
            "condition_description": "the user 'monitor_user_id' should be able to log into this service",
            "enabled": true,
            "name": "mysql_basic_health"
          },
          "inet_service_up": {
            "service_name": "mysql_server",
            "condition_name": "accessible_over_tcp",
            "params": [
              "sap"
            ],
            "condition_description": "this service should be accessible over tcp",
            "enabled": true,
            "name": "inet_service_up"
          }
        },
        "attributes": {
          "mysql/tunable/table_cache": {
            "type": "string",
            "required": "optional",
            "value": "128",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tunable Table Cache",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/server_root_password": {
            "type": "string",
            "required": "optional",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Server Root Password",
            "description": "Randomly generated password for the mysqld root user",
            "choice": [

            ]
          },
          "mysql/db_info": {
            "type": "string",
            "transform": [
              {
                "database": "mysql",
                "password": {
                  "__ref": "node[mysql][server_root_password]"
                },
                "username": "root"
              }
            ],
            "required": "optional",
            "value": [
              {
                "database": "mysql",
                "password": null,
                "username": "root"
              }
            ],
            "service_name": "mysql_server",
            "is_service_attribute": true,
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "choice": [

            ]
          },
          "mysql/ec2_path": {
            "type": "string",
            "required": "optional",
            "value": "/mnt/mysql",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL EC2 Path",
            "default": "/mnt/mysql",
            "description": "Location of mysql directory on EC2 instance EBS volumes",
            "choice": [

            ]
          },
          "mysql/monitor_user_id": {
            "type": "string",
            "transform": "root",
            "required": "optional",
            "value": "root",
            "service_name": "mysql_server",
            "is_service_attribute": true,
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "choice": [

            ]
          },
          "mysql/tunable/wait_timeout": {
            "type": "string",
            "required": "optional",
            "value": "180",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tunable Wait Timeout",
            "default": "180",
            "choice": [

            ]
          },
          "mysql/tunable/key_buffer": {
            "type": "string",
            "required": "optional",
            "value": "250M",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tuntable Key Buffer",
            "default": "250M",
            "choice": [

            ]
          },
          "mysql/tunable/back_log": {
            "type": "string",
            "required": "optional",
            "value": "128",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tunable Back Log",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/tunable/net_write_timeout": {
            "type": "string",
            "required": "optional",
            "value": "30",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tunable Net Write Timeout",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/tunable/max_heap_table_size": {
            "type": "string",
            "required": "optional",
            "value": "32M",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tunable Max Heap Table Size",
            "default": "32M",
            "choice": [

            ]
          },
          "mysql/tunable/net_read_timeout": {
            "type": "string",
            "required": "optional",
            "value": "30",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tunable Net Read Timeout",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/bind_address": {
            "type": "string",
            "required": "optional",
            "value": "ipaddress",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Bind Address",
            "default": "ipaddress",
            "description": "Address that mysqld should listen on",
            "choice": [

            ]
          },
          "mysql/tunable/max_connections": {
            "type": "string",
            "required": "optional",
            "value": "800",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tunable Max Connections",
            "default": "800",
            "choice": [

            ]
          },
          "mysql/datadir": {
            "type": "string",
            "required": "optional",
            "value": "/var/lib/mysql",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Data Directory",
            "default": "/var/lib/mysql",
            "description": "Location of mysql databases",
            "choice": [

            ]
          }
        },
        "recipe_name": "mysql::server2",
        "description": "Installs packages required for mysql servers w/o manual intervention",
        "basic_type": "service"
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "mysql.png",
          "display": "mysql.png"
        }
      },
      "display_name": "mysql::server2",
      "ds_key": "[:chef, :template, \"mysql::server2\"]",
      "description": "Installs packages required for mysql servers w/o manual intervention",
      "basic_type": "service"
    },
    "hadoop::hive": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "hadoop::hive"
      },
      "type": "template",
      "only_one_per_node": true,
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
        },
        "recipe_name": "hadoop::hive",
        "description": "Installs hadoop's hive package",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "hadoop-hive.png",
          "display": "hadoop-hive.png"
        }
      },
      "display_name": "hadoop::hive",
      "ds_key": "[:chef, :template, \"hadoop::hive\"]",
      "description": "Installs hadoop's hive package"
    },
    "nagios": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "nagios"
      },
      "type": "template",
      "only_one_per_node": true,
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
        },
        "recipe_name": "nagios",
        "description": "Empty, use one of the other recipes",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "nagios.png",
          "display": "nagios.png"
        }
      },
      "display_name": "nagios",
      "ds_key": "[:chef, :template, \"nagios\"]",
      "description": "Empty, use one of the other recipes"
    },
    "rabbitmq::edge_stomp": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "rabbitmq::edge_stomp"
      },
      "type": "template",
      "only_one_per_node": true,
      "attribute": {
        "port[sap]": {
          "external_ref": {
            "type": "service_attribute",
            "path": "service[rabbitmq][sap]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "tcp",
              "port": 5672
            }
          ],
          "propagation_type": "immediate",
          "display_name": "port[sap]",
          "output_variable": false
        },
        "var[branch_tag]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[rabbitmq][branch_tag]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "default",
          "propagation_type": "immediate",
          "display_name": "var[branch_tag]",
          "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
          "output_variable": false
        },
        "var[stomp][branch_tag]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[rabbitmq][stomp][branch_tag]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "default",
          "propagation_type": "immediate",
          "display_name": "var[stomp][branch_tag]",
          "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
          "output_variable": false
        }
      },
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
          "rabbitmq/sap": {
            "type": "string",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": 5672
              }
            ],
            "required": "optional",
            "value": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": 5672
              }
            ],
            "service_name": "rabbitmq",
            "is_service_attribute": true,
            "calculated": false,
            "recipes": [

            ],
            "choice": [

            ]
          },
          "rabbitmq/stomp/branch_tag": {
            "type": "string",
            "required": "optional",
            "value": "default",
            "calculated": false,
            "recipes": [

            ],
            "display_name": "RabbitMQ-stomp adapter tag/branch name",
            "default": "default",
            "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
            "choice": [

            ]
          },
          "rabbitmq/branch_tag": {
            "type": "string",
            "required": "optional",
            "value": "default",
            "calculated": false,
            "recipes": [

            ],
            "display_name": "RabbitMQ tag/branch name",
            "default": "default",
            "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
            "choice": [

            ]
          }
        },
        "recipe_name": "rabbitmq::edge_stomp",
        "description": "Set up RabbitMQ-stomp adapter from source mercurial repository.",
        "basic_type": null
      },
      "display_name": "rabbitmq::edge_stomp",
      "ds_key": "[:chef, :template, \"rabbitmq::edge_stomp\"]",
      "description": "Set up RabbitMQ-stomp adapter from source mercurial repository."
    },
    "java": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "java"
      },
      "type": "template",
      "only_one_per_node": true,
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
        },
        "recipe_name": "java",
        "description": "Installs openjdk to provide Java",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "java-01.png",
          "display": "java-01.png"
        }
      },
      "display_name": "java",
      "ds_key": "[:chef, :template, \"java\"]",
      "description": "Installs openjdk to provide Java"
    },
    "mysql::client_app1": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "mysql::client_app1"
      },
      "type": "template",
      "only_one_per_node": true,
      "attribute": {
        "port[sap_ref]": {
          "external_ref": {
            "type": "service_attribute",
            "path": "service[mysql_server][sap_ref]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "semantic_type": {
            "sap_ref": {
              "application": "sql::mysql"
            }
          },
          "port_type": "output",
          "propagation_type": "immediate",
          "display_name": "port[sap_ref]",
          "description": "Service access point reference",
          "output_variable": false
        }
      },
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
          "mysql/sap_ref": {
            "type": "string",
            "required": "optional",
            "service_name": "mysql_server",
            "is_service_attribute": true,
            "semantic_type": {
              "sap_ref": {
                "application": "sql::mysql"
              }
            },
            "calculated": false,
            "port_type": "output",
            "recipes": [
              "mysql::client_app1"
            ],
            "description": "Service access point reference",
            "choice": [

            ]
          }
        },
        "recipe_name": "mysql::client_app1",
        "description": "Sample client application that connects to a mysql database",
        "basic_type": "application"
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "mysql.png",
          "display": "mysql.png"
        }
      },
      "display_name": "mysql::client_app1",
      "ds_key": "[:chef, :template, \"mysql::client_app1\"]",
      "description": "Sample client application that connects to a mysql database",
      "basic_type": "application"
    },
    "mysql::client": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "mysql::client"
      },
      "type": "template",
      "only_one_per_node": true,
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
        },
        "recipe_name": "mysql::client",
        "description": "Installs packages required for mysql clients using run_action magic",
        "basic_type": "package"
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "mysql.png",
          "display": "mysql.png"
        }
      },
      "display_name": "mysql::client",
      "ds_key": "[:chef, :template, \"mysql::client\"]",
      "description": "Installs packages required for mysql clients using run_action magic",
      "basic_type": "package"
    },
    "java_sun": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "java_sun"
      },
      "type": "template",
      "only_one_per_node": true,
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
        },
        "recipe_name": "java_sun",
        "description": "Installs Sun Java using preseed to accept terms",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "java-01.png",
          "display": "java-01.png"
        }
      },
      "display_name": "java_sun",
      "ds_key": "[:chef, :template, \"java_sun\"]",
      "description": "Installs Sun Java using preseed to accept terms"
    },
    "hadoop": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "hadoop"
      },
      "type": "template",
      "only_one_per_node": true,
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
        },
        "recipe_name": "hadoop",
        "description": "Installs hadoop from Cloudera's repo",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "hadoop.png",
          "display": "hadoop.png"
        }
      },
      "display_name": "hadoop",
      "ds_key": "[:chef, :template, \"hadoop\"]",
      "description": "Installs hadoop from Cloudera's repo"
    },
    "rabbitmq::edge": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "rabbitmq::edge"
      },
      "type": "template",
      "only_one_per_node": true,
      "attribute": {
        "port[sap]": {
          "external_ref": {
            "type": "service_attribute",
            "path": "service[rabbitmq][sap]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "tcp",
              "port": 5672
            }
          ],
          "propagation_type": "immediate",
          "display_name": "port[sap]",
          "output_variable": false
        },
        "var[branch_tag]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[rabbitmq][branch_tag]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "default",
          "propagation_type": "immediate",
          "display_name": "var[branch_tag]",
          "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
          "output_variable": false
        },
        "var[stomp][branch_tag]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[rabbitmq][stomp][branch_tag]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "default",
          "propagation_type": "immediate",
          "display_name": "var[stomp][branch_tag]",
          "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
          "output_variable": false
        }
      },
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
          "rabbitmq/sap": {
            "type": "string",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": 5672
              }
            ],
            "required": "optional",
            "value": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": 5672
              }
            ],
            "service_name": "rabbitmq",
            "is_service_attribute": true,
            "calculated": false,
            "recipes": [

            ],
            "choice": [

            ]
          },
          "rabbitmq/stomp/branch_tag": {
            "type": "string",
            "required": "optional",
            "value": "default",
            "calculated": false,
            "recipes": [

            ],
            "display_name": "RabbitMQ-stomp adapter tag/branch name",
            "default": "default",
            "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
            "choice": [

            ]
          },
          "rabbitmq/branch_tag": {
            "type": "string",
            "required": "optional",
            "value": "default",
            "calculated": false,
            "recipes": [

            ],
            "display_name": "RabbitMQ tag/branch name",
            "default": "default",
            "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
            "choice": [

            ]
          }
        },
        "recipe_name": "rabbitmq::edge",
        "description": "Set up RabbitMQ from source mercurial repository.",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "rabbitmq.png",
          "display": "rabbitmq.png"
        }
      },
      "display_name": "rabbitmq::edge",
      "ds_key": "[:chef, :template, \"rabbitmq::edge\"]",
      "description": "Set up RabbitMQ from source mercurial repository."
    },
    "rabbitmq::default": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "rabbitmq::default"
      },
      "type": "template",
      "only_one_per_node": true,
      "attribute": {
        "port[sap]": {
          "external_ref": {
            "type": "service_attribute",
            "path": "service[rabbitmq][sap]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "tcp",
              "port": 5672
            }
          ],
          "propagation_type": "immediate",
          "display_name": "port[sap]",
          "output_variable": false
        },
        "var[branch_tag]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[rabbitmq][branch_tag]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "default",
          "propagation_type": "immediate",
          "display_name": "var[branch_tag]",
          "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
          "output_variable": false
        },
        "var[stomp][branch_tag]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[rabbitmq][stomp][branch_tag]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "default",
          "propagation_type": "immediate",
          "display_name": "var[stomp][branch_tag]",
          "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
          "output_variable": false
        }
      },
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
          "rabbitmq/sap": {
            "type": "string",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": 5672
              }
            ],
            "required": "optional",
            "value": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": 5672
              }
            ],
            "service_name": "rabbitmq",
            "is_service_attribute": true,
            "calculated": false,
            "recipes": [

            ],
            "choice": [

            ]
          },
          "rabbitmq/stomp/branch_tag": {
            "type": "string",
            "required": "optional",
            "value": "default",
            "calculated": false,
            "recipes": [

            ],
            "display_name": "RabbitMQ-stomp adapter tag/branch name",
            "default": "default",
            "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
            "choice": [

            ]
          },
          "rabbitmq/branch_tag": {
            "type": "string",
            "required": "optional",
            "value": "default",
            "calculated": false,
            "recipes": [

            ],
            "display_name": "RabbitMQ tag/branch name",
            "default": "default",
            "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
            "choice": [

            ]
          }
        },
        "recipe_name": "rabbitmq::default",
        "description": "Set up RabbitMQ from rabbitmq.com debian repository.",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "rabbitmq.png",
          "display": "rabbitmq.png"
        }
      },
      "display_name": "rabbitmq::default",
      "ds_key": "[:chef, :template, \"rabbitmq::default\"]",
      "description": "Set up RabbitMQ from rabbitmq.com debian repository."
    },
    "mysql::server_ec2": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "mysql::server_ec2"
      },
      "type": "template",
      "only_one_per_node": true,
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
        },
        "recipe_name": "mysql::server_ec2",
        "description": "Performs EC2-specific mountpoint manipulation",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "mysql.png",
          "display": "mysql.png"
        }
      },
      "display_name": "mysql::server_ec2",
      "ds_key": "[:chef, :template, \"mysql::server_ec2\"]",
      "description": "Performs EC2-specific mountpoint manipulation"
    },
    "nagios::client": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "nagios::client"
      },
      "type": "template",
      "only_one_per_node": true,
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
        },
        "recipe_name": "nagios::client",
        "description": "Installs and configures a nagios client with nrpe",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "nagios.png",
          "display": "nagios.png"
        }
      },
      "display_name": "nagios::client",
      "ds_key": "[:chef, :template, \"nagios::client\"]",
      "description": "Installs and configures a nagios client with nrpe"
    },
    "hadoop_cloudera_c3::conf_pseudo": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo"
      },
      "type": "template",
      "monitoring_item": {
        "check_hadoop_namenode_remotely": {
          "enabled": true,
          "display_name": "check_hadoop_namenode_remotely"
        },
        "check_hadoop_datanode_remotely": {
          "enabled": true,
          "display_name": "check_hadoop_datanode_remotely"
        },
        "check_hadoop_dfs": {
          "enabled": true,
          "display_name": "check_hadoop_dfs"
        },
        "check_hadoop_namenode_jmx": {
          "enabled": true,
          "display_name": "check_hadoop_namenode_jmx"
        }
      },
      "only_one_per_node": true,
      "attribute": {
        "port[jmxremote_port]": {
          "external_ref": {
            "type": "service_attribute",
            "path": "service[hadoop_namenode][jmxremote_port]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "port_type": "output",
          "propagation_type": "immediate",
          "display_name": "port[jmxremote_port]",
          "output_variable": false
        },
        "port[jmxremote_password]": {
          "external_ref": {
            "type": "service_attribute",
            "path": "service[hadoop_namenode][jmxremote_password]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "port_type": "output",
          "propagation_type": "immediate",
          "display_name": "port[jmxremote_password]",
          "output_variable": false
        }
      },
      "ds_attributes": {
        "monitoring_items": {
          "check_hadoop_namenode_remotely": {
            "service_name": "hadoop_namenode",
            "condition_name": "accessible_over_tcp",
            "condition_description": "this service should be accessible over tcp",
            "enabled": true,
            "name": "check_hadoop_namenode_remotely"
          },
          "check_hadoop_datanode_remotely": {
            "service_name": "hadoop_datanode",
            "condition_name": "accessible_over_tcp",
            "condition_description": "this service should be accessible over tcp",
            "enabled": true,
            "name": "check_hadoop_datanode_remotely"
          },
          "check_hadoop_dfs": {
            "service_name": "hadoop_namenode",
            "condition_name": null,
            "condition_description": "a hadoop dfs report is available",
            "enabled": true,
            "name": "check_hadoop_dfs"
          },
          "check_hadoop_namenode_jmx": {
            "service_name": "hadoop_namenode",
            "condition_name": null,
            "params": [
              "jmxremote_port",
              "jmxremote_password"
            ],
            "condition_description": "jmx attributes are monitored",
            "enabled": true,
            "name": "check_hadoop_namenode_jmx",
            "attributes_to_monitor": [
              {
                "attribute": "FilesTotal",
                "warning": ">750000",
                "object_name": "hadoop:name=FSNamesystemState,service=NameNode",
                "critical": ">1000000"
              },
              {
                "attribute": "CapacityTotal",
                "warning": "",
                "object_name": "hadoop:name=FSNamesystemState,service=NameNode",
                "critical": "<20000000"
              },
              {
                "attribute": "HeapMemoryUsage.used",
                "warning": "",
                "object_name": "java.lang:type=Memory",
                "critical": ""
              }
            ]
          }
        },
        "attributes": {
          "hadoop_cloudera_c3/jmxremote_password": {
            "type": "string",
            "transform": {
              "__ref": "node[hadoop][jmxremote][password]"
            },
            "required": "optional",
            "value": null,
            "service_name": "hadoop_namenode",
            "is_service_attribute": true,
            "calculated": false,
            "port_type": "output",
            "recipes": [

            ],
            "choice": [

            ]
          },
          "hadoop_cloudera_c3/jmxremote_port": {
            "type": "string",
            "transform": {
              "__ref": "node[hadoop][jmxremote][namenode][port]"
            },
            "required": "optional",
            "value": null,
            "service_name": "hadoop_namenode",
            "is_service_attribute": true,
            "calculated": false,
            "port_type": "output",
            "recipes": [

            ],
            "choice": [

            ]
          }
        },
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "description": "Installs hadoop-conf-pseudo and enables hadoop services",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "cloudera.png",
          "display": "cloudera.png"
        }
      },
      "display_name": "hadoop_cloudera_c3::conf_pseudo",
      "ds_key": "[:chef, :template, \"hadoop_cloudera_c3::conf_pseudo\"]",
      "description": "Installs hadoop-conf-pseudo and enables hadoop services"
    },
    "mysql::server": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "mysql::server"
      },
      "type": "template",
      "monitoring_item": {
        "mysql_basic_health": {
          "enabled": true,
          "display_name": "mysql_basic_health"
        },
        "inet_service_up": {
          "enabled": true,
          "display_name": "inet_service_up"
        }
      },
      "only_one_per_node": true,
      "attribute": {
        "var[bind_address]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][bind_address]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "ipaddress",
          "propagation_type": "immediate",
          "display_name": "var[bind_address]",
          "description": "Address that mysqld should listen on",
          "output_variable": false
        },
        "var[tunable][key_buffer]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][key_buffer]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "250M",
          "propagation_type": "immediate",
          "display_name": "var[tunable][key_buffer]",
          "output_variable": false
        },
        "var[tunable][back_log]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][back_log]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate",
          "display_name": "var[tunable][back_log]",
          "output_variable": false
        },
        "var[tunable][max_connections]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][max_connections]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "800",
          "propagation_type": "immediate",
          "display_name": "var[tunable][max_connections]",
          "output_variable": false
        },
        "var[tunable][wait_timeout]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][wait_timeout]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "180",
          "propagation_type": "immediate",
          "display_name": "var[tunable][wait_timeout]",
          "output_variable": false
        },
        "port[monitor_user_id]": {
          "external_ref": {
            "type": "service_attribute",
            "path": "service[mysql_server][monitor_user_id]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "root",
          "propagation_type": "immediate",
          "display_name": "port[monitor_user_id]",
          "output_variable": false
        },
        "var[server_root_password]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][server_root_password]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "display_name": "var[server_root_password]",
          "description": "Randomly generated password for the mysqld root user",
          "output_variable": false
        },
        "var[tunable][max_heap_table_size]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][max_heap_table_size]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "32M",
          "propagation_type": "immediate",
          "display_name": "var[tunable][max_heap_table_size]",
          "output_variable": false
        },
        "var[tunable][net_write_timeout]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][net_write_timeout]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate",
          "display_name": "var[tunable][net_write_timeout]",
          "output_variable": false
        },
        "var[datadir]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][datadir]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "/var/lib/mysql",
          "propagation_type": "immediate",
          "display_name": "var[datadir]",
          "description": "Location of mysql databases",
          "output_variable": false
        },
        "var[tunable][net_read_timeout]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][net_read_timeout]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate",
          "display_name": "var[tunable][net_read_timeout]",
          "output_variable": false
        },
        "var[ec2_path]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][ec2_path]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "/mnt/mysql",
          "propagation_type": "immediate",
          "display_name": "var[ec2_path]",
          "description": "Location of mysql directory on EC2 instance EBS volumes",
          "output_variable": false
        },
        "port[db_info]": {
          "external_ref": {
            "type": "service_attribute",
            "path": "service[mysql_server][db_info]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": [
            {
              "database": "mysql",
              "password": null,
              "username": "root"
            }
          ],
          "propagation_type": "immediate",
          "display_name": "port[db_info]",
          "output_variable": false
        },
        "var[tunable][table_cache]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[mysql][tunable][table_cache]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate",
          "display_name": "var[tunable][table_cache]",
          "output_variable": false
        }
      },
      "ds_attributes": {
        "monitoring_items": {
          "mysql_basic_health": {
            "service_name": "mysql_server",
            "applicability_conditions": [
              "lambda{|p|p[:db_info] and p[:db_info].find{|x|x[:username] == p[:monitor_user_id]}}"
            ],
            "condition_name": null,
            "params": [
              "db_info",
              "monitor_user_id"
            ],
            "condition_description": "the user 'monitor_user_id' should be able to log into this service",
            "enabled": true,
            "name": "mysql_basic_health"
          },
          "inet_service_up": {
            "service_name": "mysql_server",
            "condition_name": "accessible_over_tcp",
            "params": [
              "sap"
            ],
            "condition_description": "this service should be accessible over tcp",
            "enabled": true,
            "name": "inet_service_up"
          }
        },
        "attributes": {
          "mysql/tunable/table_cache": {
            "type": "string",
            "required": "optional",
            "value": "128",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tunable Table Cache",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/server_root_password": {
            "type": "string",
            "required": "optional",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Server Root Password",
            "description": "Randomly generated password for the mysqld root user",
            "choice": [

            ]
          },
          "mysql/db_info": {
            "type": "string",
            "transform": [
              {
                "database": "mysql",
                "password": {
                  "__ref": "node[mysql][server_root_password]"
                },
                "username": "root"
              }
            ],
            "required": "optional",
            "value": [
              {
                "database": "mysql",
                "password": null,
                "username": "root"
              }
            ],
            "service_name": "mysql_server",
            "is_service_attribute": true,
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "choice": [

            ]
          },
          "mysql/ec2_path": {
            "type": "string",
            "required": "optional",
            "value": "/mnt/mysql",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL EC2 Path",
            "default": "/mnt/mysql",
            "description": "Location of mysql directory on EC2 instance EBS volumes",
            "choice": [

            ]
          },
          "mysql/monitor_user_id": {
            "type": "string",
            "transform": "root",
            "required": "optional",
            "value": "root",
            "service_name": "mysql_server",
            "is_service_attribute": true,
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "choice": [

            ]
          },
          "mysql/tunable/wait_timeout": {
            "type": "string",
            "required": "optional",
            "value": "180",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tunable Wait Timeout",
            "default": "180",
            "choice": [

            ]
          },
          "mysql/tunable/key_buffer": {
            "type": "string",
            "required": "optional",
            "value": "250M",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tuntable Key Buffer",
            "default": "250M",
            "choice": [

            ]
          },
          "mysql/tunable/back_log": {
            "type": "string",
            "required": "optional",
            "value": "128",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tunable Back Log",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/tunable/net_write_timeout": {
            "type": "string",
            "required": "optional",
            "value": "30",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tunable Net Write Timeout",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/tunable/max_heap_table_size": {
            "type": "string",
            "required": "optional",
            "value": "32M",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tunable Max Heap Table Size",
            "default": "32M",
            "choice": [

            ]
          },
          "mysql/tunable/net_read_timeout": {
            "type": "string",
            "required": "optional",
            "value": "30",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tunable Net Read Timeout",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/bind_address": {
            "type": "string",
            "required": "optional",
            "value": "ipaddress",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Bind Address",
            "default": "ipaddress",
            "description": "Address that mysqld should listen on",
            "choice": [

            ]
          },
          "mysql/tunable/max_connections": {
            "type": "string",
            "required": "optional",
            "value": "800",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Tunable Max Connections",
            "default": "800",
            "choice": [

            ]
          },
          "mysql/datadir": {
            "type": "string",
            "required": "optional",
            "value": "/var/lib/mysql",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "display_name": "MySQL Data Directory",
            "default": "/var/lib/mysql",
            "description": "Location of mysql databases",
            "choice": [

            ]
          }
        },
        "recipe_name": "mysql::server",
        "description": "Installs packages required for mysql servers w/o manual intervention",
        "basic_type": "service"
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "mysql.png",
          "display": "mysql.png"
        }
      },
      "display_name": "mysql::server",
      "ds_key": "[:chef, :template, \"mysql::server\"]",
      "description": "Installs packages required for mysql servers w/o manual intervention",
      "basic_type": "service"
    },
    "redis": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "redis"
      },
      "type": "template",
      "monitoring_item": {
        "inet_service_up": {
          "enabled": true,
          "display_name": "inet_service_up"
        },
        "redis_basic_health": {
          "enabled": true,
          "display_name": "redis_basic_health"
        }
      },
      "only_one_per_node": true,
      "attribute": {
        "port[sap]": {
          "external_ref": {
            "type": "service_attribute",
            "path": "service[redis_service][sap]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "tcp",
              "port": null
            }
          ],
          "propagation_type": "immediate",
          "display_name": "port[sap]",
          "output_variable": false
        }
      },
      "ds_attributes": {
        "monitoring_items": {
          "redis_basic_health": {
            "service_name": "redis_service",
            "condition_name": null,
            "params": [
              "sap"
            ],
            "condition_description": "anonymous user should be able to log into this service",
            "enabled": true,
            "name": "redis_basic_health"
          },
          "inet_service_up": {
            "service_name": "redis_service",
            "condition_name": "accessible_over_tcp",
            "params": [
              "sap"
            ],
            "condition_description": "this service should be accessible over tcp",
            "enabled": true,
            "name": "inet_service_up"
          }
        },
        "attributes": {
          "redis/sap": {
            "type": "string",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": {
                  "__ref": "node[redis][port]"
                }
              }
            ],
            "required": "optional",
            "value": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": null
              }
            ],
            "service_name": "redis_service",
            "is_service_attribute": true,
            "calculated": false,
            "recipes": [

            ],
            "choice": [

            ]
          }
        },
        "recipe_name": "redis",
        "description": "Installs/Configures redis",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "redis.png",
          "display": "redis.png"
        }
      },
      "display_name": "redis",
      "ds_key": "[:chef, :template, \"redis\"]",
      "description": "Installs/Configures redis"
    },
    "ntp": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "ntp"
      },
      "type": "template",
      "only_one_per_node": true,
      "attribute": {
        "port[ntp][sap]": {
          "external_ref": {
            "type": "service_attribute",
            "path": "service[ntp_server][ntp][sap]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "udp",
              "port": 123
            }
          ],
          "port_type": "output",
          "propagation_type": "immediate",
          "display_name": "port[ntp][sap]",
          "output_variable": false
        },
        "var[servers]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[ntp][servers]"
          },
          "required": false,
          "data_type": "json",
          "is_array": false,
          "value_asserted": [
            "0.us.pool.ntp.org",
            "1.us.pool.ntp.org"
          ],
          "port_type": "output",
          "propagation_type": "immediate",
          "display_name": "var[servers]",
          "description": "Array of servers we should talk to",
          "output_variable": false
        },
        "var[service]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[ntp][service]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "ntp",
          "port_type": "output",
          "propagation_type": "immediate",
          "display_name": "var[service]",
          "description": "Name of the NTP service",
          "output_variable": false
        },
        "var[is_server]": {
          "external_ref": {
            "type": "chef_attribute",
            "path": "node[ntp][is_server]"
          },
          "required": false,
          "data_type": "string",
          "is_array": false,
          "value_asserted": "false",
          "port_type": "output",
          "propagation_type": "immediate",
          "display_name": "var[is_server]",
          "description": "Set to true if this is an NTP server",
          "output_variable": false
        }
      },
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
          "ntp/servers": {
            "type": "array",
            "required": "optional",
            "value": [
              "0.us.pool.ntp.org",
              "1.us.pool.ntp.org"
            ],
            "calculated": false,
            "port_type": "output",
            "recipes": [

            ],
            "display_name": "NTP Servers",
            "default": [
              "0.us.pool.ntp.org",
              "1.us.pool.ntp.org"
            ],
            "description": "Array of servers we should talk to",
            "choice": [

            ]
          },
          "ntp/ntp/sap": {
            "type": "string",
            "transform": [
              {
                "type": "inet",
                "protocol": "udp",
                "port": 123
              }
            ],
            "required": "optional",
            "value": [
              {
                "type": "inet",
                "protocol": "udp",
                "port": 123
              }
            ],
            "service_name": "ntp_server",
            "is_service_attribute": true,
            "calculated": false,
            "port_type": "output",
            "recipes": [

            ],
            "choice": [

            ]
          },
          "ntp/service": {
            "type": "string",
            "required": "optional",
            "value": "ntp",
            "calculated": false,
            "port_type": "output",
            "recipes": [

            ],
            "display_name": "NTP Service",
            "default": "ntp",
            "description": "Name of the NTP service",
            "choice": [

            ]
          },
          "ntp/is_server": {
            "type": "string",
            "required": "optional",
            "value": "false",
            "calculated": false,
            "port_type": "output",
            "recipes": [

            ],
            "display_name": "NTP Is Server?",
            "default": "false",
            "description": "Set to true if this is an NTP server",
            "choice": [

            ]
          }
        },
        "recipe_name": "ntp",
        "description": "Installs and configures ntp either as a server or client",
        "basic_type": null
      },
      "display_name": "ntp",
      "ds_key": "[:chef, :template, \"ntp\"]",
      "description": "Installs and configures ntp either as a server or client"
    },
    "hadoop::doc": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "hadoop::doc"
      },
      "type": "template",
      "only_one_per_node": true,
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
        },
        "recipe_name": "hadoop::doc",
        "description": "Installs hadoop documentation",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "hadoop.png",
          "display": "hadoop.png"
        }
      },
      "display_name": "hadoop::doc",
      "ds_key": "[:chef, :template, \"hadoop::doc\"]",
      "description": "Installs hadoop documentation"
    },
    "nagios::server": {
      "external_ref": {
        "type": "chef_recipe",
        "recipe_name": "nagios::server"
      },
      "type": "template",
      "only_one_per_node": true,
      "ds_attributes": {
        "monitoring_items": {
        },
        "attributes": {
        },
        "recipe_name": "nagios::server",
        "description": "Installs and configures a nagios server",
        "basic_type": null
      },
      "ui": {
        "images": {
          "tiny": "",
          "tnail": "nagios.png",
          "display": "nagios.png"
        }
      },
      "display_name": "nagios::server",
      "ds_key": "[:chef, :template, \"nagios::server\"]",
      "description": "Installs and configures a nagios server"
    }
  },
  "node_group": {
    "all_instances": {
      "dynamic_membership_sql": {
        "type": "instance"
      },
      "display_name": "all_instances"
    }
  }
}

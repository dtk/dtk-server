{
  "data_source": {
    "chef": {
      "display_name": "chef",
      "data_source_entry": {
        "component_instance": {
          "ds_is_golden_store": true,
          "display_name": "component_instance",
          "obj_type": "component",
          "data_source_entry": {
            "component_attribute": {
              "ds_is_golden_store": true,
              "display_name": "component_attribute",
              "obj_type": "attribute",
              "ds_name": "chef"
            }
          },
          "ds_name": "chef",
          "source_obj_type": "instance"
        },
        "component_recipe": {
          "ds_is_golden_store": true,
          "display_name": "component_recipe",
          "obj_type": "component",
          "data_source_entry": {
            "component_attribute": {
              "ds_is_golden_store": true,
              "display_name": "component_attribute",
              "obj_type": "attribute",
              "ds_name": "chef"
            }
          },
          "ds_name": "chef",
          "source_obj_type": "recipe"
        },
        "assoc_node_component": {
          "ds_is_golden_store": true,
          "display_name": "assoc_node_component",
          "obj_type": "assoc_node_component",
          "ds_name": "chef"
        }
      },
      "ds_name": "chef"
    },
    "ec2": {
      "display_name": "ec2",
      "data_source_entry": {
        "node_image": {
          "ds_is_golden_store": true,
          "display_name": "node_image",
          "obj_type": "node",
          "ds_name": "ec2",
          "source_obj_type": "image"
        },
        "node_instance": {
          "ds_is_golden_store": true,
          "display_name": "node_instance",
          "obj_type": "node",
          "ds_name": "ec2",
          "source_obj_type": "instance"
        }
      },
      "ds_name": "ec2"
    }
  },
  "node": {
    "i-4fc62e25": {
      "data_source": "ec2",
      "type": "instance",
      "is_deployed": true,
      "display_name": "i-4fc62e25",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "state": "stopped",
        "flavor_id": "m1.small",
        "root_device_name": null,
        "subnet_id": null,
        "ip_address": null,
        "private_ip_address": null,
        "created_at": "2010-08-08T00:36:32Z",
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "id": "m1.small",
          "bits": 32
        },
        "ami_launch_index": 0,
        "availability_zone": "us-east-1a",
        "monitoring": false,
        "kernel_id": "aki-5f15f636",
        "dns_name": null,
        "user_data": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-06-25T23:20:18Z",
            "volumeId": "vol-5e2fb637",
            "deviceName": "/dev/sda1"
          }
        ],
        "groups": [
          "basic",
          "default"
        ],
        "private_dns_name": null,
        "key_name": "rich-east",
        "reason": null,
        "image_id": "ami-6743ae0e",
        "root_device_type": "ebs",
        "id": "i-4fc62e25",
        "product_codes": [

        ],
        "ramdisk_id": "ari-d5709dbc"
      },
      "ds_key": "[:ec2, :instance, \"i-4fc62e25\"]",
      "ds_source_obj_type": "instance",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      }
    },
    "ami-6743ae0e": {
      "data_source": "ec2",
      "type": "image",
      "is_deployed": false,
      "display_name": "ami-6743ae0e",
      "ds_attributes": {
        "state": "available",
        "type": "machine",
        "root_device_name": "/dev/sda1",
        "architecture": "i386",
        "location": "063491364108/ubuntu-9.10-karmic-server-i386-20100121",
        "kernel_id": "aki-5f15f636",
        "block_device_mapping": [
          {
            "deleteOnTermination": "true",
            "snapshotId": "snap-5d6f2234",
            "volumeSize": "15",
            "deviceName": "/dev/sda1"
          }
        ],
        "platform": null,
        "owner_id": "063491364108",
        "root_device_type": "ebs",
        "id": "ami-6743ae0e",
        "product_codes": [

        ],
        "is_public": true,
        "ramdisk_id": "ari-d5709dbc"
      },
      "ds_key": "[:ec2, :image, \"ami-6743ae0e\"]",
      "ds_source_obj_type": "image"
    },
    "ami-06c72c6f": {
      "data_source": "ec2",
      "type": "image",
      "is_deployed": false,
      "display_name": "ami-06c72c6f",
      "ds_attributes": {
        "state": "available",
        "type": "machine",
        "root_device_name": "/dev/sda1",
        "architecture": "i386",
        "location": "411986592491/rnp-chef-09-6-ubuntu-910-x86_32",
        "kernel_id": "aki-5f15f636",
        "block_device_mapping": [
          {
            "deleteOnTermination": "true",
            "snapshotId": "snap-caa459a1",
            "volumeSize": "15",
            "deviceName": "/dev/sda1"
          }
        ],
        "platform": null,
        "owner_id": "411986592491",
        "root_device_type": "ebs",
        "id": "ami-06c72c6f",
        "product_codes": [

        ],
        "is_public": false,
        "ramdisk_id": "ari-d5709dbc"
      },
      "ds_key": "[:ec2, :image, \"ami-06c72c6f\"]",
      "ds_source_obj_type": "image"
    },
    "i-c1b527ab": {
      "data_source": "ec2",
      "type": "instance",
      "is_deployed": true,
      "display_name": "i-c1b527ab",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "state": "stopped",
        "flavor_id": "m1.small",
        "root_device_name": null,
        "subnet_id": null,
        "ip_address": null,
        "private_ip_address": null,
        "created_at": "2010-08-15T22:58:22Z",
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "id": "m1.small",
          "bits": 32
        },
        "ami_launch_index": 0,
        "availability_zone": "us-east-1a",
        "monitoring": false,
        "kernel_id": "aki-5f15f636",
        "dns_name": null,
        "user_data": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-08-14T21:37:53Z",
            "volumeId": "vol-2087c649",
            "deviceName": "/dev/sda1"
          }
        ],
        "groups": [
          "basic",
          "default"
        ],
        "private_dns_name": null,
        "key_name": "rich-east",
        "reason": "User initiated (2010-08-16 06:23:58 GMT)",
        "image_id": "ami-06c72c6f",
        "root_device_type": "ebs",
        "id": "i-c1b527ab",
        "product_codes": [

        ],
        "ramdisk_id": "ari-d5709dbc"
      },
      "ds_key": "[:ec2, :instance, \"i-c1b527ab\"]",
      "ds_source_obj_type": "instance",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      }
    },
    "i-b04bf4da": {
      "data_source": "ec2",
      "type": "instance",
      "is_deployed": true,
      "display_name": "i-b04bf4da",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "state": "stopped",
        "flavor_id": "m1.small",
        "root_device_name": null,
        "subnet_id": null,
        "ip_address": null,
        "private_ip_address": null,
        "created_at": "2010-08-11T16:46:06Z",
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "id": "m1.small",
          "bits": 32
        },
        "ami_launch_index": 0,
        "availability_zone": "us-east-1a",
        "monitoring": false,
        "kernel_id": "aki-5f15f636",
        "dns_name": null,
        "user_data": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-08-02T19:04:05Z",
            "volumeId": "vol-e62e518f",
            "deviceName": "/dev/sda1"
          }
        ],
        "groups": [
          "basic",
          "default"
        ],
        "private_dns_name": null,
        "key_name": "rich-east",
        "reason": "User initiated (2010-08-12 02:19:08 GMT)",
        "image_id": "ami-06c72c6f",
        "root_device_type": "ebs",
        "id": "i-b04bf4da",
        "product_codes": [

        ],
        "ramdisk_id": "ari-d5709dbc"
      },
      "ds_key": "[:ec2, :instance, \"i-b04bf4da\"]",
      "ds_source_obj_type": "instance",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      }
    },
    "i-374b945d": {
      "data_source": "ec2",
      "type": "instance",
      "is_deployed": true,
      "display_name": "i-374b945d",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "state": "stopped",
        "flavor_id": "m1.small",
        "root_device_name": null,
        "subnet_id": null,
        "ip_address": null,
        "private_ip_address": null,
        "created_at": "2010-08-08T00:38:43Z",
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "id": "m1.small",
          "bits": 32
        },
        "ami_launch_index": 0,
        "availability_zone": "us-east-1a",
        "monitoring": false,
        "kernel_id": "aki-5f15f636",
        "dns_name": null,
        "user_data": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-07-19T04:41:53Z",
            "volumeId": "vol-3c3d5455",
            "deviceName": "/dev/sda1"
          }
        ],
        "groups": [
          "basic",
          "default"
        ],
        "private_dns_name": null,
        "key_name": "rich-east",
        "reason": null,
        "image_id": "ami-88f71ce1",
        "root_device_type": "ebs",
        "id": "i-374b945d",
        "product_codes": [

        ],
        "ramdisk_id": "ari-d5709dbc"
      },
      "ds_key": "[:ec2, :instance, \"i-374b945d\"]",
      "ds_source_obj_type": "instance",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      }
    },
    "i-33886f59": {
      "data_source": "ec2",
      "type": "instance",
      "is_deployed": true,
      "address_access_point": {
        "internet_ipv4": {
          "type": "internet",
          "display_name": "internet_ipv4",
          "*network_partition_id": "/network_partition/internet",
          "network_address": {
            "address": "184.73.175.145",
            "family": "ipv4"
          }
        }
      },
      "display_name": "i-33886f59",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "state": "running",
        "flavor_id": "m1.small",
        "root_device_name": null,
        "subnet_id": null,
        "ip_address": "184.73.175.145",
        "private_ip_address": "10.201.206.163",
        "created_at": "2010-08-21T17:10:48Z",
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "id": "m1.small",
          "bits": 32
        },
        "ami_launch_index": 0,
        "availability_zone": "us-east-1a",
        "monitoring": false,
        "kernel_id": "aki-5f15f636",
        "dns_name": "ec2-184-73-175-145.compute-1.amazonaws.com",
        "user_data": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-06-20T19:07:02Z",
            "volumeId": "vol-d265f8bb",
            "deviceName": "/dev/sda1"
          }
        ],
        "groups": [
          "basic",
          "default"
        ],
        "private_dns_name": "domU-12-31-39-13-CD-55.compute-1.internal",
        "key_name": "rich-east",
        "reason": null,
        "image_id": "ami-693ad300",
        "root_device_type": "ebs",
        "id": "i-33886f59",
        "product_codes": [

        ],
        "ramdisk_id": "ari-d5709dbc"
      },
      "ds_key": "[:ec2, :instance, \"i-33886f59\"]",
      "ds_source_obj_type": "instance",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "address": "10.201.206.163",
          "display_name": "eth0"
        }
      }
    },
    "ami-bf3ad3d6": {
      "data_source": "ec2",
      "type": "image",
      "is_deployed": false,
      "display_name": "ami-bf3ad3d6",
      "ds_attributes": {
        "state": "available",
        "type": "machine",
        "root_device_name": "/dev/sda1",
        "architecture": "i386",
        "location": "411986592491/rnp-chef-server-0816-ubuntu-910-x86_32",
        "kernel_id": "aki-5f15f636",
        "block_device_mapping": [
          {
            "deleteOnTermination": "true",
            "snapshotId": "snap-324cdb5a",
            "volumeSize": "15",
            "deviceName": "/dev/sda1"
          }
        ],
        "platform": null,
        "owner_id": "411986592491",
        "root_device_type": "ebs",
        "id": "ami-bf3ad3d6",
        "product_codes": [

        ],
        "is_public": false,
        "ramdisk_id": "ari-d5709dbc"
      },
      "ds_key": "[:ec2, :image, \"ami-bf3ad3d6\"]",
      "ds_source_obj_type": "image"
    },
    "ami-693ad300": {
      "data_source": "ec2",
      "type": "image",
      "is_deployed": false,
      "display_name": "ami-693ad300",
      "ds_attributes": {
        "state": "available",
        "type": "machine",
        "root_device_name": "/dev/sda1",
        "architecture": "i386",
        "location": "411986592491/rnp-chef-0816-ubuntu-910-x86_32",
        "kernel_id": "aki-5f15f636",
        "block_device_mapping": [
          {
            "deleteOnTermination": "true",
            "snapshotId": "snap-3c57c054",
            "volumeSize": "15",
            "deviceName": "/dev/sda1"
          }
        ],
        "platform": null,
        "owner_id": "411986592491",
        "root_device_type": "ebs",
        "id": "ami-693ad300",
        "product_codes": [

        ],
        "is_public": false,
        "ramdisk_id": "ari-d5709dbc"
      },
      "ds_key": "[:ec2, :image, \"ami-693ad300\"]",
      "ds_source_obj_type": "image"
    },
    "i-bd39e2d7": {
      "data_source": "ec2",
      "type": "instance",
      "is_deployed": true,
      "display_name": "i-bd39e2d7",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "state": "stopped",
        "flavor_id": "m1.small",
        "root_device_name": null,
        "subnet_id": null,
        "ip_address": null,
        "private_ip_address": null,
        "created_at": "2010-08-11T21:27:01Z",
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "id": "m1.small",
          "bits": 32
        },
        "ami_launch_index": 0,
        "availability_zone": "us-east-1a",
        "monitoring": false,
        "kernel_id": "aki-5f15f636",
        "dns_name": null,
        "user_data": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-07-20T22:15:22Z",
            "volumeId": "vol-74452d1d",
            "deviceName": "/dev/sda1"
          }
        ],
        "groups": [
          "basic",
          "default"
        ],
        "private_dns_name": null,
        "key_name": "rich-east",
        "reason": "User initiated (2010-08-12 02:19:03 GMT)",
        "image_id": "ami-34f61d5d",
        "root_device_type": "ebs",
        "id": "i-bd39e2d7",
        "product_codes": [

        ],
        "ramdisk_id": "ari-d5709dbc"
      },
      "ds_key": "[:ec2, :instance, \"i-bd39e2d7\"]",
      "ds_source_obj_type": "instance",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      }
    },
    "i-dfcb12b5": {
      "data_source": "ec2",
      "type": "instance",
      "is_deployed": true,
      "display_name": "i-dfcb12b5",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "state": "stopped",
        "flavor_id": "m1.small",
        "root_device_name": null,
        "subnet_id": null,
        "ip_address": null,
        "private_ip_address": null,
        "created_at": "2010-08-02T18:50:53Z",
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "id": "m1.small",
          "bits": 32
        },
        "ami_launch_index": 0,
        "availability_zone": "us-east-1a",
        "monitoring": false,
        "kernel_id": "aki-5f15f636",
        "dns_name": null,
        "user_data": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-07-19T20:57:55Z",
            "volumeId": "vol-8ca0c9e5",
            "deviceName": "/dev/sda1"
          }
        ],
        "groups": [
          "default",
          "test"
        ],
        "private_dns_name": null,
        "key_name": "rich-east",
        "reason": null,
        "image_id": "ami-34f61d5d",
        "root_device_type": "ebs",
        "id": "i-dfcb12b5",
        "product_codes": [

        ],
        "ramdisk_id": "ari-d5709dbc"
      },
      "ds_key": "[:ec2, :instance, \"i-dfcb12b5\"]",
      "ds_source_obj_type": "instance",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      }
    },
    "i-2f5b7a44": {
      "data_source": "ec2",
      "type": "instance",
      "is_deployed": true,
      "display_name": "i-2f5b7a44",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "state": "stopped",
        "flavor_id": "m1.small",
        "root_device_name": null,
        "subnet_id": null,
        "ip_address": null,
        "private_ip_address": null,
        "created_at": "2010-07-25T22:49:42Z",
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "id": "m1.small",
          "bits": 32
        },
        "ami_launch_index": 0,
        "availability_zone": "us-east-1a",
        "monitoring": false,
        "kernel_id": "aki-5f15f636",
        "dns_name": null,
        "user_data": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-05-19T20:33:31Z",
            "volumeId": "vol-f1be3f98",
            "deviceName": "/dev/sda1"
          }
        ],
        "groups": [
          "basic",
          "default"
        ],
        "private_dns_name": null,
        "key_name": "rich-east",
        "reason": "User initiated (2010-07-25 22:50:32 GMT)",
        "image_id": "ami-693ad300",
        "root_device_type": "ebs",
        "id": "i-2f5b7a44",
        "product_codes": [

        ],
        "ramdisk_id": "ari-d5709dbc"
      },
      "ds_key": "[:ec2, :instance, \"i-2f5b7a44\"]",
      "ds_source_obj_type": "instance",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      }
    },
    "i-11d8497b": {
      "is_deployed": false,
      "display_name": "i-11d8497b"
    },
    "i-07af096d": {
      "data_source": "ec2",
      "type": "instance",
      "is_deployed": true,
      "display_name": "i-07af096d",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "state": "stopped",
        "flavor_id": "m1.small",
        "root_device_name": null,
        "subnet_id": null,
        "ip_address": null,
        "private_ip_address": null,
        "created_at": "2010-08-11T20:40:18Z",
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "id": "m1.small",
          "bits": 32
        },
        "ami_launch_index": 0,
        "availability_zone": "us-east-1a",
        "monitoring": false,
        "kernel_id": "aki-5f15f636",
        "dns_name": null,
        "user_data": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-07-23T00:24:57Z",
            "volumeId": "vol-f6157f9f",
            "deviceName": "/dev/sda1"
          }
        ],
        "groups": [
          "basic",
          "default"
        ],
        "private_dns_name": null,
        "key_name": "rich-east",
        "reason": "User initiated (2010-08-12 02:19:19 GMT)",
        "image_id": "ami-06c72c6f",
        "root_device_type": "ebs",
        "id": "i-07af096d",
        "product_codes": [

        ],
        "ramdisk_id": "ari-d5709dbc"
      },
      "ds_key": "[:ec2, :instance, \"i-07af096d\"]",
      "ds_source_obj_type": "instance",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      }
    },
    "i-63775608": {
      "data_source": "ec2",
      "type": "instance",
      "is_deployed": true,
      "display_name": "i-63775608",
      "image_size": "0.17408E4",
      "ds_attributes": {
        "state": "stopped",
        "flavor_id": "m1.small",
        "root_device_name": null,
        "subnet_id": null,
        "ip_address": null,
        "private_ip_address": null,
        "created_at": "2010-07-26T19:00:08Z",
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "id": "m1.small",
          "bits": 32
        },
        "ami_launch_index": 0,
        "availability_zone": "us-east-1a",
        "monitoring": false,
        "kernel_id": "aki-5f15f636",
        "dns_name": null,
        "user_data": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-05-19T19:10:59Z",
            "volumeId": "vol-75b6371c",
            "deviceName": "/dev/sda1"
          }
        ],
        "groups": [
          "basic",
          "default"
        ],
        "private_dns_name": null,
        "key_name": "rich-east",
        "reason": "User initiated (2010-07-26 22:55:26 GMT)",
        "image_id": "ami-bf3ad3d6",
        "root_device_type": "ebs",
        "id": "i-63775608",
        "product_codes": [

        ],
        "ramdisk_id": "ari-d5709dbc"
      },
      "ds_key": "[:ec2, :instance, \"i-63775608\"]",
      "ds_source_obj_type": "instance",
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      }
    }
  },
  "component": {
    "hadoop::pig": {
      "external_cmp_ref": "recipe[hadoop::pig]",
      "attribute": {
        "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]": {
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]",
          "display_name": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]": {
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]",
          "display_name": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        }
      },
      "display_name": "hadoop::pig",
      "ds_attributes": {
        "name": "hadoop_cloudera_c3",
        "description": "Installs hadoop and sets up basic cluster per Cloudera's quick start docs"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"hadoop::pig\"]"
    },
    "hadoop::conf_pseudo": {
      "external_cmp_ref": "recipe[hadoop::conf_pseudo]",
      "attribute": {
        "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]": {
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]",
          "display_name": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]": {
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]",
          "display_name": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        }
      },
      "display_name": "hadoop::conf_pseudo",
      "ds_attributes": {
        "name": "hadoop_cloudera_c3",
        "description": "Installs hadoop and sets up basic cluster per Cloudera's quick start docs"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"hadoop::conf_pseudo\"]"
    },
    "i-07af096d__redis": {
      "external_cmp_ref": "recipe[redis]",
      "attribute": {
        "service[redis_service][sap]": {
          "external_attr_ref": "service[redis_service][sap]",
          "display_name": "service[redis_service][sap]",
          "hidden": false,
          "is_array": false,
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "tcp",
              "port": "6379"
            }
          ],
          "propagation_type": "immediate"
        }
      },
      "display_name": "i-07af096d__redis",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "redis": [
              {
                "params": {
                  "sap": [
                    {
                      "type": "inet",
                      "protocol": "tcp",
                      "port": {
                        "external_ref": {
                          "ref": "node[redis][port]",
                          "type": "chef_attribute"
                        }
                      }
                    }
                  ]
                },
                "canonical_service_name": "redis_service",
                "conditions": [
                  {
                    "name": "accessible_over_tcp",
                    "to_monitor": [
                      {
                        "params": [
                          "sap"
                        ],
                        "name": "inet_service_up"
                      }
                    ],
                    "description": "this service should be accessible over tcp"
                  },
                  {
                    "to_monitor": [
                      {
                        "params": [
                          "sap"
                        ],
                        "name": "redis_basic_health"
                      }
                    ],
                    "description": "anonymous user should be able to log into this service"
                  }
                ]
              }
            ]
          },
          "long_description": "__[{:conditions=>[{:description=>\"this service should be accessible over tcp\", :name=>\"accessible_over_tcp\", :to_monitor=>[{:params=>[\"sap\"], :name=>\"inet_service_up\"}]}, {:description=>\"anonymous user should be able to log into this service\", :to_monitor=>[{:params=>[\"sap\"], :name=>\"redis_basic_health\"}]}], :service_name=>\"redis_service\", :recipe_names=>[\"redis\"]}]__",
          "replacing": {
          },
          "version": "0.0.0",
          "recommendations": {
          },
          "attributes": {
            "_service/redis_service/sap": {
              "value": [
                {
                  "type": "inet",
                  "protocol": "tcp",
                  "port": "6379"
                }
              ]
            }
          },
          "providing": {
          },
          "dependencies": {
          },
          "recipes": {
          },
          "license": "Apache 2.0",
          "maintainer_email": "ops@runa.com",
          "groupings": {
          },
          "name": "redis",
          "maintainer": "Rich Pelavin",
          "platforms": {
          },
          "description": "Installs/Configures redis",
          "conflicting": {
          }
        },
        "recipe_name": "redis",
        "node_name": "i-07af096d"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-07af096d\", \"redis\"]"
    },
    "i-07af096d__chef_aux": {
      "external_cmp_ref": "recipe[chef_aux]",
      "display_name": "i-07af096d__chef_aux",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "chef_aux": [

            ]
          },
          "long_description": "",
          "replacing": {
          },
          "version": "0.0.0",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
            "chef_aux": [

            ]
          },
          "dependencies": {
          },
          "recipes": {
            "chef_aux": ""
          },
          "license": "Apache v2.0",
          "maintainer_email": "youremail@example.com",
          "groupings": {
          },
          "name": "chef_aux",
          "maintainer": "Your Name",
          "platforms": {
          },
          "description": "A fabulous new cookbook",
          "conflicting": {
          }
        },
        "recipe_name": "chef_aux",
        "node_name": "i-07af096d"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-07af096d\", \"chef_aux\"]"
    },
    "i-11d8497b__nagios::client": {
      "external_cmp_ref": "recipe[nagios::client]",
      "display_name": "i-11d8497b__nagios::client",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "nagios::client": [

            ]
          },
          "long_description": "= DESCRIPTION:\n\nInstalls and configures Nagios for a server and for clients using Chef 0.8 search capabilities.\n\n= REQUIREMENTS:\n\nRequires Chef 0.8+ for search capability of roles and data bags.\n\nA data bag named 'users' should exist, and users should have a groups value of \"sysadmins\" so the server recipe can search for who sysadmins are to notify. If this is not desired, remove the sysadmins search and other usage from the nagios::server recipe, and the contacts template.\n\nThe monitoring server that uses this recipe should have a role named 'monitoring'. The client recipe will use this to allow the monitoring server to connect via NRPE. A role named after the environment (e.g., \"production\") and a node attribute app_environment with a value of the same should be created for all nodes. The server uses this to search for only nodes that belong to its same environment.\n\nBecause of the heavy use of search, this recipe will not work with Chef Solo, as it cannot do any searches without a server.\n\n== Platform:\n\nTested on Ubuntu 9.04, Ubuntu 9.10 and Debian 5.\n\n== Cookbooks:\n\n* apache2\n\n= ATTRIBUTES:\n\nAttributes under the 'nagios' namespace.\n\n== Client:\n\nThe following attributes are used for the client NRPE checks for warning and critical levels.\n\nchecks.memory.critical\nchecks.memory.warning\nchecks.load.critical\nchecks.load.warning\nchecks.smtp_host - default relayhost to check for connectivity.\n\n== Server:\n\ndir - base server configuration directory.\nlog_dir - where the server logs.\ncache_dir\ndocroot\nconfig_subdir - for dropping in configurations as needed.\nnotifications_enabled - set to 1 to enable notification.\ncheck_external_commands\ndefault_contact_groups\nsysadmin_email - default notification email.\nsysadmin_sms_email - default notification sms.\ntemplates\ninterval_length - minimum interval.\ndefault_host.check_interval\ndefault_host.retry_interval\ndefault_host.max_check_attempts\ndefault_host.notification_interval\ndefault_service.check_interval\ndefault_service.retry_interval\ndefault_service.max_check_attempts\ndefault_service.notification_interval\n\n= USAGE:\n\nFor a Nagios server, create a role named 'monitoring', and add the following recipe to the run_list:\n\n    recipe[nagios::server]\n\nThis will allow client nodes to search for the server by this role and add its IP address to the allowed list for NRPE.\n\nTo install Nagios and NRPE on a client node:\n\n    include_recipe \"nagios::client\"\n\nThis is a fairly complicated cookbook. We'll describe the components in detail.\n\n== Definitions:\n\nnagios_conf:: This definition is used to drop in a configuration file in the base Nagios configuration directory's conf.d. This can be used for customized configurations for various services.\n\n== Libraries:\n\ndefault:: The library included with the cookbook provides some helper methods used in templates.\n\n* nagios_boolean\n* nagios_interval - calculates interval based on interval length and a given number of seconds.\n* nagios_attr - retrieves a nagios attribute from the node.\n\n== Recipes:\n\n=== Client\n\nThe client recipe searches for allowed servers via a role named 'monitoring'. The recipe will also install the required packages and start the NRPE service. A custom plugin for checking memory is also added.\n\nClient commands for NRPE can be modified by editing the nrpe.cfg.erb template.\n\n=== Server\n\nThe server recipe sets up Apache as the web front end. The nagios::client recipe is also included. This recipe also does a number of searches to dynamically build the hostgroups to monitor, hosts that belong to them and admins to notify of events/alerts.\n\nThe recipe does the following:\n\n1. Searches for members of the sysadmins group by searching through 'users' data bag and adds them to a list for notification/contacts.\n2. Search all nodes for a role matching the app_environment.\n3. Search all available roles and build a list which will be the Nagios hostgroups.\n4. Search for all nodes of each role and add the hostnames to the hostgroups.\n5. Installs various packages required for the server.\n6. Sets up some configuration directories.\n7. Moves the package-installed Nagios configuration to a 'dist' directory.\n8. Disables the 000-default site (present on Debian/Ubuntu Apache2 package installations).\n9. Enables the Nagios web front end configuration.\n10. Sets up the configuration templates for services, contacts, hostgroups and hosts.\n\n*NOTE*: You will probably need to change the services.cfg.erb template for your environment.\n\nTo add custom commands for service checks, these can be done on a per-role basis by editing the 'services.cfg.erb' template. This template has some pre-configured checks that use role names used in an example infrastructure. Here's a brief description:\n\n* monitoring - check_smtp (e.g., postfix relayhost) w/ NRPE and tcp port 514 (e.g., rsyslog)\n* load_balancer - check_nginx with NRPE.\n* appserver - check_unicorn with NRPE, e.g. a Rails application using Unicorn.\n* database_master - check_mysql_server with NRPE for a MySQL database master.\n\n= LICENSE and AUTHOR:\n\nAuthor:: Joshua Sierles <joshua@37signals.com>\nAuthor:: Nathan Haneysmith <nathan@opscode.com>\nAuthor:: Joshua Timberman <joshua@opscode.com>\n\nCopyright 2009, 37signals\nCopyright 2009-2010, Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
          "replacing": {
          },
          "version": "0.3.4",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
          },
          "dependencies": {
            "chef_aux": [

            ],
            "apache2": [

            ],
            "monitoring": [

            ]
          },
          "recipes": {
            "nagios::server": "Installs and configures a nagios server",
            "nagios": "Empty, use one of the other recipes",
            "nagios::client": "Installs and configures a nagios client with nrpe"
          },
          "license": "Apache 2.0",
          "maintainer_email": "cookbooks@opscode.com",
          "groupings": {
          },
          "name": "nagios",
          "maintainer": "Opscode, Inc.",
          "platforms": {
            "debian": [

            ],
            "ubuntu": [

            ]
          },
          "description": "Installs and configures nagios",
          "conflicting": {
          }
        },
        "recipe_name": "nagios::client",
        "node_name": "i-11d8497b"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-11d8497b\", \"nagios::client\"]"
    },
    "mysql::server2": {
      "external_cmp_ref": "recipe[mysql::server2]",
      "attribute": {
        "node[mysql][tunable][key_buffer]": {
          "external_attr_ref": "node[mysql][tunable][key_buffer]",
          "display_name": "node[mysql][tunable][key_buffer]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "250M",
          "propagation_type": "immediate"
        },
        "node[mysql][_service][mysql_server][monitor_user_id]": {
          "external_attr_ref": "node[mysql][_service][mysql_server][monitor_user_id]",
          "display_name": "node[mysql][_service][mysql_server][monitor_user_id]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][max_connections]": {
          "external_attr_ref": "node[mysql][tunable][max_connections]",
          "display_name": "node[mysql][tunable][max_connections]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "800",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][table_cache]": {
          "external_attr_ref": "node[mysql][tunable][table_cache]",
          "display_name": "node[mysql][tunable][table_cache]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate"
        },
        "node[mysql][datadir]": {
          "external_attr_ref": "node[mysql][datadir]",
          "display_name": "node[mysql][datadir]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "/var/lib/mysql",
          "propagation_type": "immediate"
        },
        "node[mysql][server_root_password]": {
          "external_attr_ref": "node[mysql][server_root_password]",
          "display_name": "node[mysql][server_root_password]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "randomly generated",
          "propagation_type": "immediate"
        },
        "node[mysql][sap]": {
          "external_attr_ref": "node[mysql][sap]",
          "display_name": "node[mysql][sap]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][net_read_timeout]": {
          "external_attr_ref": "node[mysql][tunable][net_read_timeout]",
          "display_name": "node[mysql][tunable][net_read_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][max_heap_table_size]": {
          "external_attr_ref": "node[mysql][tunable][max_heap_table_size]",
          "display_name": "node[mysql][tunable][max_heap_table_size]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "32M",
          "propagation_type": "immediate"
        },
        "node[mysql][bind_address]": {
          "external_attr_ref": "node[mysql][bind_address]",
          "display_name": "node[mysql][bind_address]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "ipaddress",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][back_log]": {
          "external_attr_ref": "node[mysql][tunable][back_log]",
          "display_name": "node[mysql][tunable][back_log]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][net_write_timeout]": {
          "external_attr_ref": "node[mysql][tunable][net_write_timeout]",
          "display_name": "node[mysql][tunable][net_write_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate"
        },
        "node[mysql][_service][mysql_server][db_info]": {
          "external_attr_ref": "node[mysql][_service][mysql_server][db_info]",
          "display_name": "node[mysql][_service][mysql_server][db_info]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][wait_timeout]": {
          "external_attr_ref": "node[mysql][tunable][wait_timeout]",
          "display_name": "node[mysql][tunable][wait_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "180",
          "propagation_type": "immediate"
        },
        "node[mysql][ec2_path]": {
          "external_attr_ref": "node[mysql][ec2_path]",
          "display_name": "node[mysql][ec2_path]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "/mnt/mysql",
          "propagation_type": "immediate"
        }
      },
      "display_name": "mysql::server2",
      "ds_attributes": {
        "name": "mysql",
        "description": "Installs and configures mysql for client or server"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"mysql::server2\"]"
    },
    "chef_aux": {
      "external_cmp_ref": "recipe[chef_aux]",
      "display_name": "chef_aux",
      "ds_attributes": {
        "name": "chef_aux",
        "description": "A fabulous new cookbook"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"chef_aux\"]"
    },
    "i-07af096d__mysql::server2": {
      "external_cmp_ref": "recipe[mysql::server2]",
      "attribute": {
        "node[mysql][tunable][key_buffer]": {
          "external_attr_ref": "node[mysql][tunable][key_buffer]",
          "display_name": "node[mysql][tunable][key_buffer]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "250M",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][max_connections]": {
          "external_attr_ref": "node[mysql][tunable][max_connections]",
          "display_name": "node[mysql][tunable][max_connections]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "800",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][table_cache]": {
          "external_attr_ref": "node[mysql][tunable][table_cache]",
          "display_name": "node[mysql][tunable][table_cache]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate"
        },
        "service[mysql_server][monitor_user_id]": {
          "external_attr_ref": "service[mysql_server][monitor_user_id]",
          "display_name": "service[mysql_server][monitor_user_id]",
          "hidden": false,
          "is_array": false,
          "value_asserted": "root",
          "propagation_type": "immediate"
        },
        "node[mysql][datadir]": {
          "external_attr_ref": "node[mysql][datadir]",
          "display_name": "node[mysql][datadir]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "/var/lib/mysql",
          "propagation_type": "immediate"
        },
        "node[mysql][server_root_password]": {
          "external_attr_ref": "node[mysql][server_root_password]",
          "display_name": "node[mysql][server_root_password]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "tempt5",
          "propagation_type": "immediate"
        },
        "node[mysql][sap]": {
          "external_attr_ref": "node[mysql][sap]",
          "display_name": "node[mysql][sap]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][net_read_timeout]": {
          "external_attr_ref": "node[mysql][tunable][net_read_timeout]",
          "display_name": "node[mysql][tunable][net_read_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][max_heap_table_size]": {
          "external_attr_ref": "node[mysql][tunable][max_heap_table_size]",
          "display_name": "node[mysql][tunable][max_heap_table_size]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "32M",
          "propagation_type": "immediate"
        },
        "node[mysql][bind_address]": {
          "external_attr_ref": "node[mysql][bind_address]",
          "display_name": "node[mysql][bind_address]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "10.249.126.208",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][back_log]": {
          "external_attr_ref": "node[mysql][tunable][back_log]",
          "display_name": "node[mysql][tunable][back_log]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][net_write_timeout]": {
          "external_attr_ref": "node[mysql][tunable][net_write_timeout]",
          "display_name": "node[mysql][tunable][net_write_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate"
        },
        "service[mysql_server][db_info]": {
          "external_attr_ref": "service[mysql_server][db_info]",
          "display_name": "service[mysql_server][db_info]",
          "hidden": false,
          "is_array": false,
          "value_asserted": [
            {
              "database": "mysql",
              "password": "tempt5",
              "username": "root"
            }
          ],
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][wait_timeout]": {
          "external_attr_ref": "node[mysql][tunable][wait_timeout]",
          "display_name": "node[mysql][tunable][wait_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "180",
          "propagation_type": "immediate"
        },
        "node[mysql][ec2_path]": {
          "external_attr_ref": "node[mysql][ec2_path]",
          "display_name": "node[mysql][ec2_path]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "/mnt/mysql",
          "propagation_type": "immediate"
        }
      },
      "display_name": "i-07af096d__mysql::server2",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "mysql::server2": [
              {
                "params": {
                  "db_info": [
                    {
                      "database": "mysql",
                      "password": {
                        "external_ref": {
                          "ref": "node[mysql][server_root_password]",
                          "type": "chef_attribute"
                        }
                      },
                      "username": "root"
                    }
                  ],
                  "monitor_user_id": "root"
                },
                "canonical_service_name": "mysql_server",
                "conditions": [
                  {
                    "name": "accessible_over_tcp",
                    "to_monitor": [
                      {
                        "params": [
                          "sap"
                        ],
                        "name": "inet_service_up"
                      }
                    ],
                    "description": "this service should be accessible over tcp"
                  },
                  {
                    "to_monitor": [
                      {
                        "applicability_conditions": [
                          "lambda{|p|p[:db_info] and p[:db_info].find{|x|x[:username] == p[:monitor_user_id]}}"
                        ],
                        "params": [
                          "db_info",
                          "monitor_user_id"
                        ],
                        "name": "mysql_basic_health"
                      }
                    ],
                    "description": "the user 'monitor_user_id' should be able to log into this service"
                  }
                ]
              }
            ]
          },
          "long_description": "= DESCRIPTION:\n\nInstalls and configures MySQL client or server.\n\n= REQUIREMENTS:\n\n== Platform:\n\nBest tested on Ubuntu 9.04,9.10. On EC2, requires platform that supports -o bind option for the 'mount' command.\n\n== Cookbooks:\n\nRequires Opscode's openssl cookbook for secure password generation.\n\nRequires a C compiler and Ruby development package in order to build mysql gem with native extensions. On Debian and Ubuntu systems this is satisfied by installing the \"build-essential\" and \"ruby-dev\" packages before running Chef. See USAGE below for information on how to handle this during a Chef run.\n\n= ATTRIBUTES: \n\n* mysql[:server_root_password] - Set the server's root password with this, default is a randomly generated password with OpenSSL::Random.random_bytes.\n* mysql[:server_repl_password] - Set the replication user 'repl' password with this, default is a randomly generated password with OpenSSL::Random.random_bytes.\n* mysql[:server_debian_password] - Set the debian-sys-maint user password with this, default is a randomly generated password with OpenSSL::Random.random_bytes.\n* mysql[:bind_address] - Listen address for MySQLd, default is node's ipaddress.\n* mysql[:datadir] - Location for mysql data directory, default is \"/var/lib/mysql\" \n* mysql[:ec2_path] - location of mysql datadir on EC2 nodes, default \"/mnt/mysql\" \n\nPerformance tuning attributes, each corresponds to the same-named parameter in my.cnf; default values listed\n\n* mysql[:tunable][:key_buffer]          = \"250M\"\n* mysql[:tunable][:max_connections]     = \"800\" \n* mysql[:tunable][:wait_timeout]        = \"180\" \n* mysql[:tunable][:net_write_timeout]   = \"30\" \n* mysql[:tunable][:net_write_timeout]   = \"30\" \n* mysql[:tunable][:back_log]            = \"128\" \n* mysql[:tunable][:table_cache]         = \"128\" \n* mysql[:tunable][:max_heap_table_size] = \"32M\" \n\n= USAGE:\n\nOn client nodes,\n\n  include_recipe \"mysql::client\"\n  \nAs the common use case is on systems with Ruby, we also install the MySQL RubyGem. Because we may want to be able to use the gem within another Chef recipe, we make sure the mysql development package and gem are installed first. The key is this:\n\n  r = package ... do\n    action :nothing\n  end\n  \n  r.run_action(:install)\n  \nThis creates a resource object for the package and does the installation before other recipes are parsed. You'll need to have the C compiler and such (ie, build-essential on Ubuntu) before running the recipes, but we already do that when installing Chef :-). If you want to be able to access a MySQL database via Ruby within another recipe, you could do so, like so:\n\n  Gem.clear_paths # needed for Chef to find the gem...\n  require 'mysql' # requires the mysql gem\n\n  execute \"create #{node[:railsapp][:db][:database]} database\" do\n    command \"/usr/bin/mysqladmin -u root -p#{node[:mysql][:server_root_password]} create #{node[:railsapp][:db][:database]}\"\n    not_if do\n      m = Mysql.new(\"localhost\", \"root\", @node[:mysql][:server_root_password])\n      m.list_dbs.include?(@node[:railsapp][:db][:database])\n    end\n  end\n\nOn server nodes, \n\n  include_recipe \"mysql::server\"\n  \nOn Debian/Ubuntu this will preseed the MySQL package with the randomly generated root password. You can of course change the password afterward, but this makes sure that there's a good password set. You can view it in the node data in the Chef Server webui. Sets a new password for debian-sys-maint user as well.\n\nAlso sets up 'repl' user grants for replication slaves.\n\nOn EC2 nodes,\n\n  include_recipe \"mysql::server_ec2\"\n  \nWhen the ec2_path doesn't exist we look for a mounted filesystem (eg, EBS) and move the datadir there.\n\nThe client recipe is already included by server and 'default' recipes.\n\nTo make sure that a C compiler and the Ruby development libraries are installed, use the following run list in the node or in a role:\n\n{\n  \"run_list\": [\n    \"recipe[build-essential]\",\n    \"recipe[ruby]\",\n    \"recipe[mysql::server]\"\n  ]\n}\n\nThe build-essential and ruby cookbooks install the packages in question during the \"execution\" phase of the Chef client run, rather than the compile phase when the MySQL gem is installed. To work around this for now until the build-essential and ruby packages are updated, modify your local copies of the recipes:\n\nIn the Opscode build-essential default recipe:\n\n %w{build-essential binutils-doc}.each do |pkg|\n   p = package pkg do\n     action :nothing\n   end\n   p.run_action(:install)\n end\n\nAnd the ruby recipe to have the following:\n\nextra_packages.each do |pkg|\n p = package pkg do\n   action :nothing\n end\n p.run_action(:install)\nend\n\nThese cookbooks aren't strict dependencies, and not if the installation process already included installing build-essential and ruby1.8-dev (e.g. RubyGems installation).\n\nFor more infromation on the compile vs execution phase of a Chef run:\n\nhttp://wiki.opscode.com/display/chef/Anatomy+of+a+Chef+Run\n\n= LICENSE and AUTHOR:\n      \nAuthor:: Joshua Timberman (<joshua@opscode.com>)\nAuthor:: AJ Christensen (<aj@opscode.com>)\n\nCopyright:: 2009, Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n__[{:conditions=>[{:description=>\"this service should be accessible over tcp\", :name=>\"accessible_over_tcp\", :to_monitor=>[{:params=>[\"sap\"], :name=>\"inet_service_up\"}]}, {:description=>\"the user 'monitor_user_id' should be able to log into this service\", :to_monitor=>[{:params=>[\"db_info\", \"monitor_user_id\"], :applicability_conditions=>[\"lambda{|p|p[:db_info] and p[:db_info].find{|x|x[:username] == p[:monitor_user_id]}}\"], :name=>\"mysql_basic_health\"}]}], :service_name=>\"mysql_server\", :recipe_names=>[\"mysql::server\", \"mysql::server2\"]}]__",
          "replacing": {
          },
          "version": "0.21.2",
          "recommendations": {
          },
          "attributes": {
            "mysql/tunable/net_read_timeout": {
              "type": "string",
              "value": "30",
              "required": "optional",
              "display_name": "MySQL Tunable Net Read Timeout",
              "recipes": [

              ],
              "default": "30",
              "choice": [

              ],
              "calculated": false
            },
            "_service/mysql_server/monitor_user_id": {
              "value": "root"
            },
            "mysql/bind_address": {
              "type": "string",
              "value": "10.249.126.208",
              "required": "optional",
              "display_name": "MySQL Bind Address",
              "recipes": [

              ],
              "default": "ipaddress",
              "description": "Address that mysqld should listen on",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/tunable/max_connections": {
              "type": "string",
              "value": "800",
              "required": "optional",
              "display_name": "MySQL Tunable Max Connections",
              "recipes": [

              ],
              "default": "800",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/tunable/max_heap_table_size": {
              "type": "string",
              "value": "32M",
              "required": "optional",
              "display_name": "MySQL Tunable Max Heap Table Size",
              "recipes": [

              ],
              "default": "32M",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/datadir": {
              "type": "string",
              "value": "/var/lib/mysql",
              "required": "optional",
              "display_name": "MySQL Data Directory",
              "recipes": [

              ],
              "default": "/var/lib/mysql",
              "description": "Location of mysql databases",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/tunable/table_cache": {
              "type": "string",
              "value": "128",
              "required": "optional",
              "display_name": "MySQL Tunable Table Cache",
              "recipes": [

              ],
              "default": "128",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/sap": {
              "type": "string",
              "transform": [
                {
                  "type": "inet",
                  "application": "sql::mysql",
                  "protocol": "tcp",
                  "port": 3306,
                  "binding_addr_constraints": [
                    "172.22.10.0/24"
                  ]
                },
                {
                  "type": "unix_socket",
                  "socket": "/var/run/mysqld/mysqld.sock"
                }
              ],
              "required": "optional",
              "is_canonical_attribute": true,
              "recipes": [
                "mysql::server",
                "mysql::server2"
              ],
              "choice": [

              ],
              "calculated": false
            },
            "mysql/tunable/wait_timeout": {
              "type": "string",
              "value": "180",
              "required": "optional",
              "display_name": "MySQL Tunable Wait Timeout",
              "recipes": [

              ],
              "default": "180",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/ec2_path": {
              "type": "string",
              "value": "/mnt/mysql",
              "required": "optional",
              "display_name": "MySQL EC2 Path",
              "recipes": [

              ],
              "default": "/mnt/mysql",
              "description": "Location of mysql directory on EC2 instance EBS volumes",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/tunable/back_log": {
              "type": "string",
              "value": "128",
              "required": "optional",
              "display_name": "MySQL Tunable Back Log",
              "recipes": [

              ],
              "default": "128",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/tunable/key_buffer": {
              "type": "string",
              "value": "250M",
              "required": "optional",
              "display_name": "MySQL Tuntable Key Buffer",
              "recipes": [

              ],
              "default": "250M",
              "choice": [

              ],
              "calculated": false
            },
            "_service/mysql_server/db_info": {
              "value": [
                {
                  "database": "mysql",
                  "password": "tempt5",
                  "username": "root"
                }
              ]
            },
            "mysql/server_root_password": {
              "type": "string",
              "value": "tempt5",
              "required": "optional",
              "display_name": "MySQL Server Root Password",
              "recipes": [

              ],
              "default": "randomly generated",
              "description": "Randomly generated password for the mysqld root user",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/tunable/net_write_timeout": {
              "type": "string",
              "value": "30",
              "required": "optional",
              "display_name": "MySQL Tunable Net Write Timeout",
              "recipes": [

              ],
              "default": "30",
              "choice": [

              ],
              "calculated": false
            }
          },
          "providing": {
          },
          "dependencies": {
            "openssl": [

            ]
          },
          "recipes": {
            "mysql::client": "Installs packages required for mysql clients using run_action magic",
            "mysql::server_ec2": "Performs EC2-specific mountpoint manipulation",
            "mysql::server": "Installs packages required for mysql servers w/o manual intervention",
            "mysql::server2": "Installs packages required for mysql servers w/o manual intervention"
          },
          "license": "Apache v2.0",
          "maintainer_email": "youremail@example.com",
          "groupings": {
          },
          "name": "mysql",
          "maintainer": "Your Name",
          "platforms": {
            "debian": [

            ],
            "ubuntu": [

            ]
          },
          "description": "Installs and configures mysql for client or server",
          "conflicting": {
          }
        },
        "recipe_name": "mysql::server2",
        "node_name": "i-07af096d"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-07af096d\", \"mysql::server2\"]"
    },
    "i-c1b527ab__chef_aux": {
      "external_cmp_ref": "recipe[chef_aux]",
      "display_name": "i-c1b527ab__chef_aux",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "chef_aux": [

            ]
          },
          "long_description": "",
          "replacing": {
          },
          "version": "0.0.0",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
            "chef_aux": [

            ]
          },
          "dependencies": {
          },
          "recipes": {
            "chef_aux": ""
          },
          "license": "Apache v2.0",
          "maintainer_email": "youremail@example.com",
          "groupings": {
          },
          "name": "chef_aux",
          "maintainer": "Your Name",
          "platforms": {
          },
          "description": "A fabulous new cookbook",
          "conflicting": {
          }
        },
        "recipe_name": "chef_aux",
        "node_name": "i-c1b527ab"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-c1b527ab\", \"chef_aux\"]"
    },
    "nagios": {
      "external_cmp_ref": "recipe[nagios]",
      "display_name": "nagios",
      "ds_attributes": {
        "name": "nagios",
        "description": "Installs and configures nagios"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"nagios\"]"
    },
    "hadoop::hive": {
      "external_cmp_ref": "recipe[hadoop::hive]",
      "attribute": {
        "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]": {
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]",
          "display_name": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]": {
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]",
          "display_name": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        }
      },
      "display_name": "hadoop::hive",
      "ds_attributes": {
        "name": "hadoop_cloudera_c3",
        "description": "Installs hadoop and sets up basic cluster per Cloudera's quick start docs"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"hadoop::hive\"]"
    },
    "i-11d8497b__java": {
      "external_cmp_ref": "recipe[java]",
      "display_name": "i-11d8497b__java",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "java": [

            ]
          },
          "long_description": "",
          "replacing": {
          },
          "version": "0.7.0",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
          },
          "dependencies": {
          },
          "recipes": {
          },
          "license": "Apache 2.0",
          "maintainer_email": "cookbooks@opscode.com",
          "groupings": {
          },
          "name": "java",
          "platforms": {
            "debian": [

            ],
            "ubuntu": [

            ]
          },
          "maintainer": "Opscode, Inc.",
          "description": "Installs java",
          "conflicting": {
          }
        },
        "recipe_name": "java",
        "node_name": "i-11d8497b"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-11d8497b\", \"java\"]"
    },
    "i-bd39e2d7__rabbitmq": {
      "external_cmp_ref": "recipe[rabbitmq]",
      "attribute": {
        "node[rabbitmq][branch_tag]": {
          "external_attr_ref": "node[rabbitmq][branch_tag]",
          "display_name": "node[rabbitmq][branch_tag]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "default",
          "propagation_type": "immediate"
        },
        "service[rabbitmq][sap]": {
          "external_attr_ref": "service[rabbitmq][sap]",
          "display_name": "service[rabbitmq][sap]",
          "hidden": false,
          "is_array": false,
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "tcp",
              "port": 5672
            }
          ],
          "propagation_type": "immediate"
        },
        "node[rabbitmq][stomp][branch_tag]": {
          "external_attr_ref": "node[rabbitmq][stomp][branch_tag]",
          "display_name": "node[rabbitmq][stomp][branch_tag]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "default",
          "propagation_type": "immediate"
        }
      },
      "display_name": "i-bd39e2d7__rabbitmq",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "rabbitmq": [
              {
                "params": {
                  "sap": [
                    {
                      "type": "inet",
                      "protocol": "tcp",
                      "port": 5672
                    }
                  ]
                },
                "canonical_service_name": "rabbitmq",
                "conditions": [
                  {
                    "name": "accessible_over_tcp",
                    "to_monitor": [
                      {
                        "params": [
                          "sap"
                        ],
                        "name": "inet_service_up"
                      }
                    ],
                    "description": "this service should be accessible over tcp"
                  },
                  {
                    "to_monitor": [
                      {
                        "attributes_to_monitor": [
                          {
                            "warning": "",
                            "attribute": "messages",
                            "critical": ""
                          },
                          {
                            "warning": "",
                            "attribute": "queues",
                            "critical": ""
                          },
                          {
                            "warning": "",
                            "attribute": "bindings",
                            "critical": ""
                          },
                          {
                            "warning": "",
                            "attribute": "exchanges",
                            "critical": ""
                          },
                          {
                            "warning": "",
                            "attribute": "connections",
                            "critical": ""
                          },
                          {
                            "warning": "",
                            "attribute": "queue_mem",
                            "critical": ""
                          }
                        ],
                        "params": [
                          "sap"
                        ],
                        "name": "rabbitmq_basic_health"
                      }
                    ],
                    "description": "rabbitmq server should be running"
                  }
                ]
              }
            ]
          },
          "long_description": "__[{:conditions=>[{:description=>\"this service should be accessible over tcp\", :name=>\"accessible_over_tcp\", :to_monitor=>[{:params=>[\"sap\"], :name=>\"inet_service_up\"}]}, {:description=>\"rabbitmq server should be running\", :to_monitor=>[{:params=>[\"sap\"], :attributes_to_monitor=>[{\"critical\"=>\"\", \"warning\"=>\"\", \"attribute\"=>\"messages\"}, {\"critical\"=>\"\", \"warning\"=>\"\", \"attribute\"=>\"queues\"}, {\"critical\"=>\"\", \"warning\"=>\"\", \"attribute\"=>\"bindings\"}, {\"critical\"=>\"\", \"warning\"=>\"\", \"attribute\"=>\"exchanges\"}, {\"critical\"=>\"\", \"warning\"=>\"\", \"attribute\"=>\"connections\"}, {\"critical\"=>\"\", \"warning\"=>\"\", \"attribute\"=>\"queue_mem\"}], :name=>\"rabbitmq_basic_health\"}]}], :service_name=>\"rabbitmq\", :recipe_names=>[\"rabbitmq\", \"rabbitmq::stomp\"]}]__",
          "replacing": {
          },
          "version": "0.1.0",
          "recommendations": {
          },
          "attributes": {
            "_service/rabbitmq/sap": {
              "value": [
                {
                  "type": "inet",
                  "protocol": "tcp",
                  "port": 5672
                }
              ]
            },
            "rabbitmq/stomp/branch_tag": {
              "type": "string",
              "required": "optional",
              "display_name": "RabbitMQ-stomp adapter tag/branch name",
              "recipes": [

              ],
              "default": "default",
              "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
              "choice": [

              ],
              "calculated": false
            },
            "rabbitmq/branch_tag": {
              "type": "string",
              "required": "optional",
              "display_name": "RabbitMQ tag/branch name",
              "recipes": [

              ],
              "default": "default",
              "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
              "choice": [

              ],
              "calculated": false
            }
          },
          "providing": {
          },
          "dependencies": {
            "erlang": [

            ],
            "ubuntu": [

            ]
          },
          "recipes": {
            "rabbitmq::edge_stomp": "Set up RabbitMQ-stomp adapter from source mercurial repository.",
            "rabbitmq::default": "Set up RabbitMQ from rabbitmq.com debian repository.",
            "rabbitmq::edge": "Set up RabbitMQ from source mercurial repository."
          },
          "license": "Apache 2.0",
          "maintainer_email": "ops@runa.com",
          "groupings": {
          },
          "name": "rabbitmq",
          "maintainer": "Runa Ops",
          "platforms": {
            "debian": [

            ],
            "ubuntu": [

            ]
          },
          "description": "Installs and configures RabbitMQ server and optionally rabbitmq-stomp from source",
          "conflicting": {
          }
        },
        "recipe_name": "rabbitmq",
        "node_name": "i-bd39e2d7"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-bd39e2d7\", \"rabbitmq\"]"
    },
    "i-bd39e2d7__chef_aux": {
      "external_cmp_ref": "recipe[chef_aux]",
      "display_name": "i-bd39e2d7__chef_aux",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "chef_aux": [

            ]
          },
          "long_description": "",
          "replacing": {
          },
          "version": "0.0.0",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
            "chef_aux": [

            ]
          },
          "dependencies": {
          },
          "recipes": {
            "chef_aux": ""
          },
          "license": "Apache v2.0",
          "maintainer_email": "youremail@example.com",
          "groupings": {
          },
          "name": "chef_aux",
          "maintainer": "Your Name",
          "platforms": {
          },
          "description": "A fabulous new cookbook",
          "conflicting": {
          }
        },
        "recipe_name": "chef_aux",
        "node_name": "i-bd39e2d7"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-bd39e2d7\", \"chef_aux\"]"
    },
    "i-dfcb12b5__hadoop::conf_pseudo": {
      "external_cmp_ref": "recipe[hadoop::conf_pseudo]",
      "display_name": "i-dfcb12b5__hadoop::conf_pseudo",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "hadoop": [

            ],
            "hadoop::conf_pseudo": [

            ]
          },
          "long_description": "= DESCRIPTION:\nAlong with the HBase Cookbook, builds a HBase / Hadoop Cluster suitable for using with Map/Reduce and HBase. \nIt is a literal translation of the ec2scripts in the HBase contrib of HBase 0.20.x.\n\nThis Hadoop Cookbook assumes its part of an HBase Cluster and has many databag or attribute elements based on HBase.\nIt assumes that the HBase Master and the Hadoop Primary, Secondary Nameservers are the same machine and that HBase Regionservers and Hadoop slaves are also together.\n(TODO: Make at least the secondary Nameserver on another machine). \nHaving multiple Zookeepers on other machines than the HBase Master has not been tested.\n\nThis should be refactored to be independent and support more flexible layouts of the cluster, but not by me for now. Or into a single HBase recipe.\n\nThis cookbook is in the style of the new Opscode Application / Database meta cookbooks. \nIt is driven by Databags more than Attributes and is designed to be tied to an Application via databag item[s] in the apps databag.\n\n\n= REQUIREMENTS:\n\n* hbase\n* java\n* ssh_known_hosts (I'm not sure if this is really needed but its included in the Recipe)\n\n= ATTRIBUTES: \n\n* none\n\n= USAGE:\n\nSee the USAGE info for the HBase Recipe. If you set things up for the HBase recipe, this Hadoop Cookbook will work.\n__[{:service_name=>\"hadoop_datanode\", :recipe_names=>[\"hadoop::slave\"], :conditions=>[{:description=>\"this service should be accessible over tcp\", :to_monitor=>[{:name=>\"check_hadoop_datanode_remotely\"}], :name=>\"accessible_over_tcp\"}]}, {:service_name=>\"hadoop_namenode\", :recipe_names=>[\"hadoop::master\"], :conditions=>[{:description=>\"this service should be accessible over tcp\", :to_monitor=>[{:name=>\"check_hadoop_namenode_remotely\"}], :name=>\"accessible_over_tcp\"}, {:description=>\"a hadoop dfs report is availble\", :to_monitor=>[{:name=>\"check_hadoop_dfs_runa\"}]}]}]__",
          "replacing": {
          },
          "version": "0.1.0",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
          },
          "dependencies": {
            "ssh_known_hosts": [

            ],
            "java_sun": [

            ]
          },
          "recipes": {
          },
          "license": "Apache 2.0",
          "maintainer_email": "ops@runa.com",
          "groupings": {
          },
          "name": "hadoop",
          "maintainer": "Runa Inc.",
          "platforms": {
          },
          "description": "Installs/Configures hadoop",
          "conflicting": {
          }
        },
        "recipe_name": "hadoop::conf_pseudo",
        "node_name": "i-dfcb12b5"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-dfcb12b5\", \"hadoop::conf_pseudo\"]"
    },
    "mysql::client": {
      "external_cmp_ref": "recipe[mysql::client]",
      "attribute": {
        "node[mysql][tunable][key_buffer]": {
          "external_attr_ref": "node[mysql][tunable][key_buffer]",
          "display_name": "node[mysql][tunable][key_buffer]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "250M",
          "propagation_type": "immediate"
        },
        "node[mysql][_service][mysql_server][monitor_user_id]": {
          "external_attr_ref": "node[mysql][_service][mysql_server][monitor_user_id]",
          "display_name": "node[mysql][_service][mysql_server][monitor_user_id]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][max_connections]": {
          "external_attr_ref": "node[mysql][tunable][max_connections]",
          "display_name": "node[mysql][tunable][max_connections]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "800",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][table_cache]": {
          "external_attr_ref": "node[mysql][tunable][table_cache]",
          "display_name": "node[mysql][tunable][table_cache]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate"
        },
        "node[mysql][datadir]": {
          "external_attr_ref": "node[mysql][datadir]",
          "display_name": "node[mysql][datadir]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "/var/lib/mysql",
          "propagation_type": "immediate"
        },
        "node[mysql][server_root_password]": {
          "external_attr_ref": "node[mysql][server_root_password]",
          "display_name": "node[mysql][server_root_password]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "randomly generated",
          "propagation_type": "immediate"
        },
        "node[mysql][sap]": {
          "external_attr_ref": "node[mysql][sap]",
          "display_name": "node[mysql][sap]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][net_read_timeout]": {
          "external_attr_ref": "node[mysql][tunable][net_read_timeout]",
          "display_name": "node[mysql][tunable][net_read_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][max_heap_table_size]": {
          "external_attr_ref": "node[mysql][tunable][max_heap_table_size]",
          "display_name": "node[mysql][tunable][max_heap_table_size]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "32M",
          "propagation_type": "immediate"
        },
        "node[mysql][bind_address]": {
          "external_attr_ref": "node[mysql][bind_address]",
          "display_name": "node[mysql][bind_address]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "ipaddress",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][back_log]": {
          "external_attr_ref": "node[mysql][tunable][back_log]",
          "display_name": "node[mysql][tunable][back_log]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][net_write_timeout]": {
          "external_attr_ref": "node[mysql][tunable][net_write_timeout]",
          "display_name": "node[mysql][tunable][net_write_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate"
        },
        "node[mysql][_service][mysql_server][db_info]": {
          "external_attr_ref": "node[mysql][_service][mysql_server][db_info]",
          "display_name": "node[mysql][_service][mysql_server][db_info]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][wait_timeout]": {
          "external_attr_ref": "node[mysql][tunable][wait_timeout]",
          "display_name": "node[mysql][tunable][wait_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "180",
          "propagation_type": "immediate"
        },
        "node[mysql][ec2_path]": {
          "external_attr_ref": "node[mysql][ec2_path]",
          "display_name": "node[mysql][ec2_path]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "/mnt/mysql",
          "propagation_type": "immediate"
        }
      },
      "display_name": "mysql::client",
      "ds_attributes": {
        "name": "mysql",
        "description": "Installs and configures mysql for client or server"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"mysql::client\"]"
    },
    "rabbitmq::edge_stomp": {
      "external_cmp_ref": "recipe[rabbitmq::edge_stomp]",
      "attribute": {
        "node[rabbitmq][branch_tag]": {
          "external_attr_ref": "node[rabbitmq][branch_tag]",
          "display_name": "node[rabbitmq][branch_tag]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "default",
          "propagation_type": "immediate"
        },
        "node[rabbitmq][_service][rabbitmq][sap]": {
          "external_attr_ref": "node[rabbitmq][_service][rabbitmq][sap]",
          "display_name": "node[rabbitmq][_service][rabbitmq][sap]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[rabbitmq][stomp][branch_tag]": {
          "external_attr_ref": "node[rabbitmq][stomp][branch_tag]",
          "display_name": "node[rabbitmq][stomp][branch_tag]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "default",
          "propagation_type": "immediate"
        }
      },
      "display_name": "rabbitmq::edge_stomp",
      "ds_attributes": {
        "name": "rabbitmq",
        "description": "Installs and configures RabbitMQ server and optionally rabbitmq-stomp from source"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"rabbitmq::edge_stomp\"]"
    },
    "i-c1b527ab__java": {
      "external_cmp_ref": "recipe[java]",
      "display_name": "i-c1b527ab__java",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "java": [

            ]
          },
          "long_description": "",
          "replacing": {
          },
          "version": "0.7.0",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
          },
          "dependencies": {
          },
          "recipes": {
          },
          "license": "Apache 2.0",
          "maintainer_email": "cookbooks@opscode.com",
          "groupings": {
          },
          "name": "java",
          "platforms": {
            "debian": [

            ],
            "ubuntu": [

            ]
          },
          "maintainer": "Opscode, Inc.",
          "description": "Installs java",
          "conflicting": {
          }
        },
        "recipe_name": "java",
        "node_name": "i-c1b527ab"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-c1b527ab\", \"java\"]"
    },
    "i-b04bf4da__nagios::client": {
      "external_cmp_ref": "recipe[nagios::client]",
      "display_name": "i-b04bf4da__nagios::client",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "nagios::client": [

            ]
          },
          "long_description": "= DESCRIPTION:\n\nInstalls and configures Nagios for a server and for clients using Chef 0.8 search capabilities.\n\n= REQUIREMENTS:\n\nRequires Chef 0.8+ for search capability of roles and data bags.\n\nA data bag named 'users' should exist, and users should have a groups value of \"sysadmins\" so the server recipe can search for who sysadmins are to notify. If this is not desired, remove the sysadmins search and other usage from the nagios::server recipe, and the contacts template.\n\nThe monitoring server that uses this recipe should have a role named 'monitoring'. The client recipe will use this to allow the monitoring server to connect via NRPE. A role named after the environment (e.g., \"production\") and a node attribute app_environment with a value of the same should be created for all nodes. The server uses this to search for only nodes that belong to its same environment.\n\nBecause of the heavy use of search, this recipe will not work with Chef Solo, as it cannot do any searches without a server.\n\n== Platform:\n\nTested on Ubuntu 9.04, Ubuntu 9.10 and Debian 5.\n\n== Cookbooks:\n\n* apache2\n\n= ATTRIBUTES:\n\nAttributes under the 'nagios' namespace.\n\n== Client:\n\nThe following attributes are used for the client NRPE checks for warning and critical levels.\n\nchecks.memory.critical\nchecks.memory.warning\nchecks.load.critical\nchecks.load.warning\nchecks.smtp_host - default relayhost to check for connectivity.\n\n== Server:\n\ndir - base server configuration directory.\nlog_dir - where the server logs.\ncache_dir\ndocroot\nconfig_subdir - for dropping in configurations as needed.\nnotifications_enabled - set to 1 to enable notification.\ncheck_external_commands\ndefault_contact_groups\nsysadmin_email - default notification email.\nsysadmin_sms_email - default notification sms.\ntemplates\ninterval_length - minimum interval.\ndefault_host.check_interval\ndefault_host.retry_interval\ndefault_host.max_check_attempts\ndefault_host.notification_interval\ndefault_service.check_interval\ndefault_service.retry_interval\ndefault_service.max_check_attempts\ndefault_service.notification_interval\n\n= USAGE:\n\nFor a Nagios server, create a role named 'monitoring', and add the following recipe to the run_list:\n\n    recipe[nagios::server]\n\nThis will allow client nodes to search for the server by this role and add its IP address to the allowed list for NRPE.\n\nTo install Nagios and NRPE on a client node:\n\n    include_recipe \"nagios::client\"\n\nThis is a fairly complicated cookbook. We'll describe the components in detail.\n\n== Definitions:\n\nnagios_conf:: This definition is used to drop in a configuration file in the base Nagios configuration directory's conf.d. This can be used for customized configurations for various services.\n\n== Libraries:\n\ndefault:: The library included with the cookbook provides some helper methods used in templates.\n\n* nagios_boolean\n* nagios_interval - calculates interval based on interval length and a given number of seconds.\n* nagios_attr - retrieves a nagios attribute from the node.\n\n== Recipes:\n\n=== Client\n\nThe client recipe searches for allowed servers via a role named 'monitoring'. The recipe will also install the required packages and start the NRPE service. A custom plugin for checking memory is also added.\n\nClient commands for NRPE can be modified by editing the nrpe.cfg.erb template.\n\n=== Server\n\nThe server recipe sets up Apache as the web front end. The nagios::client recipe is also included. This recipe also does a number of searches to dynamically build the hostgroups to monitor, hosts that belong to them and admins to notify of events/alerts.\n\nThe recipe does the following:\n\n1. Searches for members of the sysadmins group by searching through 'users' data bag and adds them to a list for notification/contacts.\n2. Search all nodes for a role matching the app_environment.\n3. Search all available roles and build a list which will be the Nagios hostgroups.\n4. Search for all nodes of each role and add the hostnames to the hostgroups.\n5. Installs various packages required for the server.\n6. Sets up some configuration directories.\n7. Moves the package-installed Nagios configuration to a 'dist' directory.\n8. Disables the 000-default site (present on Debian/Ubuntu Apache2 package installations).\n9. Enables the Nagios web front end configuration.\n10. Sets up the configuration templates for services, contacts, hostgroups and hosts.\n\n*NOTE*: You will probably need to change the services.cfg.erb template for your environment.\n\nTo add custom commands for service checks, these can be done on a per-role basis by editing the 'services.cfg.erb' template. This template has some pre-configured checks that use role names used in an example infrastructure. Here's a brief description:\n\n* monitoring - check_smtp (e.g., postfix relayhost) w/ NRPE and tcp port 514 (e.g., rsyslog)\n* load_balancer - check_nginx with NRPE.\n* appserver - check_unicorn with NRPE, e.g. a Rails application using Unicorn.\n* database_master - check_mysql_server with NRPE for a MySQL database master.\n\n= LICENSE and AUTHOR:\n\nAuthor:: Joshua Sierles <joshua@37signals.com>\nAuthor:: Nathan Haneysmith <nathan@opscode.com>\nAuthor:: Joshua Timberman <joshua@opscode.com>\n\nCopyright 2009, 37signals\nCopyright 2009-2010, Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
          "replacing": {
          },
          "version": "0.3.4",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
          },
          "dependencies": {
            "chef_aux": [

            ],
            "apache2": [

            ],
            "monitoring": [

            ]
          },
          "recipes": {
            "nagios::server": "Installs and configures a nagios server",
            "nagios": "Empty, use one of the other recipes",
            "nagios::client": "Installs and configures a nagios client with nrpe"
          },
          "license": "Apache 2.0",
          "maintainer_email": "cookbooks@opscode.com",
          "groupings": {
          },
          "name": "nagios",
          "maintainer": "Opscode, Inc.",
          "platforms": {
            "debian": [

            ],
            "ubuntu": [

            ]
          },
          "description": "Installs and configures nagios",
          "conflicting": {
          }
        },
        "recipe_name": "nagios::client",
        "node_name": "i-b04bf4da"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-b04bf4da\", \"nagios::client\"]"
    },
    "i-b04bf4da__hadoop_cloudera_c3::conf_pseudo": {
      "external_cmp_ref": "recipe[hadoop_cloudera_c3::conf_pseudo]",
      "attribute": {
        "service[hadoop_namenode][jmxremote_password]": {
          "external_attr_ref": "service[hadoop_namenode][jmxremote_password]",
          "display_name": "service[hadoop_namenode][jmxremote_password]",
          "hidden": false,
          "is_array": false,
          "value_asserted": "QED",
          "propagation_type": "immediate"
        },
        "service[hadoop_namenode][jmxremote_port]": {
          "external_attr_ref": "service[hadoop_namenode][jmxremote_port]",
          "display_name": "service[hadoop_namenode][jmxremote_port]",
          "hidden": false,
          "is_array": false,
          "value_asserted": "1618",
          "propagation_type": "immediate"
        }
      },
      "display_name": "i-b04bf4da__hadoop_cloudera_c3::conf_pseudo",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "hadoop_cloudera_c3::conf_pseudo": [
              {
                "canonical_service_name": "hadoop_datanode",
                "conditions": [
                  {
                    "name": "accessible_over_tcp",
                    "to_monitor": [
                      {
                        "name": "check_hadoop_datanode_remotely"
                      }
                    ],
                    "description": "this service should be accessible over tcp"
                  }
                ]
              },
              {
                "params": {
                  "jmxremote_password": {
                    "external_ref": {
                      "ref": "node[hadoop][jmxremote][password]",
                      "type": "chef_attribute"
                    }
                  },
                  "jmxremote_port": {
                    "external_ref": {
                      "ref": "node[hadoop][jmxremote][namenode][port]",
                      "type": "chef_attribute"
                    }
                  }
                },
                "canonical_service_name": "hadoop_namenode",
                "conditions": [
                  {
                    "name": "accessible_over_tcp",
                    "to_monitor": [
                      {
                        "name": "check_hadoop_namenode_remotely"
                      }
                    ],
                    "description": "this service should be accessible over tcp"
                  },
                  {
                    "to_monitor": [
                      {
                        "name": "check_hadoop_dfs"
                      }
                    ],
                    "description": "a hadoop dfs report is available"
                  },
                  {
                    "to_monitor": [
                      {
                        "attributes_to_monitor": [
                          {
                            "warning": ">750000",
                            "attribute": "FilesTotal",
                            "object_name": "hadoop:name=FSNamesystemState,service=NameNode",
                            "critical": ">1000000"
                          },
                          {
                            "warning": "",
                            "attribute": "CapacityTotal",
                            "object_name": "hadoop:name=FSNamesystemState,service=NameNode",
                            "critical": "<20000000"
                          },
                          {
                            "warning": "",
                            "attribute": "HeapMemoryUsage.used",
                            "object_name": "java.lang:type=Memory",
                            "critical": ""
                          }
                        ],
                        "params": [
                          "jmxremote_port",
                          "jmxremote_password"
                        ],
                        "name": "check_hadoop_namenode_jmx"
                      }
                    ],
                    "description": "jmx attributes are monitored"
                  }
                ]
              }
            ]
          },
          "long_description": "= DESCRIPTION:\n\nInstalls Apache hadoop and sets up a basic distributed cluster per the quick start documentation.\n\n= REQUIREMENTS:\n\n== Platform:\n\nTested on Ubuntu 8.10, though should work on most Linux distributions, see hadoop[:java_home].\n\n== Cookbooks:\n\nOpscode cookbooks, http://github.com/opscode/cookbooks/tree/master:\n\n* java\n\n= ATTRIBUTES: \n\n* hadoop[:mirror_url] - Get a mirror from http://www.apache.org/dyn/closer.cgi/hadoop/core/.\n* hadoop[:version] - Specify the version of hadoop to install.\n* hadoop[:uid] - Default userid of the hadoop user.\n* hadoop[:gid] - Default group for the hadoop user.\n* hadoop[:java_home] - You will probably want to change this to match where Java is installed on your platform.\n\nYou may wish to add more attributes for tuning the configuration file templates.\n\n= USAGE:\n\nThis cookbook performs the tasks described in the Hadoop Quick Start[1] to get the software installed. You should copy this to a site-cookbook and modify the templates to meet your requirements. \n\nOnce the recipe is run, the distributed filesystem can be formated using the script /usr/bin/hadoop. \n\n  sudo -u hadoop /usr/bin/hadoop namenode -format\n  \nYou may need to set up SSH keys for hadoop management commands. \n\nNote that this is not the 'default' config per se, so using the start-all.sh script won't start the processes because the config files live elsewhere. For running various hadoop processes as services, we suggest runit. A sample 'run' script is provided. The HADOOP_LOG_DIR in the run script must exist for each process. These could be wrapped in a define. \n\n* datanode\n* jobtracker\n* namenode\n* tasktracker\n\n\n[1] http://hadoop.apache.org/core/docs/current/quickstart.html\n\n= LICENSE and AUTHOR:\n      \nAuthor:: Joshua Timberman (<joshua@opscode.com>)\n\nCopyright:: 2009, Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.__[{:service_name=>\"hadoop_datanode\", :conditions=>[{:to_monitor=>[{:name=>\"check_hadoop_datanode_remotely\"}], :description=>\"this service should be accessible over tcp\", :name=>\"accessible_over_tcp\"}], :recipe_names=>[\"hadoop_cloudera_c3::conf_pseudo\"]}, {:service_name=>\"hadoop_namenode\", :conditions=>[{:to_monitor=>[{:name=>\"check_hadoop_namenode_remotely\"}], :description=>\"this service should be accessible over tcp\", :name=>\"accessible_over_tcp\"}, {:to_monitor=>[{:name=>\"check_hadoop_dfs\"}], :description=>\"a hadoop dfs report is available\"}, {:to_monitor=>[{:params=>[\"jmxremote_port\", \"jmxremote_password\"], :attributes_to_monitor=>[{\"critical\"=>\">1000000\", \"object_name\"=>\"hadoop:name=FSNamesystemState,service=NameNode\", \"warning\"=>\">750000\", \"attribute\"=>\"FilesTotal\"}, {\"critical\"=>\"<20000000\", \"object_name\"=>\"hadoop:name=FSNamesystemState,service=NameNode\", \"warning\"=>\"\", \"attribute\"=>\"CapacityTotal\"}, {\"critical\"=>\"\", \"object_name\"=>\"java.lang:type=Memory\", \"warning\"=>\"\", \"attribute\"=>\"HeapMemoryUsage.used\"}], :name=>\"check_hadoop_namenode_jmx\"}], :description=>\"jmx attributes are monitored\"}], :recipe_names=>[\"hadoop_cloudera_c3::conf_pseudo\"]}]__",
          "replacing": {
          },
          "version": "0.8.1",
          "recommendations": {
          },
          "attributes": {
            "_service/hadoop_namenode/jmxremote_password": {
              "value": "QED"
            },
            "_service/hadoop_namenode/jmxremote_port": {
              "value": 1618
            }
          },
          "providing": {
          },
          "dependencies": {
            "java": [

            ]
          },
          "recipes": {
            "hadoop::pig": "Installs hadoop's pig package",
            "hadoop::hive": "Installs hadoop's hive package",
            "hadoop::doc": "Installs hadoop documentation",
            "hadoop": "Installs hadoop from Cloudera's repo",
            "hadoop::conf_pseudo": "Installs hadoop-conf-pseudo and enables hadoop services"
          },
          "license": "Apache 2.0",
          "maintainer_email": "cookbooks@opscode.com",
          "groupings": {
          },
          "name": "hadoop_cloudera_c3",
          "maintainer": "Opscode, Inc.",
          "platforms": {
            "debian": [

            ],
            "ubuntu": [

            ]
          },
          "description": "Installs hadoop and sets up basic cluster per Cloudera's quick start docs",
          "conflicting": {
          }
        },
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "node_name": "i-b04bf4da"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-b04bf4da\", \"hadoop_cloudera_c3::conf_pseudo\"]"
    },
    "i-b04bf4da__chef_aux": {
      "external_cmp_ref": "recipe[chef_aux]",
      "display_name": "i-b04bf4da__chef_aux",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "chef_aux": [

            ]
          },
          "long_description": "",
          "replacing": {
          },
          "version": "0.0.0",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
            "chef_aux": [

            ]
          },
          "dependencies": {
          },
          "recipes": {
            "chef_aux": ""
          },
          "license": "Apache v2.0",
          "maintainer_email": "youremail@example.com",
          "groupings": {
          },
          "name": "chef_aux",
          "maintainer": "Your Name",
          "platforms": {
          },
          "description": "A fabulous new cookbook",
          "conflicting": {
          }
        },
        "recipe_name": "chef_aux",
        "node_name": "i-b04bf4da"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-b04bf4da\", \"chef_aux\"]"
    },
    "rabbitmq::edge": {
      "external_cmp_ref": "recipe[rabbitmq::edge]",
      "attribute": {
        "node[rabbitmq][branch_tag]": {
          "external_attr_ref": "node[rabbitmq][branch_tag]",
          "display_name": "node[rabbitmq][branch_tag]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "default",
          "propagation_type": "immediate"
        },
        "node[rabbitmq][_service][rabbitmq][sap]": {
          "external_attr_ref": "node[rabbitmq][_service][rabbitmq][sap]",
          "display_name": "node[rabbitmq][_service][rabbitmq][sap]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[rabbitmq][stomp][branch_tag]": {
          "external_attr_ref": "node[rabbitmq][stomp][branch_tag]",
          "display_name": "node[rabbitmq][stomp][branch_tag]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "default",
          "propagation_type": "immediate"
        }
      },
      "display_name": "rabbitmq::edge",
      "ds_attributes": {
        "name": "rabbitmq",
        "description": "Installs and configures RabbitMQ server and optionally rabbitmq-stomp from source"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"rabbitmq::edge\"]"
    },
    "rabbitmq::default": {
      "external_cmp_ref": "recipe[rabbitmq::default]",
      "attribute": {
        "node[rabbitmq][branch_tag]": {
          "external_attr_ref": "node[rabbitmq][branch_tag]",
          "display_name": "node[rabbitmq][branch_tag]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "default",
          "propagation_type": "immediate"
        },
        "node[rabbitmq][_service][rabbitmq][sap]": {
          "external_attr_ref": "node[rabbitmq][_service][rabbitmq][sap]",
          "display_name": "node[rabbitmq][_service][rabbitmq][sap]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[rabbitmq][stomp][branch_tag]": {
          "external_attr_ref": "node[rabbitmq][stomp][branch_tag]",
          "display_name": "node[rabbitmq][stomp][branch_tag]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "default",
          "propagation_type": "immediate"
        }
      },
      "display_name": "rabbitmq::default",
      "ds_attributes": {
        "name": "rabbitmq",
        "description": "Installs and configures RabbitMQ server and optionally rabbitmq-stomp from source"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"rabbitmq::default\"]"
    },
    "hadoop": {
      "external_cmp_ref": "recipe[hadoop]",
      "attribute": {
        "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]": {
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]",
          "display_name": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]": {
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]",
          "display_name": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        }
      },
      "display_name": "hadoop",
      "ds_attributes": {
        "name": "hadoop_cloudera_c3",
        "description": "Installs hadoop and sets up basic cluster per Cloudera's quick start docs"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"hadoop\"]"
    },
    "i-07af096d__nagios::server": {
      "external_cmp_ref": "recipe[nagios::server]",
      "display_name": "i-07af096d__nagios::server",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "nagios::server": [

            ],
            "nagios::client": [

            ]
          },
          "long_description": "= DESCRIPTION:\n\nInstalls and configures Nagios for a server and for clients using Chef 0.8 search capabilities.\n\n= REQUIREMENTS:\n\nRequires Chef 0.8+ for search capability of roles and data bags.\n\nA data bag named 'users' should exist, and users should have a groups value of \"sysadmins\" so the server recipe can search for who sysadmins are to notify. If this is not desired, remove the sysadmins search and other usage from the nagios::server recipe, and the contacts template.\n\nThe monitoring server that uses this recipe should have a role named 'monitoring'. The client recipe will use this to allow the monitoring server to connect via NRPE. A role named after the environment (e.g., \"production\") and a node attribute app_environment with a value of the same should be created for all nodes. The server uses this to search for only nodes that belong to its same environment.\n\nBecause of the heavy use of search, this recipe will not work with Chef Solo, as it cannot do any searches without a server.\n\n== Platform:\n\nTested on Ubuntu 9.04, Ubuntu 9.10 and Debian 5.\n\n== Cookbooks:\n\n* apache2\n\n= ATTRIBUTES:\n\nAttributes under the 'nagios' namespace.\n\n== Client:\n\nThe following attributes are used for the client NRPE checks for warning and critical levels.\n\nchecks.memory.critical\nchecks.memory.warning\nchecks.load.critical\nchecks.load.warning\nchecks.smtp_host - default relayhost to check for connectivity.\n\n== Server:\n\ndir - base server configuration directory.\nlog_dir - where the server logs.\ncache_dir\ndocroot\nconfig_subdir - for dropping in configurations as needed.\nnotifications_enabled - set to 1 to enable notification.\ncheck_external_commands\ndefault_contact_groups\nsysadmin_email - default notification email.\nsysadmin_sms_email - default notification sms.\ntemplates\ninterval_length - minimum interval.\ndefault_host.check_interval\ndefault_host.retry_interval\ndefault_host.max_check_attempts\ndefault_host.notification_interval\ndefault_service.check_interval\ndefault_service.retry_interval\ndefault_service.max_check_attempts\ndefault_service.notification_interval\n\n= USAGE:\n\nFor a Nagios server, create a role named 'monitoring', and add the following recipe to the run_list:\n\n    recipe[nagios::server]\n\nThis will allow client nodes to search for the server by this role and add its IP address to the allowed list for NRPE.\n\nTo install Nagios and NRPE on a client node:\n\n    include_recipe \"nagios::client\"\n\nThis is a fairly complicated cookbook. We'll describe the components in detail.\n\n== Definitions:\n\nnagios_conf:: This definition is used to drop in a configuration file in the base Nagios configuration directory's conf.d. This can be used for customized configurations for various services.\n\n== Libraries:\n\ndefault:: The library included with the cookbook provides some helper methods used in templates.\n\n* nagios_boolean\n* nagios_interval - calculates interval based on interval length and a given number of seconds.\n* nagios_attr - retrieves a nagios attribute from the node.\n\n== Recipes:\n\n=== Client\n\nThe client recipe searches for allowed servers via a role named 'monitoring'. The recipe will also install the required packages and start the NRPE service. A custom plugin for checking memory is also added.\n\nClient commands for NRPE can be modified by editing the nrpe.cfg.erb template.\n\n=== Server\n\nThe server recipe sets up Apache as the web front end. The nagios::client recipe is also included. This recipe also does a number of searches to dynamically build the hostgroups to monitor, hosts that belong to them and admins to notify of events/alerts.\n\nThe recipe does the following:\n\n1. Searches for members of the sysadmins group by searching through 'users' data bag and adds them to a list for notification/contacts.\n2. Search all nodes for a role matching the app_environment.\n3. Search all available roles and build a list which will be the Nagios hostgroups.\n4. Search for all nodes of each role and add the hostnames to the hostgroups.\n5. Installs various packages required for the server.\n6. Sets up some configuration directories.\n7. Moves the package-installed Nagios configuration to a 'dist' directory.\n8. Disables the 000-default site (present on Debian/Ubuntu Apache2 package installations).\n9. Enables the Nagios web front end configuration.\n10. Sets up the configuration templates for services, contacts, hostgroups and hosts.\n\n*NOTE*: You will probably need to change the services.cfg.erb template for your environment.\n\nTo add custom commands for service checks, these can be done on a per-role basis by editing the 'services.cfg.erb' template. This template has some pre-configured checks that use role names used in an example infrastructure. Here's a brief description:\n\n* monitoring - check_smtp (e.g., postfix relayhost) w/ NRPE and tcp port 514 (e.g., rsyslog)\n* load_balancer - check_nginx with NRPE.\n* appserver - check_unicorn with NRPE, e.g. a Rails application using Unicorn.\n* database_master - check_mysql_server with NRPE for a MySQL database master.\n\n= LICENSE and AUTHOR:\n\nAuthor:: Joshua Sierles <joshua@37signals.com>\nAuthor:: Nathan Haneysmith <nathan@opscode.com>\nAuthor:: Joshua Timberman <joshua@opscode.com>\n\nCopyright 2009, 37signals\nCopyright 2009-2010, Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
          "replacing": {
          },
          "version": "0.3.4",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
          },
          "dependencies": {
            "chef_aux": [

            ],
            "apache2": [

            ],
            "monitoring": [

            ]
          },
          "recipes": {
            "nagios::server": "Installs and configures a nagios server",
            "nagios": "Empty, use one of the other recipes",
            "nagios::client": "Installs and configures a nagios client with nrpe"
          },
          "license": "Apache 2.0",
          "maintainer_email": "cookbooks@opscode.com",
          "groupings": {
          },
          "name": "nagios",
          "maintainer": "Opscode, Inc.",
          "platforms": {
            "debian": [

            ],
            "ubuntu": [

            ]
          },
          "description": "Installs and configures nagios",
          "conflicting": {
          }
        },
        "recipe_name": "nagios::server",
        "node_name": "i-07af096d"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-07af096d\", \"nagios::server\"]"
    },
    "i-07af096d__ntp": {
      "external_cmp_ref": "recipe[ntp]",
      "attribute": {
        "node[ntp][service]": {
          "external_attr_ref": "node[ntp][service]",
          "display_name": "node[ntp][service]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "ntp",
          "propagation_type": "immediate"
        },
        "node[ntp][servers]": {
          "external_attr_ref": "node[ntp][servers]",
          "display_name": "node[ntp][servers]",
          "data_type": "json",
          "hidden": false,
          "is_array": false,
          "value_asserted": [
            "0.us.pool.ntp.org",
            "1.us.pool.ntp.org"
          ],
          "propagation_type": "immediate"
        },
        "service[ntp_server][ntp][sap]": {
          "external_attr_ref": "service[ntp_server][ntp][sap]",
          "display_name": "service[ntp_server][ntp][sap]",
          "hidden": false,
          "is_array": false,
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "udp",
              "port": 123
            }
          ],
          "propagation_type": "immediate"
        },
        "node[ntp][is_server]": {
          "external_attr_ref": "node[ntp][is_server]",
          "display_name": "node[ntp][is_server]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "false",
          "propagation_type": "immediate"
        }
      },
      "display_name": "i-07af096d__ntp",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "ntp": [
              {
                "params": {
                  "ntp/sap": [
                    {
                      "type": "inet",
                      "protocol": "udp",
                      "port": 123
                    }
                  ]
                },
                "canonical_service_name": "ntp_server",
                "conditions": [
                  {
                    "name": "accessible_over_udp",
                    "to_monitor": [

                    ],
                    "description": "this service should be accessible over udp"
                  }
                ]
              }
            ]
          },
          "long_description": "DESCRIPTION\n===========\n\nInstalls and configures ntp, optionally set up a local NTP server.\n\nUSAGE\n=====\n\nSet up the ntp attributes in a role. For example in a base.rb role applied to all nodes:\n\n    \"ntp\" => {\n      \"servers\" => \"time.int.example.org\"\n    }\n\nThen in an ntpserver.rb role that is applied to NTP servers:\n\n    \"ntp\" => {\n      \"is_server\" => \"true\",\n      \"servers\" => \"0.us.pool.ntp.org\"\n    }\n\nThe time.int.example.org used in the base role is a CNAME for the NTP server.\n\nLICENSE AND AUTHOR\n==================\n\nAuthor:: Joshua Timberman (<joshua@opscode.com>)\n\nCopyright 2009, Opscode, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n__[{:conditions=>[{:description=>\"this service should be accessible over udp\", :name=>\"accessible_over_udp\", :to_monitor=>[]}], :service_name=>\"ntp_server\", :recipe_names=>[\"ntp\"]}]__",
          "replacing": {
          },
          "version": "0.8.2",
          "recommendations": {
          },
          "attributes": {
            "_service/ntp_server/ntp/sap": {
              "value": [
                {
                  "type": "inet",
                  "protocol": "udp",
                  "port": 123
                }
              ]
            },
            "ntp/servers": {
              "type": "array",
              "value": [
                "0.us.pool.ntp.org",
                "1.us.pool.ntp.org"
              ],
              "required": "optional",
              "display_name": "NTP Servers",
              "recipes": [

              ],
              "default": [
                "0.us.pool.ntp.org",
                "1.us.pool.ntp.org"
              ],
              "description": "Array of servers we should talk to",
              "choice": [

              ],
              "calculated": false
            },
            "ntp/service": {
              "type": "string",
              "value": "ntp",
              "required": "optional",
              "display_name": "NTP Service",
              "recipes": [

              ],
              "default": "ntp",
              "description": "Name of the NTP service",
              "choice": [

              ],
              "calculated": false
            },
            "ntp/is_server": {
              "type": "string",
              "required": "optional",
              "display_name": "NTP Is Server?",
              "recipes": [

              ],
              "default": "false",
              "description": "Set to true if this is an NTP server",
              "choice": [

              ],
              "calculated": false
            }
          },
          "providing": {
          },
          "dependencies": {
          },
          "recipes": {
            "ntp": "Installs and configures ntp either as a server or client"
          },
          "license": "Apache 2.0",
          "maintainer_email": "cookbooks@opscode.com",
          "groupings": {
          },
          "name": "ntp",
          "maintainer": "Opscode, Inc.",
          "platforms": {
            "fedora": [

            ],
            "debian": [

            ],
            "ubuntu": [

            ],
            "centos": [

            ],
            "redhat": [

            ]
          },
          "description": "Installs and configures ntp as a client or server",
          "conflicting": {
          }
        },
        "recipe_name": "ntp",
        "node_name": "i-07af096d"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-07af096d\", \"ntp\"]"
    },
    "i-bd39e2d7__mysql::server2": {
      "external_cmp_ref": "recipe[mysql::server2]",
      "attribute": {
        "node[mysql][tunable][key_buffer]": {
          "external_attr_ref": "node[mysql][tunable][key_buffer]",
          "display_name": "node[mysql][tunable][key_buffer]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "250M",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][max_connections]": {
          "external_attr_ref": "node[mysql][tunable][max_connections]",
          "display_name": "node[mysql][tunable][max_connections]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "800",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][table_cache]": {
          "external_attr_ref": "node[mysql][tunable][table_cache]",
          "display_name": "node[mysql][tunable][table_cache]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate"
        },
        "service[mysql_server][monitor_user_id]": {
          "external_attr_ref": "service[mysql_server][monitor_user_id]",
          "display_name": "service[mysql_server][monitor_user_id]",
          "hidden": false,
          "is_array": false,
          "value_asserted": "root",
          "propagation_type": "immediate"
        },
        "node[mysql][datadir]": {
          "external_attr_ref": "node[mysql][datadir]",
          "display_name": "node[mysql][datadir]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "/var/lib/mysql",
          "propagation_type": "immediate"
        },
        "node[mysql][server_root_password]": {
          "external_attr_ref": "node[mysql][server_root_password]",
          "display_name": "node[mysql][server_root_password]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "tempt5",
          "propagation_type": "immediate"
        },
        "node[mysql][sap]": {
          "external_attr_ref": "node[mysql][sap]",
          "display_name": "node[mysql][sap]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][net_read_timeout]": {
          "external_attr_ref": "node[mysql][tunable][net_read_timeout]",
          "display_name": "node[mysql][tunable][net_read_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][max_heap_table_size]": {
          "external_attr_ref": "node[mysql][tunable][max_heap_table_size]",
          "display_name": "node[mysql][tunable][max_heap_table_size]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "32M",
          "propagation_type": "immediate"
        },
        "node[mysql][bind_address]": {
          "external_attr_ref": "node[mysql][bind_address]",
          "display_name": "node[mysql][bind_address]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "10.254.185.190",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][back_log]": {
          "external_attr_ref": "node[mysql][tunable][back_log]",
          "display_name": "node[mysql][tunable][back_log]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][net_write_timeout]": {
          "external_attr_ref": "node[mysql][tunable][net_write_timeout]",
          "display_name": "node[mysql][tunable][net_write_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate"
        },
        "service[mysql_server][db_info]": {
          "external_attr_ref": "service[mysql_server][db_info]",
          "display_name": "service[mysql_server][db_info]",
          "hidden": false,
          "is_array": false,
          "value_asserted": [
            {
              "database": "mysql",
              "password": "tempt5",
              "username": "root"
            }
          ],
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][wait_timeout]": {
          "external_attr_ref": "node[mysql][tunable][wait_timeout]",
          "display_name": "node[mysql][tunable][wait_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "180",
          "propagation_type": "immediate"
        },
        "node[mysql][ec2_path]": {
          "external_attr_ref": "node[mysql][ec2_path]",
          "display_name": "node[mysql][ec2_path]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "/mnt/mysql",
          "propagation_type": "immediate"
        }
      },
      "display_name": "i-bd39e2d7__mysql::server2",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "mysql::server2": [
              {
                "params": {
                  "db_info": [
                    {
                      "database": "mysql",
                      "password": {
                        "external_ref": {
                          "ref": "node[mysql][server_root_password]",
                          "type": "chef_attribute"
                        }
                      },
                      "username": "root"
                    }
                  ],
                  "monitor_user_id": "root"
                },
                "canonical_service_name": "mysql_server",
                "conditions": [
                  {
                    "name": "accessible_over_tcp",
                    "to_monitor": [
                      {
                        "params": [
                          "sap"
                        ],
                        "name": "inet_service_up"
                      }
                    ],
                    "description": "this service should be accessible over tcp"
                  },
                  {
                    "to_monitor": [
                      {
                        "applicability_conditions": [
                          "lambda{|p|p[:db_info] and p[:db_info].find{|x|x[:username] == p[:monitor_user_id]}}"
                        ],
                        "params": [
                          "db_info",
                          "monitor_user_id"
                        ],
                        "name": "mysql_basic_health"
                      }
                    ],
                    "description": "the user 'monitor_user_id' should be able to log into this service"
                  }
                ]
              }
            ]
          },
          "long_description": "= DESCRIPTION:\n\nInstalls and configures MySQL client or server.\n\n= REQUIREMENTS:\n\n== Platform:\n\nBest tested on Ubuntu 9.04,9.10. On EC2, requires platform that supports -o bind option for the 'mount' command.\n\n== Cookbooks:\n\nRequires Opscode's openssl cookbook for secure password generation.\n\nRequires a C compiler and Ruby development package in order to build mysql gem with native extensions. On Debian and Ubuntu systems this is satisfied by installing the \"build-essential\" and \"ruby-dev\" packages before running Chef. See USAGE below for information on how to handle this during a Chef run.\n\n= ATTRIBUTES: \n\n* mysql[:server_root_password] - Set the server's root password with this, default is a randomly generated password with OpenSSL::Random.random_bytes.\n* mysql[:server_repl_password] - Set the replication user 'repl' password with this, default is a randomly generated password with OpenSSL::Random.random_bytes.\n* mysql[:server_debian_password] - Set the debian-sys-maint user password with this, default is a randomly generated password with OpenSSL::Random.random_bytes.\n* mysql[:bind_address] - Listen address for MySQLd, default is node's ipaddress.\n* mysql[:datadir] - Location for mysql data directory, default is \"/var/lib/mysql\" \n* mysql[:ec2_path] - location of mysql datadir on EC2 nodes, default \"/mnt/mysql\" \n\nPerformance tuning attributes, each corresponds to the same-named parameter in my.cnf; default values listed\n\n* mysql[:tunable][:key_buffer]          = \"250M\"\n* mysql[:tunable][:max_connections]     = \"800\" \n* mysql[:tunable][:wait_timeout]        = \"180\" \n* mysql[:tunable][:net_write_timeout]   = \"30\" \n* mysql[:tunable][:net_write_timeout]   = \"30\" \n* mysql[:tunable][:back_log]            = \"128\" \n* mysql[:tunable][:table_cache]         = \"128\" \n* mysql[:tunable][:max_heap_table_size] = \"32M\" \n\n= USAGE:\n\nOn client nodes,\n\n  include_recipe \"mysql::client\"\n  \nAs the common use case is on systems with Ruby, we also install the MySQL RubyGem. Because we may want to be able to use the gem within another Chef recipe, we make sure the mysql development package and gem are installed first. The key is this:\n\n  r = package ... do\n    action :nothing\n  end\n  \n  r.run_action(:install)\n  \nThis creates a resource object for the package and does the installation before other recipes are parsed. You'll need to have the C compiler and such (ie, build-essential on Ubuntu) before running the recipes, but we already do that when installing Chef :-). If you want to be able to access a MySQL database via Ruby within another recipe, you could do so, like so:\n\n  Gem.clear_paths # needed for Chef to find the gem...\n  require 'mysql' # requires the mysql gem\n\n  execute \"create #{node[:railsapp][:db][:database]} database\" do\n    command \"/usr/bin/mysqladmin -u root -p#{node[:mysql][:server_root_password]} create #{node[:railsapp][:db][:database]}\"\n    not_if do\n      m = Mysql.new(\"localhost\", \"root\", @node[:mysql][:server_root_password])\n      m.list_dbs.include?(@node[:railsapp][:db][:database])\n    end\n  end\n\nOn server nodes, \n\n  include_recipe \"mysql::server\"\n  \nOn Debian/Ubuntu this will preseed the MySQL package with the randomly generated root password. You can of course change the password afterward, but this makes sure that there's a good password set. You can view it in the node data in the Chef Server webui. Sets a new password for debian-sys-maint user as well.\n\nAlso sets up 'repl' user grants for replication slaves.\n\nOn EC2 nodes,\n\n  include_recipe \"mysql::server_ec2\"\n  \nWhen the ec2_path doesn't exist we look for a mounted filesystem (eg, EBS) and move the datadir there.\n\nThe client recipe is already included by server and 'default' recipes.\n\nTo make sure that a C compiler and the Ruby development libraries are installed, use the following run list in the node or in a role:\n\n{\n  \"run_list\": [\n    \"recipe[build-essential]\",\n    \"recipe[ruby]\",\n    \"recipe[mysql::server]\"\n  ]\n}\n\nThe build-essential and ruby cookbooks install the packages in question during the \"execution\" phase of the Chef client run, rather than the compile phase when the MySQL gem is installed. To work around this for now until the build-essential and ruby packages are updated, modify your local copies of the recipes:\n\nIn the Opscode build-essential default recipe:\n\n %w{build-essential binutils-doc}.each do |pkg|\n   p = package pkg do\n     action :nothing\n   end\n   p.run_action(:install)\n end\n\nAnd the ruby recipe to have the following:\n\nextra_packages.each do |pkg|\n p = package pkg do\n   action :nothing\n end\n p.run_action(:install)\nend\n\nThese cookbooks aren't strict dependencies, and not if the installation process already included installing build-essential and ruby1.8-dev (e.g. RubyGems installation).\n\nFor more infromation on the compile vs execution phase of a Chef run:\n\nhttp://wiki.opscode.com/display/chef/Anatomy+of+a+Chef+Run\n\n= LICENSE and AUTHOR:\n      \nAuthor:: Joshua Timberman (<joshua@opscode.com>)\nAuthor:: AJ Christensen (<aj@opscode.com>)\n\nCopyright:: 2009, Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n__[{:conditions=>[{:description=>\"this service should be accessible over tcp\", :name=>\"accessible_over_tcp\", :to_monitor=>[{:params=>[\"sap\"], :name=>\"inet_service_up\"}]}, {:description=>\"the user 'monitor_user_id' should be able to log into this service\", :to_monitor=>[{:params=>[\"db_info\", \"monitor_user_id\"], :applicability_conditions=>[\"lambda{|p|p[:db_info] and p[:db_info].find{|x|x[:username] == p[:monitor_user_id]}}\"], :name=>\"mysql_basic_health\"}]}], :service_name=>\"mysql_server\", :recipe_names=>[\"mysql::server\", \"mysql::server2\"]}]__",
          "replacing": {
          },
          "version": "0.21.2",
          "recommendations": {
          },
          "attributes": {
            "mysql/tunable/net_read_timeout": {
              "type": "string",
              "value": "30",
              "required": "optional",
              "display_name": "MySQL Tunable Net Read Timeout",
              "recipes": [

              ],
              "default": "30",
              "choice": [

              ],
              "calculated": false
            },
            "_service/mysql_server/monitor_user_id": {
              "value": "root"
            },
            "mysql/bind_address": {
              "type": "string",
              "value": "10.254.185.190",
              "required": "optional",
              "display_name": "MySQL Bind Address",
              "recipes": [

              ],
              "default": "ipaddress",
              "description": "Address that mysqld should listen on",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/tunable/max_connections": {
              "type": "string",
              "value": "800",
              "required": "optional",
              "display_name": "MySQL Tunable Max Connections",
              "recipes": [

              ],
              "default": "800",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/tunable/max_heap_table_size": {
              "type": "string",
              "value": "32M",
              "required": "optional",
              "display_name": "MySQL Tunable Max Heap Table Size",
              "recipes": [

              ],
              "default": "32M",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/datadir": {
              "type": "string",
              "value": "/var/lib/mysql",
              "required": "optional",
              "display_name": "MySQL Data Directory",
              "recipes": [

              ],
              "default": "/var/lib/mysql",
              "description": "Location of mysql databases",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/tunable/table_cache": {
              "type": "string",
              "value": "128",
              "required": "optional",
              "display_name": "MySQL Tunable Table Cache",
              "recipes": [

              ],
              "default": "128",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/sap": {
              "type": "string",
              "transform": [
                {
                  "type": "inet",
                  "application": "sql::mysql",
                  "protocol": "tcp",
                  "port": 3306,
                  "binding_addr_constraints": [
                    "172.22.10.0/24"
                  ]
                },
                {
                  "type": "unix_socket",
                  "socket": "/var/run/mysqld/mysqld.sock"
                }
              ],
              "required": "optional",
              "is_canonical_attribute": true,
              "recipes": [
                "mysql::server",
                "mysql::server2"
              ],
              "choice": [

              ],
              "calculated": false
            },
            "mysql/tunable/wait_timeout": {
              "type": "string",
              "value": "180",
              "required": "optional",
              "display_name": "MySQL Tunable Wait Timeout",
              "recipes": [

              ],
              "default": "180",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/ec2_path": {
              "type": "string",
              "value": "/mnt/mysql",
              "required": "optional",
              "display_name": "MySQL EC2 Path",
              "recipes": [

              ],
              "default": "/mnt/mysql",
              "description": "Location of mysql directory on EC2 instance EBS volumes",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/tunable/back_log": {
              "type": "string",
              "value": "128",
              "required": "optional",
              "display_name": "MySQL Tunable Back Log",
              "recipes": [

              ],
              "default": "128",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/tunable/key_buffer": {
              "type": "string",
              "value": "250M",
              "required": "optional",
              "display_name": "MySQL Tuntable Key Buffer",
              "recipes": [

              ],
              "default": "250M",
              "choice": [

              ],
              "calculated": false
            },
            "_service/mysql_server/db_info": {
              "value": [
                {
                  "database": "mysql",
                  "password": "tempt5",
                  "username": "root"
                }
              ]
            },
            "mysql/server_root_password": {
              "type": "string",
              "value": "tempt5",
              "required": "optional",
              "display_name": "MySQL Server Root Password",
              "recipes": [

              ],
              "default": "randomly generated",
              "description": "Randomly generated password for the mysqld root user",
              "choice": [

              ],
              "calculated": false
            },
            "mysql/tunable/net_write_timeout": {
              "type": "string",
              "value": "30",
              "required": "optional",
              "display_name": "MySQL Tunable Net Write Timeout",
              "recipes": [

              ],
              "default": "30",
              "choice": [

              ],
              "calculated": false
            }
          },
          "providing": {
          },
          "dependencies": {
            "openssl": [

            ]
          },
          "recipes": {
            "mysql::client": "Installs packages required for mysql clients using run_action magic",
            "mysql::server_ec2": "Performs EC2-specific mountpoint manipulation",
            "mysql::server": "Installs packages required for mysql servers w/o manual intervention",
            "mysql::server2": "Installs packages required for mysql servers w/o manual intervention"
          },
          "license": "Apache v2.0",
          "maintainer_email": "youremail@example.com",
          "groupings": {
          },
          "name": "mysql",
          "maintainer": "Your Name",
          "platforms": {
            "debian": [

            ],
            "ubuntu": [

            ]
          },
          "description": "Installs and configures mysql for client or server",
          "conflicting": {
          }
        },
        "recipe_name": "mysql::server2",
        "node_name": "i-bd39e2d7"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-bd39e2d7\", \"mysql::server2\"]"
    },
    "i-374b945d__hudson": {
      "external_cmp_ref": "recipe[hudson]",
      "display_name": "i-374b945d__hudson",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "hudson": [

            ]
          },
          "long_description": "= DESCRIPTION:\n\nThe Hudson CI server: http://hudson-ci.org/\n\n= REQUIREMENTS:\n\nThis recipie currenly only works with Ubuntu.\n\n= ATTRIBUTES: \n\n= USAGE:\n\n",
          "replacing": {
          },
          "version": "0.1.0",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
          },
          "dependencies": {
            "apt": [

            ],
            "rvm": [

            ],
            "nginx": [

            ]
          },
          "recipes": {
          },
          "license": "MIT",
          "maintainer_email": "ben@benmabey.com",
          "groupings": {
          },
          "name": "hudson",
          "platforms": {
            "ubuntu": [

            ]
          },
          "maintainer": "Ben Mabey",
          "description": "Installs/Configures hudson",
          "conflicting": {
          }
        },
        "recipe_name": "hudson",
        "node_name": "i-374b945d"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-374b945d\", \"hudson\"]"
    },
    "mysql::server_ec2": {
      "external_cmp_ref": "recipe[mysql::server_ec2]",
      "attribute": {
        "node[mysql][tunable][key_buffer]": {
          "external_attr_ref": "node[mysql][tunable][key_buffer]",
          "display_name": "node[mysql][tunable][key_buffer]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "250M",
          "propagation_type": "immediate"
        },
        "node[mysql][_service][mysql_server][monitor_user_id]": {
          "external_attr_ref": "node[mysql][_service][mysql_server][monitor_user_id]",
          "display_name": "node[mysql][_service][mysql_server][monitor_user_id]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][max_connections]": {
          "external_attr_ref": "node[mysql][tunable][max_connections]",
          "display_name": "node[mysql][tunable][max_connections]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "800",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][table_cache]": {
          "external_attr_ref": "node[mysql][tunable][table_cache]",
          "display_name": "node[mysql][tunable][table_cache]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate"
        },
        "node[mysql][datadir]": {
          "external_attr_ref": "node[mysql][datadir]",
          "display_name": "node[mysql][datadir]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "/var/lib/mysql",
          "propagation_type": "immediate"
        },
        "node[mysql][server_root_password]": {
          "external_attr_ref": "node[mysql][server_root_password]",
          "display_name": "node[mysql][server_root_password]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "randomly generated",
          "propagation_type": "immediate"
        },
        "node[mysql][sap]": {
          "external_attr_ref": "node[mysql][sap]",
          "display_name": "node[mysql][sap]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][net_read_timeout]": {
          "external_attr_ref": "node[mysql][tunable][net_read_timeout]",
          "display_name": "node[mysql][tunable][net_read_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][max_heap_table_size]": {
          "external_attr_ref": "node[mysql][tunable][max_heap_table_size]",
          "display_name": "node[mysql][tunable][max_heap_table_size]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "32M",
          "propagation_type": "immediate"
        },
        "node[mysql][bind_address]": {
          "external_attr_ref": "node[mysql][bind_address]",
          "display_name": "node[mysql][bind_address]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "ipaddress",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][back_log]": {
          "external_attr_ref": "node[mysql][tunable][back_log]",
          "display_name": "node[mysql][tunable][back_log]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][net_write_timeout]": {
          "external_attr_ref": "node[mysql][tunable][net_write_timeout]",
          "display_name": "node[mysql][tunable][net_write_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate"
        },
        "node[mysql][_service][mysql_server][db_info]": {
          "external_attr_ref": "node[mysql][_service][mysql_server][db_info]",
          "display_name": "node[mysql][_service][mysql_server][db_info]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][wait_timeout]": {
          "external_attr_ref": "node[mysql][tunable][wait_timeout]",
          "display_name": "node[mysql][tunable][wait_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "180",
          "propagation_type": "immediate"
        },
        "node[mysql][ec2_path]": {
          "external_attr_ref": "node[mysql][ec2_path]",
          "display_name": "node[mysql][ec2_path]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "/mnt/mysql",
          "propagation_type": "immediate"
        }
      },
      "display_name": "mysql::server_ec2",
      "ds_attributes": {
        "name": "mysql",
        "description": "Installs and configures mysql for client or server"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"mysql::server_ec2\"]"
    },
    "nagios::client": {
      "external_cmp_ref": "recipe[nagios::client]",
      "display_name": "nagios::client",
      "ds_attributes": {
        "name": "nagios",
        "description": "Installs and configures nagios"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"nagios::client\"]"
    },
    "i-07af096d__nagios::client": {
      "external_cmp_ref": "recipe[nagios::client]",
      "display_name": "i-07af096d__nagios::client",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "nagios::client": [

            ]
          },
          "long_description": "= DESCRIPTION:\n\nInstalls and configures Nagios for a server and for clients using Chef 0.8 search capabilities.\n\n= REQUIREMENTS:\n\nRequires Chef 0.8+ for search capability of roles and data bags.\n\nA data bag named 'users' should exist, and users should have a groups value of \"sysadmins\" so the server recipe can search for who sysadmins are to notify. If this is not desired, remove the sysadmins search and other usage from the nagios::server recipe, and the contacts template.\n\nThe monitoring server that uses this recipe should have a role named 'monitoring'. The client recipe will use this to allow the monitoring server to connect via NRPE. A role named after the environment (e.g., \"production\") and a node attribute app_environment with a value of the same should be created for all nodes. The server uses this to search for only nodes that belong to its same environment.\n\nBecause of the heavy use of search, this recipe will not work with Chef Solo, as it cannot do any searches without a server.\n\n== Platform:\n\nTested on Ubuntu 9.04, Ubuntu 9.10 and Debian 5.\n\n== Cookbooks:\n\n* apache2\n\n= ATTRIBUTES:\n\nAttributes under the 'nagios' namespace.\n\n== Client:\n\nThe following attributes are used for the client NRPE checks for warning and critical levels.\n\nchecks.memory.critical\nchecks.memory.warning\nchecks.load.critical\nchecks.load.warning\nchecks.smtp_host - default relayhost to check for connectivity.\n\n== Server:\n\ndir - base server configuration directory.\nlog_dir - where the server logs.\ncache_dir\ndocroot\nconfig_subdir - for dropping in configurations as needed.\nnotifications_enabled - set to 1 to enable notification.\ncheck_external_commands\ndefault_contact_groups\nsysadmin_email - default notification email.\nsysadmin_sms_email - default notification sms.\ntemplates\ninterval_length - minimum interval.\ndefault_host.check_interval\ndefault_host.retry_interval\ndefault_host.max_check_attempts\ndefault_host.notification_interval\ndefault_service.check_interval\ndefault_service.retry_interval\ndefault_service.max_check_attempts\ndefault_service.notification_interval\n\n= USAGE:\n\nFor a Nagios server, create a role named 'monitoring', and add the following recipe to the run_list:\n\n    recipe[nagios::server]\n\nThis will allow client nodes to search for the server by this role and add its IP address to the allowed list for NRPE.\n\nTo install Nagios and NRPE on a client node:\n\n    include_recipe \"nagios::client\"\n\nThis is a fairly complicated cookbook. We'll describe the components in detail.\n\n== Definitions:\n\nnagios_conf:: This definition is used to drop in a configuration file in the base Nagios configuration directory's conf.d. This can be used for customized configurations for various services.\n\n== Libraries:\n\ndefault:: The library included with the cookbook provides some helper methods used in templates.\n\n* nagios_boolean\n* nagios_interval - calculates interval based on interval length and a given number of seconds.\n* nagios_attr - retrieves a nagios attribute from the node.\n\n== Recipes:\n\n=== Client\n\nThe client recipe searches for allowed servers via a role named 'monitoring'. The recipe will also install the required packages and start the NRPE service. A custom plugin for checking memory is also added.\n\nClient commands for NRPE can be modified by editing the nrpe.cfg.erb template.\n\n=== Server\n\nThe server recipe sets up Apache as the web front end. The nagios::client recipe is also included. This recipe also does a number of searches to dynamically build the hostgroups to monitor, hosts that belong to them and admins to notify of events/alerts.\n\nThe recipe does the following:\n\n1. Searches for members of the sysadmins group by searching through 'users' data bag and adds them to a list for notification/contacts.\n2. Search all nodes for a role matching the app_environment.\n3. Search all available roles and build a list which will be the Nagios hostgroups.\n4. Search for all nodes of each role and add the hostnames to the hostgroups.\n5. Installs various packages required for the server.\n6. Sets up some configuration directories.\n7. Moves the package-installed Nagios configuration to a 'dist' directory.\n8. Disables the 000-default site (present on Debian/Ubuntu Apache2 package installations).\n9. Enables the Nagios web front end configuration.\n10. Sets up the configuration templates for services, contacts, hostgroups and hosts.\n\n*NOTE*: You will probably need to change the services.cfg.erb template for your environment.\n\nTo add custom commands for service checks, these can be done on a per-role basis by editing the 'services.cfg.erb' template. This template has some pre-configured checks that use role names used in an example infrastructure. Here's a brief description:\n\n* monitoring - check_smtp (e.g., postfix relayhost) w/ NRPE and tcp port 514 (e.g., rsyslog)\n* load_balancer - check_nginx with NRPE.\n* appserver - check_unicorn with NRPE, e.g. a Rails application using Unicorn.\n* database_master - check_mysql_server with NRPE for a MySQL database master.\n\n= LICENSE and AUTHOR:\n\nAuthor:: Joshua Sierles <joshua@37signals.com>\nAuthor:: Nathan Haneysmith <nathan@opscode.com>\nAuthor:: Joshua Timberman <joshua@opscode.com>\n\nCopyright 2009, 37signals\nCopyright 2009-2010, Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
          "replacing": {
          },
          "version": "0.3.4",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
          },
          "dependencies": {
            "chef_aux": [

            ],
            "apache2": [

            ],
            "monitoring": [

            ]
          },
          "recipes": {
            "nagios::server": "Installs and configures a nagios server",
            "nagios": "Empty, use one of the other recipes",
            "nagios::client": "Installs and configures a nagios client with nrpe"
          },
          "license": "Apache 2.0",
          "maintainer_email": "cookbooks@opscode.com",
          "groupings": {
          },
          "name": "nagios",
          "maintainer": "Opscode, Inc.",
          "platforms": {
            "debian": [

            ],
            "ubuntu": [

            ]
          },
          "description": "Installs and configures nagios",
          "conflicting": {
          }
        },
        "recipe_name": "nagios::client",
        "node_name": "i-07af096d"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-07af096d\", \"nagios::client\"]"
    },
    "i-c1b527ab__nagios::client": {
      "external_cmp_ref": "recipe[nagios::client]",
      "display_name": "i-c1b527ab__nagios::client",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "nagios::client": [

            ]
          },
          "long_description": "= DESCRIPTION:\n\nInstalls and configures Nagios for a server and for clients using Chef 0.8 search capabilities.\n\n= REQUIREMENTS:\n\nRequires Chef 0.8+ for search capability of roles and data bags.\n\nA data bag named 'users' should exist, and users should have a groups value of \"sysadmins\" so the server recipe can search for who sysadmins are to notify. If this is not desired, remove the sysadmins search and other usage from the nagios::server recipe, and the contacts template.\n\nThe monitoring server that uses this recipe should have a role named 'monitoring'. The client recipe will use this to allow the monitoring server to connect via NRPE. A role named after the environment (e.g., \"production\") and a node attribute app_environment with a value of the same should be created for all nodes. The server uses this to search for only nodes that belong to its same environment.\n\nBecause of the heavy use of search, this recipe will not work with Chef Solo, as it cannot do any searches without a server.\n\n== Platform:\n\nTested on Ubuntu 9.04, Ubuntu 9.10 and Debian 5.\n\n== Cookbooks:\n\n* apache2\n\n= ATTRIBUTES:\n\nAttributes under the 'nagios' namespace.\n\n== Client:\n\nThe following attributes are used for the client NRPE checks for warning and critical levels.\n\nchecks.memory.critical\nchecks.memory.warning\nchecks.load.critical\nchecks.load.warning\nchecks.smtp_host - default relayhost to check for connectivity.\n\n== Server:\n\ndir - base server configuration directory.\nlog_dir - where the server logs.\ncache_dir\ndocroot\nconfig_subdir - for dropping in configurations as needed.\nnotifications_enabled - set to 1 to enable notification.\ncheck_external_commands\ndefault_contact_groups\nsysadmin_email - default notification email.\nsysadmin_sms_email - default notification sms.\ntemplates\ninterval_length - minimum interval.\ndefault_host.check_interval\ndefault_host.retry_interval\ndefault_host.max_check_attempts\ndefault_host.notification_interval\ndefault_service.check_interval\ndefault_service.retry_interval\ndefault_service.max_check_attempts\ndefault_service.notification_interval\n\n= USAGE:\n\nFor a Nagios server, create a role named 'monitoring', and add the following recipe to the run_list:\n\n    recipe[nagios::server]\n\nThis will allow client nodes to search for the server by this role and add its IP address to the allowed list for NRPE.\n\nTo install Nagios and NRPE on a client node:\n\n    include_recipe \"nagios::client\"\n\nThis is a fairly complicated cookbook. We'll describe the components in detail.\n\n== Definitions:\n\nnagios_conf:: This definition is used to drop in a configuration file in the base Nagios configuration directory's conf.d. This can be used for customized configurations for various services.\n\n== Libraries:\n\ndefault:: The library included with the cookbook provides some helper methods used in templates.\n\n* nagios_boolean\n* nagios_interval - calculates interval based on interval length and a given number of seconds.\n* nagios_attr - retrieves a nagios attribute from the node.\n\n== Recipes:\n\n=== Client\n\nThe client recipe searches for allowed servers via a role named 'monitoring'. The recipe will also install the required packages and start the NRPE service. A custom plugin for checking memory is also added.\n\nClient commands for NRPE can be modified by editing the nrpe.cfg.erb template.\n\n=== Server\n\nThe server recipe sets up Apache as the web front end. The nagios::client recipe is also included. This recipe also does a number of searches to dynamically build the hostgroups to monitor, hosts that belong to them and admins to notify of events/alerts.\n\nThe recipe does the following:\n\n1. Searches for members of the sysadmins group by searching through 'users' data bag and adds them to a list for notification/contacts.\n2. Search all nodes for a role matching the app_environment.\n3. Search all available roles and build a list which will be the Nagios hostgroups.\n4. Search for all nodes of each role and add the hostnames to the hostgroups.\n5. Installs various packages required for the server.\n6. Sets up some configuration directories.\n7. Moves the package-installed Nagios configuration to a 'dist' directory.\n8. Disables the 000-default site (present on Debian/Ubuntu Apache2 package installations).\n9. Enables the Nagios web front end configuration.\n10. Sets up the configuration templates for services, contacts, hostgroups and hosts.\n\n*NOTE*: You will probably need to change the services.cfg.erb template for your environment.\n\nTo add custom commands for service checks, these can be done on a per-role basis by editing the 'services.cfg.erb' template. This template has some pre-configured checks that use role names used in an example infrastructure. Here's a brief description:\n\n* monitoring - check_smtp (e.g., postfix relayhost) w/ NRPE and tcp port 514 (e.g., rsyslog)\n* load_balancer - check_nginx with NRPE.\n* appserver - check_unicorn with NRPE, e.g. a Rails application using Unicorn.\n* database_master - check_mysql_server with NRPE for a MySQL database master.\n\n= LICENSE and AUTHOR:\n\nAuthor:: Joshua Sierles <joshua@37signals.com>\nAuthor:: Nathan Haneysmith <nathan@opscode.com>\nAuthor:: Joshua Timberman <joshua@opscode.com>\n\nCopyright 2009, 37signals\nCopyright 2009-2010, Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
          "replacing": {
          },
          "version": "0.3.4",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
          },
          "dependencies": {
            "chef_aux": [

            ],
            "apache2": [

            ],
            "monitoring": [

            ]
          },
          "recipes": {
            "nagios::server": "Installs and configures a nagios server",
            "nagios": "Empty, use one of the other recipes",
            "nagios::client": "Installs and configures a nagios client with nrpe"
          },
          "license": "Apache 2.0",
          "maintainer_email": "cookbooks@opscode.com",
          "groupings": {
          },
          "name": "nagios",
          "maintainer": "Opscode, Inc.",
          "platforms": {
            "debian": [

            ],
            "ubuntu": [

            ]
          },
          "description": "Installs and configures nagios",
          "conflicting": {
          }
        },
        "recipe_name": "nagios::client",
        "node_name": "i-c1b527ab"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-c1b527ab\", \"nagios::client\"]"
    },
    "i-bd39e2d7__nagios::client": {
      "external_cmp_ref": "recipe[nagios::client]",
      "display_name": "i-bd39e2d7__nagios::client",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "nagios::client": [

            ]
          },
          "long_description": "= DESCRIPTION:\n\nInstalls and configures Nagios for a server and for clients using Chef 0.8 search capabilities.\n\n= REQUIREMENTS:\n\nRequires Chef 0.8+ for search capability of roles and data bags.\n\nA data bag named 'users' should exist, and users should have a groups value of \"sysadmins\" so the server recipe can search for who sysadmins are to notify. If this is not desired, remove the sysadmins search and other usage from the nagios::server recipe, and the contacts template.\n\nThe monitoring server that uses this recipe should have a role named 'monitoring'. The client recipe will use this to allow the monitoring server to connect via NRPE. A role named after the environment (e.g., \"production\") and a node attribute app_environment with a value of the same should be created for all nodes. The server uses this to search for only nodes that belong to its same environment.\n\nBecause of the heavy use of search, this recipe will not work with Chef Solo, as it cannot do any searches without a server.\n\n== Platform:\n\nTested on Ubuntu 9.04, Ubuntu 9.10 and Debian 5.\n\n== Cookbooks:\n\n* apache2\n\n= ATTRIBUTES:\n\nAttributes under the 'nagios' namespace.\n\n== Client:\n\nThe following attributes are used for the client NRPE checks for warning and critical levels.\n\nchecks.memory.critical\nchecks.memory.warning\nchecks.load.critical\nchecks.load.warning\nchecks.smtp_host - default relayhost to check for connectivity.\n\n== Server:\n\ndir - base server configuration directory.\nlog_dir - where the server logs.\ncache_dir\ndocroot\nconfig_subdir - for dropping in configurations as needed.\nnotifications_enabled - set to 1 to enable notification.\ncheck_external_commands\ndefault_contact_groups\nsysadmin_email - default notification email.\nsysadmin_sms_email - default notification sms.\ntemplates\ninterval_length - minimum interval.\ndefault_host.check_interval\ndefault_host.retry_interval\ndefault_host.max_check_attempts\ndefault_host.notification_interval\ndefault_service.check_interval\ndefault_service.retry_interval\ndefault_service.max_check_attempts\ndefault_service.notification_interval\n\n= USAGE:\n\nFor a Nagios server, create a role named 'monitoring', and add the following recipe to the run_list:\n\n    recipe[nagios::server]\n\nThis will allow client nodes to search for the server by this role and add its IP address to the allowed list for NRPE.\n\nTo install Nagios and NRPE on a client node:\n\n    include_recipe \"nagios::client\"\n\nThis is a fairly complicated cookbook. We'll describe the components in detail.\n\n== Definitions:\n\nnagios_conf:: This definition is used to drop in a configuration file in the base Nagios configuration directory's conf.d. This can be used for customized configurations for various services.\n\n== Libraries:\n\ndefault:: The library included with the cookbook provides some helper methods used in templates.\n\n* nagios_boolean\n* nagios_interval - calculates interval based on interval length and a given number of seconds.\n* nagios_attr - retrieves a nagios attribute from the node.\n\n== Recipes:\n\n=== Client\n\nThe client recipe searches for allowed servers via a role named 'monitoring'. The recipe will also install the required packages and start the NRPE service. A custom plugin for checking memory is also added.\n\nClient commands for NRPE can be modified by editing the nrpe.cfg.erb template.\n\n=== Server\n\nThe server recipe sets up Apache as the web front end. The nagios::client recipe is also included. This recipe also does a number of searches to dynamically build the hostgroups to monitor, hosts that belong to them and admins to notify of events/alerts.\n\nThe recipe does the following:\n\n1. Searches for members of the sysadmins group by searching through 'users' data bag and adds them to a list for notification/contacts.\n2. Search all nodes for a role matching the app_environment.\n3. Search all available roles and build a list which will be the Nagios hostgroups.\n4. Search for all nodes of each role and add the hostnames to the hostgroups.\n5. Installs various packages required for the server.\n6. Sets up some configuration directories.\n7. Moves the package-installed Nagios configuration to a 'dist' directory.\n8. Disables the 000-default site (present on Debian/Ubuntu Apache2 package installations).\n9. Enables the Nagios web front end configuration.\n10. Sets up the configuration templates for services, contacts, hostgroups and hosts.\n\n*NOTE*: You will probably need to change the services.cfg.erb template for your environment.\n\nTo add custom commands for service checks, these can be done on a per-role basis by editing the 'services.cfg.erb' template. This template has some pre-configured checks that use role names used in an example infrastructure. Here's a brief description:\n\n* monitoring - check_smtp (e.g., postfix relayhost) w/ NRPE and tcp port 514 (e.g., rsyslog)\n* load_balancer - check_nginx with NRPE.\n* appserver - check_unicorn with NRPE, e.g. a Rails application using Unicorn.\n* database_master - check_mysql_server with NRPE for a MySQL database master.\n\n= LICENSE and AUTHOR:\n\nAuthor:: Joshua Sierles <joshua@37signals.com>\nAuthor:: Nathan Haneysmith <nathan@opscode.com>\nAuthor:: Joshua Timberman <joshua@opscode.com>\n\nCopyright 2009, 37signals\nCopyright 2009-2010, Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
          "replacing": {
          },
          "version": "0.3.4",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
          },
          "dependencies": {
            "chef_aux": [

            ],
            "apache2": [

            ],
            "monitoring": [

            ]
          },
          "recipes": {
            "nagios::server": "Installs and configures a nagios server",
            "nagios": "Empty, use one of the other recipes",
            "nagios::client": "Installs and configures a nagios client with nrpe"
          },
          "license": "Apache 2.0",
          "maintainer_email": "cookbooks@opscode.com",
          "groupings": {
          },
          "name": "nagios",
          "maintainer": "Opscode, Inc.",
          "platforms": {
            "debian": [

            ],
            "ubuntu": [

            ]
          },
          "description": "Installs and configures nagios",
          "conflicting": {
          }
        },
        "recipe_name": "nagios::client",
        "node_name": "i-bd39e2d7"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-bd39e2d7\", \"nagios::client\"]"
    },
    "i-bd39e2d7__redis": {
      "external_cmp_ref": "recipe[redis]",
      "attribute": {
        "service[redis_service][sap]": {
          "external_attr_ref": "service[redis_service][sap]",
          "display_name": "service[redis_service][sap]",
          "hidden": false,
          "is_array": false,
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "tcp",
              "port": "6379"
            }
          ],
          "propagation_type": "immediate"
        }
      },
      "display_name": "i-bd39e2d7__redis",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "redis": [
              {
                "params": {
                  "sap": [
                    {
                      "type": "inet",
                      "protocol": "tcp",
                      "port": {
                        "external_ref": {
                          "ref": "node[redis][port]",
                          "type": "chef_attribute"
                        }
                      }
                    }
                  ]
                },
                "canonical_service_name": "redis_service",
                "conditions": [
                  {
                    "name": "accessible_over_tcp",
                    "to_monitor": [
                      {
                        "params": [
                          "sap"
                        ],
                        "name": "inet_service_up"
                      }
                    ],
                    "description": "this service should be accessible over tcp"
                  },
                  {
                    "to_monitor": [
                      {
                        "params": [
                          "sap"
                        ],
                        "name": "redis_basic_health"
                      }
                    ],
                    "description": "anonymous user should be able to log into this service"
                  }
                ]
              }
            ]
          },
          "long_description": "__[{:conditions=>[{:description=>\"this service should be accessible over tcp\", :name=>\"accessible_over_tcp\", :to_monitor=>[{:params=>[\"sap\"], :name=>\"inet_service_up\"}]}, {:description=>\"anonymous user should be able to log into this service\", :to_monitor=>[{:params=>[\"sap\"], :name=>\"redis_basic_health\"}]}], :service_name=>\"redis_service\", :recipe_names=>[\"redis\"]}]__",
          "replacing": {
          },
          "version": "0.0.0",
          "recommendations": {
          },
          "attributes": {
            "_service/redis_service/sap": {
              "value": [
                {
                  "type": "inet",
                  "protocol": "tcp",
                  "port": "6379"
                }
              ]
            }
          },
          "providing": {
          },
          "dependencies": {
          },
          "recipes": {
          },
          "license": "Apache 2.0",
          "maintainer_email": "ops@runa.com",
          "groupings": {
          },
          "name": "redis",
          "maintainer": "Rich Pelavin",
          "platforms": {
          },
          "description": "Installs/Configures redis",
          "conflicting": {
          }
        },
        "recipe_name": "redis",
        "node_name": "i-bd39e2d7"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-bd39e2d7\", \"redis\"]"
    },
    "i-dfcb12b5__hadoop": {
      "external_cmp_ref": "recipe[hadoop]",
      "display_name": "i-dfcb12b5__hadoop",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "hadoop": [

            ],
            "hadoop::conf_pseudo": [

            ]
          },
          "long_description": "= DESCRIPTION:\nAlong with the HBase Cookbook, builds a HBase / Hadoop Cluster suitable for using with Map/Reduce and HBase. \nIt is a literal translation of the ec2scripts in the HBase contrib of HBase 0.20.x.\n\nThis Hadoop Cookbook assumes its part of an HBase Cluster and has many databag or attribute elements based on HBase.\nIt assumes that the HBase Master and the Hadoop Primary, Secondary Nameservers are the same machine and that HBase Regionservers and Hadoop slaves are also together.\n(TODO: Make at least the secondary Nameserver on another machine). \nHaving multiple Zookeepers on other machines than the HBase Master has not been tested.\n\nThis should be refactored to be independent and support more flexible layouts of the cluster, but not by me for now. Or into a single HBase recipe.\n\nThis cookbook is in the style of the new Opscode Application / Database meta cookbooks. \nIt is driven by Databags more than Attributes and is designed to be tied to an Application via databag item[s] in the apps databag.\n\n\n= REQUIREMENTS:\n\n* hbase\n* java\n* ssh_known_hosts (I'm not sure if this is really needed but its included in the Recipe)\n\n= ATTRIBUTES: \n\n* none\n\n= USAGE:\n\nSee the USAGE info for the HBase Recipe. If you set things up for the HBase recipe, this Hadoop Cookbook will work.\n__[{:service_name=>\"hadoop_datanode\", :recipe_names=>[\"hadoop::slave\"], :conditions=>[{:description=>\"this service should be accessible over tcp\", :to_monitor=>[{:name=>\"check_hadoop_datanode_remotely\"}], :name=>\"accessible_over_tcp\"}]}, {:service_name=>\"hadoop_namenode\", :recipe_names=>[\"hadoop::master\"], :conditions=>[{:description=>\"this service should be accessible over tcp\", :to_monitor=>[{:name=>\"check_hadoop_namenode_remotely\"}], :name=>\"accessible_over_tcp\"}, {:description=>\"a hadoop dfs report is availble\", :to_monitor=>[{:name=>\"check_hadoop_dfs_runa\"}]}]}]__",
          "replacing": {
          },
          "version": "0.1.0",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
          },
          "dependencies": {
            "ssh_known_hosts": [

            ],
            "java_sun": [

            ]
          },
          "recipes": {
          },
          "license": "Apache 2.0",
          "maintainer_email": "ops@runa.com",
          "groupings": {
          },
          "name": "hadoop",
          "maintainer": "Runa Inc.",
          "platforms": {
          },
          "description": "Installs/Configures hadoop",
          "conflicting": {
          }
        },
        "recipe_name": "hadoop",
        "node_name": "i-dfcb12b5"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-dfcb12b5\", \"hadoop\"]"
    },
    "i-33886f59__nagios::client": {
      "external_cmp_ref": "recipe[nagios::client]",
      "display_name": "i-33886f59__nagios::client",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "nagios::client": [

            ]
          },
          "long_description": "= DESCRIPTION:\n\nInstalls and configures Nagios for a server and for clients using Chef 0.8 search capabilities.\n\n= REQUIREMENTS:\n\nRequires Chef 0.8+ for search capability of roles and data bags.\n\nA data bag named 'users' should exist, and users should have a groups value of \"sysadmins\" so the server recipe can search for who sysadmins are to notify. If this is not desired, remove the sysadmins search and other usage from the nagios::server recipe, and the contacts template.\n\nThe monitoring server that uses this recipe should have a role named 'monitoring'. The client recipe will use this to allow the monitoring server to connect via NRPE. A role named after the environment (e.g., \"production\") and a node attribute app_environment with a value of the same should be created for all nodes. The server uses this to search for only nodes that belong to its same environment.\n\nBecause of the heavy use of search, this recipe will not work with Chef Solo, as it cannot do any searches without a server.\n\n== Platform:\n\nTested on Ubuntu 9.04, Ubuntu 9.10 and Debian 5.\n\n== Cookbooks:\n\n* apache2\n\n= ATTRIBUTES:\n\nAttributes under the 'nagios' namespace.\n\n== Client:\n\nThe following attributes are used for the client NRPE checks for warning and critical levels.\n\nchecks.memory.critical\nchecks.memory.warning\nchecks.load.critical\nchecks.load.warning\nchecks.smtp_host - default relayhost to check for connectivity.\n\n== Server:\n\ndir - base server configuration directory.\nlog_dir - where the server logs.\ncache_dir\ndocroot\nconfig_subdir - for dropping in configurations as needed.\nnotifications_enabled - set to 1 to enable notification.\ncheck_external_commands\ndefault_contact_groups\nsysadmin_email - default notification email.\nsysadmin_sms_email - default notification sms.\ntemplates\ninterval_length - minimum interval.\ndefault_host.check_interval\ndefault_host.retry_interval\ndefault_host.max_check_attempts\ndefault_host.notification_interval\ndefault_service.check_interval\ndefault_service.retry_interval\ndefault_service.max_check_attempts\ndefault_service.notification_interval\n\n= USAGE:\n\nFor a Nagios server, create a role named 'monitoring', and add the following recipe to the run_list:\n\n    recipe[nagios::server]\n\nThis will allow client nodes to search for the server by this role and add its IP address to the allowed list for NRPE.\n\nTo install Nagios and NRPE on a client node:\n\n    include_recipe \"nagios::client\"\n\nThis is a fairly complicated cookbook. We'll describe the components in detail.\n\n== Definitions:\n\nnagios_conf:: This definition is used to drop in a configuration file in the base Nagios configuration directory's conf.d. This can be used for customized configurations for various services.\n\n== Libraries:\n\ndefault:: The library included with the cookbook provides some helper methods used in templates.\n\n* nagios_boolean\n* nagios_interval - calculates interval based on interval length and a given number of seconds.\n* nagios_attr - retrieves a nagios attribute from the node.\n\n== Recipes:\n\n=== Client\n\nThe client recipe searches for allowed servers via a role named 'monitoring'. The recipe will also install the required packages and start the NRPE service. A custom plugin for checking memory is also added.\n\nClient commands for NRPE can be modified by editing the nrpe.cfg.erb template.\n\n=== Server\n\nThe server recipe sets up Apache as the web front end. The nagios::client recipe is also included. This recipe also does a number of searches to dynamically build the hostgroups to monitor, hosts that belong to them and admins to notify of events/alerts.\n\nThe recipe does the following:\n\n1. Searches for members of the sysadmins group by searching through 'users' data bag and adds them to a list for notification/contacts.\n2. Search all nodes for a role matching the app_environment.\n3. Search all available roles and build a list which will be the Nagios hostgroups.\n4. Search for all nodes of each role and add the hostnames to the hostgroups.\n5. Installs various packages required for the server.\n6. Sets up some configuration directories.\n7. Moves the package-installed Nagios configuration to a 'dist' directory.\n8. Disables the 000-default site (present on Debian/Ubuntu Apache2 package installations).\n9. Enables the Nagios web front end configuration.\n10. Sets up the configuration templates for services, contacts, hostgroups and hosts.\n\n*NOTE*: You will probably need to change the services.cfg.erb template for your environment.\n\nTo add custom commands for service checks, these can be done on a per-role basis by editing the 'services.cfg.erb' template. This template has some pre-configured checks that use role names used in an example infrastructure. Here's a brief description:\n\n* monitoring - check_smtp (e.g., postfix relayhost) w/ NRPE and tcp port 514 (e.g., rsyslog)\n* load_balancer - check_nginx with NRPE.\n* appserver - check_unicorn with NRPE, e.g. a Rails application using Unicorn.\n* database_master - check_mysql_server with NRPE for a MySQL database master.\n\n= LICENSE and AUTHOR:\n\nAuthor:: Joshua Sierles <joshua@37signals.com>\nAuthor:: Nathan Haneysmith <nathan@opscode.com>\nAuthor:: Joshua Timberman <joshua@opscode.com>\n\nCopyright 2009, 37signals\nCopyright 2009-2010, Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
          "replacing": {
          },
          "version": "0.3.4",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
          },
          "dependencies": {
            "chef_aux": [

            ],
            "apache2": [

            ],
            "monitoring": [

            ]
          },
          "recipes": {
            "nagios::server": "Installs and configures a nagios server",
            "nagios": "Empty, use one of the other recipes",
            "nagios::client": "Installs and configures a nagios client with nrpe"
          },
          "license": "Apache 2.0",
          "maintainer_email": "cookbooks@opscode.com",
          "groupings": {
          },
          "name": "nagios",
          "maintainer": "Opscode, Inc.",
          "platforms": {
            "debian": [

            ],
            "ubuntu": [

            ]
          },
          "description": "Installs and configures nagios",
          "conflicting": {
          }
        },
        "recipe_name": "nagios::client",
        "node_name": "i-33886f59"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-33886f59\", \"nagios::client\"]"
    },
    "mysql::server": {
      "external_cmp_ref": "recipe[mysql::server]",
      "attribute": {
        "node[mysql][tunable][key_buffer]": {
          "external_attr_ref": "node[mysql][tunable][key_buffer]",
          "display_name": "node[mysql][tunable][key_buffer]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "250M",
          "propagation_type": "immediate"
        },
        "node[mysql][_service][mysql_server][monitor_user_id]": {
          "external_attr_ref": "node[mysql][_service][mysql_server][monitor_user_id]",
          "display_name": "node[mysql][_service][mysql_server][monitor_user_id]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][max_connections]": {
          "external_attr_ref": "node[mysql][tunable][max_connections]",
          "display_name": "node[mysql][tunable][max_connections]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "800",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][table_cache]": {
          "external_attr_ref": "node[mysql][tunable][table_cache]",
          "display_name": "node[mysql][tunable][table_cache]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate"
        },
        "node[mysql][datadir]": {
          "external_attr_ref": "node[mysql][datadir]",
          "display_name": "node[mysql][datadir]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "/var/lib/mysql",
          "propagation_type": "immediate"
        },
        "node[mysql][server_root_password]": {
          "external_attr_ref": "node[mysql][server_root_password]",
          "display_name": "node[mysql][server_root_password]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "randomly generated",
          "propagation_type": "immediate"
        },
        "node[mysql][sap]": {
          "external_attr_ref": "node[mysql][sap]",
          "display_name": "node[mysql][sap]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][net_read_timeout]": {
          "external_attr_ref": "node[mysql][tunable][net_read_timeout]",
          "display_name": "node[mysql][tunable][net_read_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][max_heap_table_size]": {
          "external_attr_ref": "node[mysql][tunable][max_heap_table_size]",
          "display_name": "node[mysql][tunable][max_heap_table_size]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "32M",
          "propagation_type": "immediate"
        },
        "node[mysql][bind_address]": {
          "external_attr_ref": "node[mysql][bind_address]",
          "display_name": "node[mysql][bind_address]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "ipaddress",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][back_log]": {
          "external_attr_ref": "node[mysql][tunable][back_log]",
          "display_name": "node[mysql][tunable][back_log]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "128",
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][net_write_timeout]": {
          "external_attr_ref": "node[mysql][tunable][net_write_timeout]",
          "display_name": "node[mysql][tunable][net_write_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "30",
          "propagation_type": "immediate"
        },
        "node[mysql][_service][mysql_server][db_info]": {
          "external_attr_ref": "node[mysql][_service][mysql_server][db_info]",
          "display_name": "node[mysql][_service][mysql_server][db_info]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[mysql][tunable][wait_timeout]": {
          "external_attr_ref": "node[mysql][tunable][wait_timeout]",
          "display_name": "node[mysql][tunable][wait_timeout]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "180",
          "propagation_type": "immediate"
        },
        "node[mysql][ec2_path]": {
          "external_attr_ref": "node[mysql][ec2_path]",
          "display_name": "node[mysql][ec2_path]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "/mnt/mysql",
          "propagation_type": "immediate"
        }
      },
      "display_name": "mysql::server",
      "ds_attributes": {
        "name": "mysql",
        "description": "Installs and configures mysql for client or server"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"mysql::server\"]"
    },
    "i-374b945d__hadoop::conf_pseudo": {
      "external_cmp_ref": "recipe[hadoop::conf_pseudo]",
      "display_name": "i-374b945d__hadoop::conf_pseudo",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "hadoop": [

            ],
            "hadoop::conf_pseudo": [

            ]
          },
          "long_description": "= DESCRIPTION:\nAlong with the HBase Cookbook, builds a HBase / Hadoop Cluster suitable for using with Map/Reduce and HBase. \nIt is a literal translation of the ec2scripts in the HBase contrib of HBase 0.20.x.\n\nThis Hadoop Cookbook assumes its part of an HBase Cluster and has many databag or attribute elements based on HBase.\nIt assumes that the HBase Master and the Hadoop Primary, Secondary Nameservers are the same machine and that HBase Regionservers and Hadoop slaves are also together.\n(TODO: Make at least the secondary Nameserver on another machine). \nHaving multiple Zookeepers on other machines than the HBase Master has not been tested.\n\nThis should be refactored to be independent and support more flexible layouts of the cluster, but not by me for now. Or into a single HBase recipe.\n\nThis cookbook is in the style of the new Opscode Application / Database meta cookbooks. \nIt is driven by Databags more than Attributes and is designed to be tied to an Application via databag item[s] in the apps databag.\n\n\n= REQUIREMENTS:\n\n* hbase\n* java\n* ssh_known_hosts (I'm not sure if this is really needed but its included in the Recipe)\n\n= ATTRIBUTES: \n\n* none\n\n= USAGE:\n\nSee the USAGE info for the HBase Recipe. If you set things up for the HBase recipe, this Hadoop Cookbook will work.\n__[{:service_name=>\"hadoop_datanode\", :recipe_names=>[\"hadoop::slave\"], :conditions=>[{:description=>\"this service should be accessible over tcp\", :to_monitor=>[{:name=>\"check_hadoop_datanode_remotely\"}], :name=>\"accessible_over_tcp\"}]}, {:service_name=>\"hadoop_namenode\", :recipe_names=>[\"hadoop::master\"], :conditions=>[{:description=>\"this service should be accessible over tcp\", :to_monitor=>[{:name=>\"check_hadoop_namenode_remotely\"}], :name=>\"accessible_over_tcp\"}, {:description=>\"a hadoop dfs report is availble\", :to_monitor=>[{:name=>\"check_hadoop_dfs_runa\"}]}]}]__",
          "replacing": {
          },
          "version": "0.1.0",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
          },
          "dependencies": {
            "ssh_known_hosts": [

            ],
            "java_sun": [

            ]
          },
          "recipes": {
          },
          "license": "Apache 2.0",
          "maintainer_email": "ops@runa.com",
          "groupings": {
          },
          "name": "hadoop",
          "maintainer": "Runa Inc.",
          "platforms": {
          },
          "description": "Installs/Configures hadoop",
          "conflicting": {
          }
        },
        "recipe_name": "hadoop::conf_pseudo",
        "node_name": "i-374b945d"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-374b945d\", \"hadoop::conf_pseudo\"]"
    },
    "i-374b945d__hadoop": {
      "external_cmp_ref": "recipe[hadoop]",
      "display_name": "i-374b945d__hadoop",
      "ds_attributes": {
        "metadata": {
          "suggestions": {
          },
          "services": {
            "hadoop": [

            ]
          },
          "long_description": "= DESCRIPTION:\nAlong with the HBase Cookbook, builds a HBase / Hadoop Cluster suitable for using with Map/Reduce and HBase. \nIt is a literal translation of the ec2scripts in the HBase contrib of HBase 0.20.x.\n\nThis Hadoop Cookbook assumes its part of an HBase Cluster and has many databag or attribute elements based on HBase.\nIt assumes that the HBase Master and the Hadoop Primary, Secondary Nameservers are the same machine and that HBase Regionservers and Hadoop slaves are also together.\n(TODO: Make at least the secondary Nameserver on another machine). \nHaving multiple Zookeepers on other machines than the HBase Master has not been tested.\n\nThis should be refactored to be independent and support more flexible layouts of the cluster, but not by me for now. Or into a single HBase recipe.\n\nThis cookbook is in the style of the new Opscode Application / Database meta cookbooks. \nIt is driven by Databags more than Attributes and is designed to be tied to an Application via databag item[s] in the apps databag.\n\n\n= REQUIREMENTS:\n\n* hbase\n* java\n* ssh_known_hosts (I'm not sure if this is really needed but its included in the Recipe)\n\n= ATTRIBUTES: \n\n* none\n\n= USAGE:\n\nSee the USAGE info for the HBase Recipe. If you set things up for the HBase recipe, this Hadoop Cookbook will work.\n__[{:service_name=>\"hadoop_datanode\", :recipe_names=>[\"hadoop::slave\"], :conditions=>[{:description=>\"this service should be accessible over tcp\", :to_monitor=>[{:name=>\"check_hadoop_datanode_remotely\"}], :name=>\"accessible_over_tcp\"}]}, {:service_name=>\"hadoop_namenode\", :recipe_names=>[\"hadoop::master\"], :conditions=>[{:description=>\"this service should be accessible over tcp\", :to_monitor=>[{:name=>\"check_hadoop_namenode_remotely\"}], :name=>\"accessible_over_tcp\"}, {:description=>\"a hadoop dfs report is availble\", :to_monitor=>[{:name=>\"check_hadoop_dfs_runa\"}]}]}]__",
          "replacing": {
          },
          "version": "0.1.0",
          "recommendations": {
          },
          "attributes": {
          },
          "providing": {
          },
          "dependencies": {
            "ssh_known_hosts": [

            ],
            "java_sun": [

            ]
          },
          "recipes": {
          },
          "license": "Apache 2.0",
          "maintainer_email": "ops@runa.com",
          "groupings": {
          },
          "name": "hadoop",
          "maintainer": "Runa Inc.",
          "platforms": {
          },
          "description": "Installs/Configures hadoop",
          "conflicting": {
          }
        },
        "recipe_name": "hadoop",
        "node_name": "i-374b945d"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :instance, \"i-374b945d\", \"hadoop\"]"
    },
    "ntp": {
      "external_cmp_ref": "recipe[ntp]",
      "attribute": {
        "node[ntp][_service][ntp_server][ntp][sap]": {
          "external_attr_ref": "node[ntp][_service][ntp_server][ntp][sap]",
          "display_name": "node[ntp][_service][ntp_server][ntp][sap]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[ntp][service]": {
          "external_attr_ref": "node[ntp][service]",
          "display_name": "node[ntp][service]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "ntp",
          "propagation_type": "immediate"
        },
        "node[ntp][servers]": {
          "external_attr_ref": "node[ntp][servers]",
          "display_name": "node[ntp][servers]",
          "data_type": "json",
          "hidden": false,
          "is_array": false,
          "value_asserted": [
            "0.us.pool.ntp.org",
            "1.us.pool.ntp.org"
          ],
          "propagation_type": "immediate"
        },
        "node[ntp][is_server]": {
          "external_attr_ref": "node[ntp][is_server]",
          "display_name": "node[ntp][is_server]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "value_asserted": "false",
          "propagation_type": "immediate"
        }
      },
      "display_name": "ntp",
      "ds_attributes": {
        "name": "ntp",
        "description": "Installs and configures ntp as a client or server"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"ntp\"]"
    },
    "nagios::server": {
      "external_cmp_ref": "recipe[nagios::server]",
      "display_name": "nagios::server",
      "ds_attributes": {
        "name": "nagios",
        "description": "Installs and configures nagios"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"nagios::server\"]"
    },
    "hadoop::doc": {
      "external_cmp_ref": "recipe[hadoop::doc]",
      "attribute": {
        "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]": {
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]",
          "display_name": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        },
        "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]": {
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]",
          "display_name": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]",
          "data_type": "string",
          "hidden": false,
          "is_array": false,
          "propagation_type": "immediate"
        }
      },
      "display_name": "hadoop::doc",
      "ds_attributes": {
        "name": "hadoop_cloudera_c3",
        "description": "Installs hadoop and sets up basic cluster per Cloudera's quick start docs"
      },
      "external_type": "chef_recipe",
      "ds_key": "[:chef, :template, \"hadoop::doc\"]"
    }
  },
  "network_partition": {
    "internet": {
      "is_deployed": false,
      "display_name": "internet",
      "is_internet": true
    }
  },
  "assoc_node_component": {
    "i-07af096d__redis": {
      "*component_id": "/component/i-07af096d__redis",
      "display_name": "i-07af096d__redis",
      "ds_attributes": {
        "recipe_name": "redis",
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, \"i-07af096d\", \"redis\"]",
      "*node_id": "/node/i-07af096d"
    },
    "i-07af096d__chef_aux": {
      "*component_id": "/component/i-07af096d__chef_aux",
      "display_name": "i-07af096d__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, \"i-07af096d\", \"chef_aux\"]",
      "*node_id": "/node/i-07af096d"
    },
    "i-11d8497b__nagios::client": {
      "*component_id": "/component/i-11d8497b__nagios::client",
      "display_name": "i-11d8497b__nagios::client",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "node_name": "i-11d8497b"
      },
      "ds_key": "[:chef, \"i-11d8497b\", \"nagios::client\"]",
      "*node_id": "/node/i-11d8497b"
    },
    "i-07af096d__mysql::server2": {
      "*component_id": "/component/i-07af096d__mysql::server2",
      "display_name": "i-07af096d__mysql::server2",
      "ds_attributes": {
        "recipe_name": "mysql::server2",
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, \"i-07af096d\", \"mysql::server2\"]",
      "*node_id": "/node/i-07af096d"
    },
    "i-c1b527ab__chef_aux": {
      "*component_id": "/component/i-c1b527ab__chef_aux",
      "display_name": "i-c1b527ab__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-c1b527ab"
      },
      "ds_key": "[:chef, \"i-c1b527ab\", \"chef_aux\"]",
      "*node_id": "/node/i-c1b527ab"
    },
    "i-11d8497b__java": {
      "*component_id": "/component/i-11d8497b__java",
      "display_name": "i-11d8497b__java",
      "ds_attributes": {
        "recipe_name": "java",
        "node_name": "i-11d8497b"
      },
      "ds_key": "[:chef, \"i-11d8497b\", \"java\"]",
      "*node_id": "/node/i-11d8497b"
    },
    "i-bd39e2d7__rabbitmq": {
      "*component_id": "/component/i-bd39e2d7__rabbitmq",
      "display_name": "i-bd39e2d7__rabbitmq",
      "ds_attributes": {
        "recipe_name": "rabbitmq",
        "node_name": "i-bd39e2d7"
      },
      "ds_key": "[:chef, \"i-bd39e2d7\", \"rabbitmq\"]",
      "*node_id": "/node/i-bd39e2d7"
    },
    "i-bd39e2d7__chef_aux": {
      "*component_id": "/component/i-bd39e2d7__chef_aux",
      "display_name": "i-bd39e2d7__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-bd39e2d7"
      },
      "ds_key": "[:chef, \"i-bd39e2d7\", \"chef_aux\"]",
      "*node_id": "/node/i-bd39e2d7"
    },
    "i-dfcb12b5__hadoop::conf_pseudo": {
      "*component_id": "/component/i-dfcb12b5__hadoop::conf_pseudo",
      "display_name": "i-dfcb12b5__hadoop::conf_pseudo",
      "ds_attributes": {
        "recipe_name": "hadoop::conf_pseudo",
        "node_name": "i-dfcb12b5"
      },
      "ds_key": "[:chef, \"i-dfcb12b5\", \"hadoop::conf_pseudo\"]",
      "*node_id": "/node/i-dfcb12b5"
    },
    "i-c1b527ab__java": {
      "*component_id": "/component/i-c1b527ab__java",
      "display_name": "i-c1b527ab__java",
      "ds_attributes": {
        "recipe_name": "java",
        "node_name": "i-c1b527ab"
      },
      "ds_key": "[:chef, \"i-c1b527ab\", \"java\"]",
      "*node_id": "/node/i-c1b527ab"
    },
    "i-b04bf4da__nagios::client": {
      "*component_id": "/component/i-b04bf4da__nagios::client",
      "display_name": "i-b04bf4da__nagios::client",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "node_name": "i-b04bf4da"
      },
      "ds_key": "[:chef, \"i-b04bf4da\", \"nagios::client\"]",
      "*node_id": "/node/i-b04bf4da"
    },
    "i-b04bf4da__hadoop_cloudera_c3::conf_pseudo": {
      "*component_id": "/component/i-b04bf4da__hadoop_cloudera_c3::conf_pseudo",
      "display_name": "i-b04bf4da__hadoop_cloudera_c3::conf_pseudo",
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "node_name": "i-b04bf4da"
      },
      "ds_key": "[:chef, \"i-b04bf4da\", \"hadoop_cloudera_c3::conf_pseudo\"]",
      "*node_id": "/node/i-b04bf4da"
    },
    "i-b04bf4da__chef_aux": {
      "*component_id": "/component/i-b04bf4da__chef_aux",
      "display_name": "i-b04bf4da__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-b04bf4da"
      },
      "ds_key": "[:chef, \"i-b04bf4da\", \"chef_aux\"]",
      "*node_id": "/node/i-b04bf4da"
    },
    "i-07af096d__nagios::server": {
      "*component_id": "/component/i-07af096d__nagios::server",
      "display_name": "i-07af096d__nagios::server",
      "ds_attributes": {
        "recipe_name": "nagios::server",
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, \"i-07af096d\", \"nagios::server\"]",
      "*node_id": "/node/i-07af096d"
    },
    "i-07af096d__ntp": {
      "*component_id": "/component/i-07af096d__ntp",
      "display_name": "i-07af096d__ntp",
      "ds_attributes": {
        "recipe_name": "ntp",
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, \"i-07af096d\", \"ntp\"]",
      "*node_id": "/node/i-07af096d"
    },
    "i-bd39e2d7__mysql::server2": {
      "*component_id": "/component/i-bd39e2d7__mysql::server2",
      "display_name": "i-bd39e2d7__mysql::server2",
      "ds_attributes": {
        "recipe_name": "mysql::server2",
        "node_name": "i-bd39e2d7"
      },
      "ds_key": "[:chef, \"i-bd39e2d7\", \"mysql::server2\"]",
      "*node_id": "/node/i-bd39e2d7"
    },
    "i-374b945d__hudson": {
      "*component_id": "/component/i-374b945d__hudson",
      "display_name": "i-374b945d__hudson",
      "ds_attributes": {
        "recipe_name": "hudson",
        "node_name": "i-374b945d"
      },
      "ds_key": "[:chef, \"i-374b945d\", \"hudson\"]",
      "*node_id": "/node/i-374b945d"
    },
    "i-07af096d__nagios::client": {
      "*component_id": "/component/i-07af096d__nagios::client",
      "display_name": "i-07af096d__nagios::client",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, \"i-07af096d\", \"nagios::client\"]",
      "*node_id": "/node/i-07af096d"
    },
    "i-c1b527ab__nagios::client": {
      "*component_id": "/component/i-c1b527ab__nagios::client",
      "display_name": "i-c1b527ab__nagios::client",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "node_name": "i-c1b527ab"
      },
      "ds_key": "[:chef, \"i-c1b527ab\", \"nagios::client\"]",
      "*node_id": "/node/i-c1b527ab"
    },
    "i-bd39e2d7__nagios::client": {
      "*component_id": "/component/i-bd39e2d7__nagios::client",
      "display_name": "i-bd39e2d7__nagios::client",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "node_name": "i-bd39e2d7"
      },
      "ds_key": "[:chef, \"i-bd39e2d7\", \"nagios::client\"]",
      "*node_id": "/node/i-bd39e2d7"
    },
    "i-bd39e2d7__redis": {
      "*component_id": "/component/i-bd39e2d7__redis",
      "display_name": "i-bd39e2d7__redis",
      "ds_attributes": {
        "recipe_name": "redis",
        "node_name": "i-bd39e2d7"
      },
      "ds_key": "[:chef, \"i-bd39e2d7\", \"redis\"]",
      "*node_id": "/node/i-bd39e2d7"
    },
    "i-dfcb12b5__hadoop": {
      "*component_id": "/component/i-dfcb12b5__hadoop",
      "display_name": "i-dfcb12b5__hadoop",
      "ds_attributes": {
        "recipe_name": "hadoop",
        "node_name": "i-dfcb12b5"
      },
      "ds_key": "[:chef, \"i-dfcb12b5\", \"hadoop\"]",
      "*node_id": "/node/i-dfcb12b5"
    },
    "i-33886f59__nagios::client": {
      "*component_id": "/component/i-33886f59__nagios::client",
      "display_name": "i-33886f59__nagios::client",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "node_name": "i-33886f59"
      },
      "ds_key": "[:chef, \"i-33886f59\", \"nagios::client\"]",
      "*node_id": "/node/i-33886f59"
    },
    "i-374b945d__hadoop::conf_pseudo": {
      "*component_id": "/component/i-374b945d__hadoop::conf_pseudo",
      "display_name": "i-374b945d__hadoop::conf_pseudo",
      "ds_attributes": {
        "recipe_name": "hadoop::conf_pseudo",
        "node_name": "i-374b945d"
      },
      "ds_key": "[:chef, \"i-374b945d\", \"hadoop::conf_pseudo\"]",
      "*node_id": "/node/i-374b945d"
    },
    "i-374b945d__hadoop": {
      "*component_id": "/component/i-374b945d__hadoop",
      "display_name": "i-374b945d__hadoop",
      "ds_attributes": {
        "recipe_name": "hadoop",
        "node_name": "i-374b945d"
      },
      "ds_key": "[:chef, \"i-374b945d\", \"hadoop\"]",
      "*node_id": "/node/i-374b945d"
    }
  }
}

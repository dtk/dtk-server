{
  "assoc_node_component": {
    "i-07af096d__redis": {
      "*component_id": "/component/i-07af096d__redis",
      "*node_id": "/node/i-07af096d-2",
      "display_name": "i-07af096d__redis",
      "ds_attributes": {
        "recipe_name": "redis",
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, \"i-07af096d\", \"redis\"]"
    },
    "i-07af096d__chef_aux": {
      "*component_id": "/component/i-07af096d__chef_aux",
      "*node_id": "/node/i-07af096d-2",
      "display_name": "i-07af096d__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, \"i-07af096d\", \"chef_aux\"]"
    },
    "i-2fb68345__collectd::server": {
      "*component_id": "/component/i-2fb68345__collectd::server",
      "*node_id": "/node/i-2fb68345",
      "display_name": "i-2fb68345__collectd::server",
      "ds_attributes": {
        "recipe_name": "collectd::server",
        "node_name": "i-2fb68345"
      },
      "ds_key": "[:chef, \"i-2fb68345\", \"collectd::server\"]"
    },
    "i-79c39f13__collectd": {
      "*component_id": "/component/i-79c39f13__collectd",
      "*node_id": "/node/i-79c39f13",
      "display_name": "i-79c39f13__collectd",
      "ds_attributes": {
        "recipe_name": "collectd",
        "node_name": "i-79c39f13"
      },
      "ds_key": "[:chef, \"i-79c39f13\", \"collectd\"]"
    },
    "i-c5f5afaf__collectd::server": {
      "*component_id": "/component/i-c5f5afaf__collectd::server",
      "*node_id": "/node/i-c5f5afaf",
      "display_name": "i-c5f5afaf__collectd::server",
      "ds_attributes": {
        "recipe_name": "collectd::server",
        "node_name": "i-c5f5afaf"
      },
      "ds_key": "[:chef, \"i-c5f5afaf\", \"collectd::server\"]"
    },
    "i-871863ed__nagios::client": {
      "*component_id": "/component/i-871863ed__nagios::client",
      "*node_id": "/node/i-871863ed",
      "display_name": "i-871863ed__nagios::client",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "node_name": "i-871863ed"
      },
      "ds_key": "[:chef, \"i-871863ed\", \"nagios::client\"]"
    },
    "i-11d8497b__nagios::client": {
      "*component_id": "/component/i-11d8497b__nagios::client",
      "*node_id": "/node/i-11d8497b",
      "display_name": "i-11d8497b__nagios::client",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "node_name": "i-11d8497b"
      },
      "ds_key": "[:chef, \"i-11d8497b\", \"nagios::client\"]"
    },
    "i-59d58d33__hadoop_cloudera_c3::conf_pseudo": {
      "*component_id": "/component/i-59d58d33__hadoop_cloudera_c3::conf_pseudo",
      "*node_id": "/node/i-59d58d33",
      "display_name": "i-59d58d33__hadoop_cloudera_c3::conf_pseudo",
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "node_name": "i-59d58d33"
      },
      "ds_key": "[:chef, \"i-59d58d33\", \"hadoop_cloudera_c3::conf_pseudo\"]"
    },
    "i-656e580f__collectd::server": {
      "*component_id": "/component/i-656e580f__collectd::server",
      "*node_id": "/node/i-656e580f",
      "display_name": "i-656e580f__collectd::server",
      "ds_attributes": {
        "recipe_name": "collectd::server",
        "node_name": "i-656e580f"
      },
      "ds_key": "[:chef, \"i-656e580f\", \"collectd::server\"]"
    },
    "i-17e9dd7d__collectd::server": {
      "*component_id": "/component/i-17e9dd7d__collectd::server",
      "*node_id": "/node/i-17e9dd7d",
      "display_name": "i-17e9dd7d__collectd::server",
      "ds_attributes": {
        "recipe_name": "collectd::server",
        "node_name": "i-17e9dd7d"
      },
      "ds_key": "[:chef, \"i-17e9dd7d\", \"collectd::server\"]"
    },
    "i-07af096d__mysql::server2": {
      "*component_id": "/component/i-07af096d__mysql::server2",
      "*node_id": "/node/i-07af096d-2",
      "display_name": "i-07af096d__mysql::server2",
      "ds_attributes": {
        "recipe_name": "mysql::server2",
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, \"i-07af096d\", \"mysql::server2\"]"
    },
    "i-c5f5afaf__hadoop_cloudera_c3::conf_pseudo": {
      "*component_id": "/component/i-c5f5afaf__hadoop_cloudera_c3::conf_pseudo",
      "*node_id": "/node/i-c5f5afaf",
      "display_name": "i-c5f5afaf__hadoop_cloudera_c3::conf_pseudo",
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "node_name": "i-c5f5afaf"
      },
      "ds_key": "[:chef, \"i-c5f5afaf\", \"hadoop_cloudera_c3::conf_pseudo\"]"
    },
    "i-335f0059__collectd::server": {
      "*component_id": "/component/i-335f0059__collectd::server",
      "*node_id": "/node/i-335f0059",
      "display_name": "i-335f0059__collectd::server",
      "ds_attributes": {
        "recipe_name": "collectd::server",
        "node_name": "i-335f0059"
      },
      "ds_key": "[:chef, \"i-335f0059\", \"collectd::server\"]"
    },
    "i-afcd95c5__hadoop_cloudera_c3::conf_pseudo": {
      "*component_id": "/component/i-afcd95c5__hadoop_cloudera_c3::conf_pseudo",
      "*node_id": "/node/i-afcd95c5",
      "display_name": "i-afcd95c5__hadoop_cloudera_c3::conf_pseudo",
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "node_name": "i-afcd95c5"
      },
      "ds_key": "[:chef, \"i-afcd95c5\", \"hadoop_cloudera_c3::conf_pseudo\"]"
    },
    "i-97bb8ffd__collectd::server": {
      "*component_id": "/component/i-97bb8ffd__collectd::server",
      "*node_id": "/node/i-97bb8ffd",
      "display_name": "i-97bb8ffd__collectd::server",
      "ds_attributes": {
        "recipe_name": "collectd::server",
        "node_name": "i-97bb8ffd"
      },
      "ds_key": "[:chef, \"i-97bb8ffd\", \"collectd::server\"]"
    },
    "i-e7b0848d__collectd::server": {
      "*component_id": "/component/i-e7b0848d__collectd::server",
      "*node_id": "/node/i-e7b0848d",
      "display_name": "i-e7b0848d__collectd::server",
      "ds_attributes": {
        "recipe_name": "collectd::server",
        "node_name": "i-e7b0848d"
      },
      "ds_key": "[:chef, \"i-e7b0848d\", \"collectd::server\"]"
    },
    "i-fb486291__hadoop_cloudera_c3::conf_pseudo": {
      "*component_id": "/component/i-fb486291__hadoop_cloudera_c3::conf_pseudo",
      "*node_id": "/node/i-fb486291",
      "display_name": "i-fb486291__hadoop_cloudera_c3::conf_pseudo",
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "node_name": "i-fb486291"
      },
      "ds_key": "[:chef, \"i-fb486291\", \"hadoop_cloudera_c3::conf_pseudo\"]"
    },
    "i-c1b527ab__chef_aux": {
      "*component_id": "/component/i-c1b527ab__chef_aux",
      "*node_id": "/node/i-c1b527ab",
      "display_name": "i-c1b527ab__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-c1b527ab"
      },
      "ds_key": "[:chef, \"i-c1b527ab\", \"chef_aux\"]"
    },
    "i-7550141f__chef_aux": {
      "*component_id": "/component/i-7550141f__chef_aux",
      "*node_id": "/node/i-7550141f",
      "display_name": "i-7550141f__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-7550141f"
      },
      "ds_key": "[:chef, \"i-7550141f\", \"chef_aux\"]"
    },
    "i-ef1b4385__collectd::client": {
      "*component_id": "/component/i-ef1b4385__collectd::client",
      "*node_id": "/node/i-ef1b4385",
      "display_name": "i-ef1b4385__collectd::client",
      "ds_attributes": {
        "recipe_name": "collectd::client",
        "node_name": "i-ef1b4385"
      },
      "ds_key": "[:chef, \"i-ef1b4385\", \"collectd::client\"]"
    },
    "i-11d8497b__java": {
      "*component_id": "/component/i-11d8497b__java",
      "*node_id": "/node/i-11d8497b",
      "display_name": "i-11d8497b__java",
      "ds_attributes": {
        "recipe_name": "java",
        "node_name": "i-11d8497b"
      },
      "ds_key": "[:chef, \"i-11d8497b\", \"java\"]"
    },
    "i-bd39e2d7__rabbitmq": {
      "*component_id": "/component/i-bd39e2d7__rabbitmq",
      "*node_id": "/node/i-bd39e2d7",
      "display_name": "i-bd39e2d7__rabbitmq",
      "ds_attributes": {
        "recipe_name": "rabbitmq",
        "node_name": "i-bd39e2d7"
      },
      "ds_key": "[:chef, \"i-bd39e2d7\", \"rabbitmq\"]"
    },
    "i-bd39e2d7__chef_aux": {
      "*component_id": "/component/i-bd39e2d7__chef_aux",
      "*node_id": "/node/i-bd39e2d7",
      "display_name": "i-bd39e2d7__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-bd39e2d7"
      },
      "ds_key": "[:chef, \"i-bd39e2d7\", \"chef_aux\"]"
    },
    "i-dfcb12b5__hadoop::conf_pseudo": {
      "*component_id": "/component/i-dfcb12b5__hadoop::conf_pseudo",
      "*node_id": "/node/i-dfcb12b5",
      "display_name": "i-dfcb12b5__hadoop::conf_pseudo",
      "ds_attributes": {
        "recipe_name": "hadoop::conf_pseudo",
        "node_name": "i-dfcb12b5"
      },
      "ds_key": "[:chef, \"i-dfcb12b5\", \"hadoop::conf_pseudo\"]"
    },
    "i-afcd95c5__chef_aux": {
      "*component_id": "/component/i-afcd95c5__chef_aux",
      "*node_id": "/node/i-afcd95c5",
      "display_name": "i-afcd95c5__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-afcd95c5"
      },
      "ds_key": "[:chef, \"i-afcd95c5\", \"chef_aux\"]"
    },
    "i-b04bf4da__nagios::client": {
      "*component_id": "/component/i-b04bf4da__nagios::client",
      "*node_id": "/node/i-b04bf4da",
      "display_name": "i-b04bf4da__nagios::client",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "node_name": "i-b04bf4da"
      },
      "ds_key": "[:chef, \"i-b04bf4da\", \"nagios::client\"]"
    },
    "i-b04bf4da__hadoop_cloudera_c3::conf_pseudo": {
      "*component_id": "/component/i-b04bf4da__hadoop_cloudera_c3::conf_pseudo",
      "*node_id": "/node/i-b04bf4da",
      "display_name": "i-b04bf4da__hadoop_cloudera_c3::conf_pseudo",
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "node_name": "i-b04bf4da"
      },
      "ds_key": "[:chef, \"i-b04bf4da\", \"hadoop_cloudera_c3::conf_pseudo\"]"
    },
    "i-b04bf4da__chef_aux": {
      "*component_id": "/component/i-b04bf4da__chef_aux",
      "*node_id": "/node/i-b04bf4da",
      "display_name": "i-b04bf4da__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-b04bf4da"
      },
      "ds_key": "[:chef, \"i-b04bf4da\", \"chef_aux\"]"
    },
    "i-07af096d__nagios::server": {
      "*component_id": "/component/i-07af096d__nagios::server",
      "*node_id": "/node/i-07af096d-2",
      "display_name": "i-07af096d__nagios::server",
      "ds_attributes": {
        "recipe_name": "nagios::server",
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, \"i-07af096d\", \"nagios::server\"]"
    },
    "i-07af096d__ntp": {
      "*component_id": "/component/i-07af096d__ntp",
      "*node_id": "/node/i-07af096d-2",
      "display_name": "i-07af096d__ntp",
      "ds_attributes": {
        "recipe_name": "ntp",
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, \"i-07af096d\", \"ntp\"]"
    },
    "i-0502796f__nagios::client": {
      "*component_id": "/component/i-0502796f__nagios::client",
      "*node_id": "/node/i-0502796f",
      "display_name": "i-0502796f__nagios::client",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "node_name": "i-0502796f"
      },
      "ds_key": "[:chef, \"i-0502796f\", \"nagios::client\"]"
    },
    "i-bd39e2d7__mysql::server2": {
      "*component_id": "/component/i-bd39e2d7__mysql::server2",
      "*node_id": "/node/i-bd39e2d7",
      "display_name": "i-bd39e2d7__mysql::server2",
      "ds_attributes": {
        "recipe_name": "mysql::server2",
        "node_name": "i-bd39e2d7"
      },
      "ds_key": "[:chef, \"i-bd39e2d7\", \"mysql::server2\"]"
    },
    "i-69381003__java_sun": {
      "*component_id": "/component/i-69381003__java_sun",
      "*node_id": "/node/i-69381003",
      "display_name": "i-69381003__java_sun",
      "ds_attributes": {
        "recipe_name": "java_sun",
        "node_name": "i-69381003"
      },
      "ds_key": "[:chef, \"i-69381003\", \"java_sun\"]"
    },
    "i-fb486291__chef_aux": {
      "*component_id": "/component/i-fb486291__chef_aux",
      "*node_id": "/node/i-fb486291",
      "display_name": "i-fb486291__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-fb486291"
      },
      "ds_key": "[:chef, \"i-fb486291\", \"chef_aux\"]"
    },
    "i-374b945d__hudson": {
      "*component_id": "/component/i-374b945d__hudson",
      "*node_id": "/node/i-374b945d",
      "display_name": "i-374b945d__hudson",
      "ds_attributes": {
        "recipe_name": "hudson",
        "node_name": "i-374b945d"
      },
      "ds_key": "[:chef, \"i-374b945d\", \"hudson\"]"
    },
    "i-07af096d__nagios::client": {
      "*component_id": "/component/i-07af096d__nagios::client",
      "*node_id": "/node/i-07af096d-2",
      "display_name": "i-07af096d__nagios::client",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, \"i-07af096d\", \"nagios::client\"]"
    },
    "i-0502796f__hadoop_cloudera_c3_228::conf_pseudo": {
      "*component_id": "/component/i-0502796f__hadoop_cloudera_c3_228::conf_pseudo",
      "*node_id": "/node/i-0502796f",
      "display_name": "i-0502796f__hadoop_cloudera_c3_228::conf_pseudo",
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3_228::conf_pseudo",
        "node_name": "i-0502796f"
      },
      "ds_key": "[:chef, \"i-0502796f\", \"hadoop_cloudera_c3_228::conf_pseudo\"]"
    },
    "i-c5f5afaf__chef_aux": {
      "*component_id": "/component/i-c5f5afaf__chef_aux",
      "*node_id": "/node/i-c5f5afaf",
      "display_name": "i-c5f5afaf__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-c5f5afaf"
      },
      "ds_key": "[:chef, \"i-c5f5afaf\", \"chef_aux\"]"
    },
    "i-afcd95c5__nagios::client": {
      "*component_id": "/component/i-afcd95c5__nagios::client",
      "*node_id": "/node/i-afcd95c5",
      "display_name": "i-afcd95c5__nagios::client",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "node_name": "i-afcd95c5"
      },
      "ds_key": "[:chef, \"i-afcd95c5\", \"nagios::client\"]"
    },
    "i-c1b527ab__nagios::client": {
      "*component_id": "/component/i-c1b527ab__nagios::client",
      "*node_id": "/node/i-c1b527ab",
      "display_name": "i-c1b527ab__nagios::client",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "node_name": "i-c1b527ab"
      },
      "ds_key": "[:chef, \"i-c1b527ab\", \"nagios::client\"]"
    },
    "i-c1b527ab__java_sun": {
      "*component_id": "/component/i-c1b527ab__java_sun",
      "*node_id": "/node/i-c1b527ab",
      "display_name": "i-c1b527ab__java_sun",
      "ds_attributes": {
        "recipe_name": "java_sun",
        "node_name": "i-c1b527ab"
      },
      "ds_key": "[:chef, \"i-c1b527ab\", \"java_sun\"]"
    },
    "i-59d58d33__chef_aux": {
      "*component_id": "/component/i-59d58d33__chef_aux",
      "*node_id": "/node/i-59d58d33",
      "display_name": "i-59d58d33__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-59d58d33"
      },
      "ds_key": "[:chef, \"i-59d58d33\", \"chef_aux\"]"
    },
    "i-bd39e2d7__nagios::client": {
      "*component_id": "/component/i-bd39e2d7__nagios::client",
      "*node_id": "/node/i-bd39e2d7",
      "display_name": "i-bd39e2d7__nagios::client",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "node_name": "i-bd39e2d7"
      },
      "ds_key": "[:chef, \"i-bd39e2d7\", \"nagios::client\"]"
    },
    "i-b04bf4da__collectd::client": {
      "*component_id": "/component/i-b04bf4da__collectd::client",
      "*node_id": "/node/i-b04bf4da",
      "display_name": "i-b04bf4da__collectd::client",
      "ds_attributes": {
        "recipe_name": "collectd::client",
        "node_name": "i-b04bf4da"
      },
      "ds_key": "[:chef, \"i-b04bf4da\", \"collectd::client\"]"
    },
    "i-ef1b4385__hadoop_cloudera_c3::conf_pseudo": {
      "*component_id": "/component/i-ef1b4385__hadoop_cloudera_c3::conf_pseudo",
      "*node_id": "/node/i-ef1b4385",
      "display_name": "i-ef1b4385__hadoop_cloudera_c3::conf_pseudo",
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "node_name": "i-ef1b4385"
      },
      "ds_key": "[:chef, \"i-ef1b4385\", \"hadoop_cloudera_c3::conf_pseudo\"]"
    },
    "i-bd39e2d7__redis": {
      "*component_id": "/component/i-bd39e2d7__redis",
      "*node_id": "/node/i-bd39e2d7",
      "display_name": "i-bd39e2d7__redis",
      "ds_attributes": {
        "recipe_name": "redis",
        "node_name": "i-bd39e2d7"
      },
      "ds_key": "[:chef, \"i-bd39e2d7\", \"redis\"]"
    },
    "i-dfcb12b5__hadoop": {
      "*component_id": "/component/i-dfcb12b5__hadoop",
      "*node_id": "/node/i-dfcb12b5",
      "display_name": "i-dfcb12b5__hadoop",
      "ds_attributes": {
        "recipe_name": "hadoop",
        "node_name": "i-dfcb12b5"
      },
      "ds_key": "[:chef, \"i-dfcb12b5\", \"hadoop\"]"
    },
    "i-33886f59__nagios::client": {
      "*component_id": "/component/i-33886f59__nagios::client",
      "*node_id": "/node/i-33886f59",
      "display_name": "i-33886f59__nagios::client",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "node_name": "i-33886f59"
      },
      "ds_key": "[:chef, \"i-33886f59\", \"nagios::client\"]"
    },
    "i-69381003__collectd::client": {
      "*component_id": "/component/i-69381003__collectd::client",
      "*node_id": "/node/i-69381003",
      "display_name": "i-69381003__collectd::client",
      "ds_attributes": {
        "recipe_name": "collectd::client",
        "node_name": "i-69381003"
      },
      "ds_key": "[:chef, \"i-69381003\", \"collectd::client\"]"
    },
    "i-ef1b4385__chef_aux": {
      "*component_id": "/component/i-ef1b4385__chef_aux",
      "*node_id": "/node/i-ef1b4385",
      "display_name": "i-ef1b4385__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-ef1b4385"
      },
      "ds_key": "[:chef, \"i-ef1b4385\", \"chef_aux\"]"
    },
    "i-9bad8cf1__postgresql::server": {
      "*component_id": "/component/i-9bad8cf1__postgresql::server",
      "*node_id": "/node/i-9bad8cf1",
      "display_name": "i-9bad8cf1__postgresql::server",
      "ds_attributes": {
        "recipe_name": "postgresql::server",
        "node_name": "i-9bad8cf1"
      },
      "ds_key": "[:chef, \"i-9bad8cf1\", \"postgresql::server\"]"
    },
    "i-33886f59__collectd::client": {
      "*component_id": "/component/i-33886f59__collectd::client",
      "*node_id": "/node/i-33886f59",
      "display_name": "i-33886f59__collectd::client",
      "ds_attributes": {
        "recipe_name": "collectd::client",
        "node_name": "i-33886f59"
      },
      "ds_key": "[:chef, \"i-33886f59\", \"collectd::client\"]"
    },
    "i-374b945d__hadoop::conf_pseudo": {
      "*component_id": "/component/i-374b945d__hadoop::conf_pseudo",
      "*node_id": "/node/i-374b945d",
      "display_name": "i-374b945d__hadoop::conf_pseudo",
      "ds_attributes": {
        "recipe_name": "hadoop::conf_pseudo",
        "node_name": "i-374b945d"
      },
      "ds_key": "[:chef, \"i-374b945d\", \"hadoop::conf_pseudo\"]"
    },
    "i-374b945d__hadoop": {
      "*component_id": "/component/i-374b945d__hadoop",
      "*node_id": "/node/i-374b945d",
      "display_name": "i-374b945d__hadoop",
      "ds_attributes": {
        "recipe_name": "hadoop",
        "node_name": "i-374b945d"
      },
      "ds_key": "[:chef, \"i-374b945d\", \"hadoop\"]"
    },
    "i-0502796f__chef_aux": {
      "*component_id": "/component/i-0502796f__chef_aux",
      "*node_id": "/node/i-0502796f",
      "display_name": "i-0502796f__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-0502796f"
      },
      "ds_key": "[:chef, \"i-0502796f\", \"chef_aux\"]"
    },
    "i-871863ed__hadoop_cloudera_c2::conf_pseudo": {
      "*component_id": "/component/i-871863ed__hadoop_cloudera_c2::conf_pseudo",
      "*node_id": "/node/i-871863ed",
      "display_name": "i-871863ed__hadoop_cloudera_c2::conf_pseudo",
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c2::conf_pseudo",
        "node_name": "i-871863ed"
      },
      "ds_key": "[:chef, \"i-871863ed\", \"hadoop_cloudera_c2::conf_pseudo\"]"
    },
    "i-871863ed__chef_aux": {
      "*component_id": "/component/i-871863ed__chef_aux",
      "*node_id": "/node/i-871863ed",
      "display_name": "i-871863ed__chef_aux",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "node_name": "i-871863ed"
      },
      "ds_key": "[:chef, \"i-871863ed\", \"chef_aux\"]"
    },
    "i-b5c5f1df__collectd::server": {
      "*component_id": "/component/i-b5c5f1df__collectd::server",
      "*node_id": "/node/i-b5c5f1df",
      "display_name": "i-b5c5f1df__collectd::server",
      "ds_attributes": {
        "recipe_name": "collectd::server",
        "node_name": "i-b5c5f1df"
      },
      "ds_key": "[:chef, \"i-b5c5f1df\", \"collectd::server\"]"
    },
    "i-b04bf4da__ganglia_data_collector": {
      "*component_id": "/component/i-b04bf4da__ganglia_data_collector",
      "*node_id": "/node/i-b04bf4da",
      "display_name": "i-b04bf4da__ganglia_data_collector",
      "ds_attributes": {
        "recipe_name": "ganglia_data_collector",
        "node_name": "i-b04bf4da"
      },
      "ds_key": "[:chef, \"i-b04bf4da\", \"ganglia_data_collector\"]"
    },
    "i-7550141f__java_sun": {
      "*component_id": "/component/i-7550141f__java_sun",
      "*node_id": "/node/i-7550141f",
      "display_name": "i-7550141f__java_sun",
      "ds_attributes": {
        "recipe_name": "java_sun",
        "node_name": "i-7550141f"
      },
      "ds_key": "[:chef, \"i-7550141f\", \"java_sun\"]"
    }
  },
  "network_partition": {
    "internet": {
      "is_deployed": false,
      "display_name": "internet",
      "is_internet": true
    }
  },
  "node": {
    "i-4fc62e25": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "i-4fc62e25",
      "ds_attributes": {
        "state": "stopped",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": null,
        "created_at": "2010-08-08T00:36:32Z",
        "user_data": null,
        "availability_zone": "us-east-1a",
        "private_dns_name": null,
        "dns_name": null,
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "ip_address": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-06-25T23:20:18Z",
            "volumeId": "vol-5e2fb637",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-6743ae0e",
        "root_device_type": "ebs",
        "reason": null,
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-4fc62e25",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-4fc62e25\"]",
      "ds_source_obj_type": "instance",
      "data_source": "ec2"
    },
    "i-7550141f": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "i-7550141f",
      "ds_attributes": {
        "state": "stopped",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": null,
        "created_at": "2010-09-15T23:28:03Z",
        "user_data": null,
        "availability_zone": "us-east-1a",
        "private_dns_name": null,
        "dns_name": null,
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "ip_address": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-08-31T02:37:22Z",
            "volumeId": "vol-6c7f2f05",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-06c72c6f",
        "root_device_type": "ebs",
        "reason": null,
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-7550141f",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-7550141f\"]",
      "ds_source_obj_type": "instance",
      "data_source": "ec2"
    },
    "ami-6743ae0e": {
      "type": "image",
      "is_deployed": true,
      "display_name": "ami-6743ae0e",
      "ds_attributes": {
        "state": "available",
        "type": "machine",
        "ramdisk_id": "ari-d5709dbc",
        "architecture": "i386",
        "owner_id": "063491364108",
        "location": "063491364108/ubuntu-9.10-karmic-server-i386-20100121",
        "block_device_mapping": [
          {
            "deleteOnTermination": "true",
            "snapshotId": "snap-5d6f2234",
            "volumeSize": "15",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "platform": null,
        "root_device_type": "ebs",
        "product_codes": [

        ],
        "is_public": true,
        "id": "ami-6743ae0e",
        "root_device_name": "/dev/sda1"
      },
      "ds_key": "[:ec2, :image, \"ami-6743ae0e\"]",
      "ds_source_obj_type": "image",
      "data_source": "ec2"
    },
    "ami-06c72c6f": {
      "type": "image",
      "is_deployed": true,
      "display_name": "ami-06c72c6f",
      "ds_attributes": {
        "state": "available",
        "type": "machine",
        "ramdisk_id": "ari-d5709dbc",
        "architecture": "i386",
        "owner_id": "411986592491",
        "location": "411986592491/rnp-chef-09-6-ubuntu-910-x86_32",
        "block_device_mapping": [
          {
            "deleteOnTermination": "true",
            "snapshotId": "snap-caa459a1",
            "volumeSize": "15",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "platform": null,
        "root_device_type": "ebs",
        "product_codes": [

        ],
        "is_public": false,
        "id": "ami-06c72c6f",
        "root_device_name": "/dev/sda1"
      },
      "ds_key": "[:ec2, :image, \"ami-06c72c6f\"]",
      "ds_source_obj_type": "image",
      "data_source": "ec2"
    },
    "i-17e9dd7d": {
      "type": "instance",
      "display_name": "i-17e9dd7d"
    },
    "i-fb486291": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "i-fb486291",
      "ds_attributes": {
        "state": "stopped",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": null,
        "created_at": "2010-09-18T16:05:30Z",
        "user_data": null,
        "availability_zone": "us-east-1a",
        "private_dns_name": null,
        "dns_name": null,
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "ip_address": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-09-17T04:17:59Z",
            "volumeId": "vol-2e230e47",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-28ee1b41",
        "root_device_type": "ebs",
        "reason": "User initiated (2010-09-18 17:43:30 GMT)",
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-fb486291",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-fb486291\"]",
      "ds_source_obj_type": "instance",
      "data_source": "ec2"
    },
    "i-b04bf4da": {
      "type": "instance",
      "display_name": "i-b04bf4da"
    },
    "i-374b945d": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "i-374b945d",
      "ds_attributes": {
        "state": "stopped",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": null,
        "created_at": "2010-09-16T00:15:42Z",
        "user_data": null,
        "availability_zone": "us-east-1a",
        "private_dns_name": null,
        "dns_name": null,
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "ip_address": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-07-19T04:41:53Z",
            "volumeId": "vol-3c3d5455",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-88f71ce1",
        "root_device_type": "ebs",
        "reason": null,
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-374b945d",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-374b945d\"]",
      "ds_source_obj_type": "instance",
      "data_source": "ec2"
    },
    "i-c1b527ab": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "i-c1b527ab",
      "ds_attributes": {
        "state": "stopped",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": null,
        "created_at": "2010-09-15T23:48:32Z",
        "user_data": null,
        "availability_zone": "us-east-1a",
        "private_dns_name": null,
        "dns_name": null,
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "ip_address": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-08-14T21:37:53Z",
            "volumeId": "vol-2087c649",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-06c72c6f",
        "root_device_type": "ebs",
        "reason": "User initiated (2010-09-16 00:08:36 GMT)",
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-c1b527ab",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-c1b527ab\"]",
      "ds_source_obj_type": "instance",
      "data_source": "ec2"
    },
    "i-07af096d-2": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "i-07af096d",
      "ds_attributes": {
        "state": "stopped",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": null,
        "created_at": "2010-09-15T23:42:55Z",
        "user_data": null,
        "availability_zone": "us-east-1a",
        "private_dns_name": null,
        "dns_name": null,
        "ip_address": null,
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-07-23T00:24:57Z",
            "volumeId": "vol-f6157f9f",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-06c72c6f",
        "root_device_type": "ebs",
        "reason": "User initiated (2010-09-16 00:24:32 GMT)",
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-07af096d",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-07af096d\"]",
      "*ancestor_id": "/node/i-07af096d",
      "ds_source_obj_type": "instance",
      "ui": {
        "top": 204,
        "left": 59
      },
      "data_source": "ec2"
    },
    "i-97bb8ffd": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "i-97bb8ffd",
      "ds_attributes": {
        "state": "stopped",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": null,
        "created_at": "2010-09-18T16:12:50Z",
        "user_data": null,
        "availability_zone": "us-east-1b",
        "private_dns_name": null,
        "dns_name": null,
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "ip_address": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-09-18T00:38:28Z",
            "volumeId": "vol-d42e02bd",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-c09065a9",
        "root_device_type": "ebs",
        "reason": null,
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-97bb8ffd",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-97bb8ffd\"]",
      "ds_source_obj_type": "instance",
      "data_source": "ec2"
    },
    "i-e7b0848d": {
      "type": "instance",
      "display_name": "i-e7b0848d"
    },
    "i-69381003": {
      "type": "instance",
      "display_name": "i-69381003"
    },
    "i-656e580f": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "i-656e580f",
      "ds_attributes": {
        "state": "stopped",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": null,
        "created_at": "2010-09-18T21:13:36Z",
        "user_data": null,
        "availability_zone": "us-east-1b",
        "private_dns_name": null,
        "dns_name": null,
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "ip_address": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-09-18T16:05:25Z",
            "volumeId": "vol-68d4f801",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-28ee1b41",
        "root_device_type": "ebs",
        "reason": "User initiated (2010-09-18 21:16:40 GMT)",
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-656e580f",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-656e580f\"]",
      "ds_source_obj_type": "instance",
      "data_source": "ec2"
    },
    "i-b5c5f1df": {
      "type": "instance",
      "display_name": "i-b5c5f1df"
    },
    "i-33886f59": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "address": "10.208.199.162",
          "display_name": "eth0"
        }
      },
      "display_name": "i-33886f59",
      "address_access_point": {
        "internet_ipv4": {
          "type": "internet",
          "display_name": "internet_ipv4",
          "network_address": {
            "address": "184.73.175.145",
            "family": "ipv4"
          },
          "*network_partition_id": "/network_partition/internet"
        }
      },
      "ds_attributes": {
        "state": "running",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": "10.208.199.162",
        "created_at": "2010-09-21T14:05:51Z",
        "user_data": null,
        "availability_zone": "us-east-1a",
        "private_dns_name": "domU-12-31-39-06-C0-54.compute-1.internal",
        "dns_name": "ec2-184-73-175-145.compute-1.amazonaws.com",
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "ip_address": "184.73.175.145",
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-06-20T19:07:02Z",
            "volumeId": "vol-d265f8bb",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-693ad300",
        "root_device_type": "ebs",
        "reason": null,
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-33886f59",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-33886f59\"]",
      "ds_source_obj_type": "instance",
      "data_source": "ec2"
    },
    "i-afcd95c5": {
      "type": "instance",
      "display_name": "i-afcd95c5"
    },
    "ami-bf3ad3d6": {
      "type": "image",
      "is_deployed": true,
      "display_name": "ami-bf3ad3d6",
      "ds_attributes": {
        "state": "available",
        "type": "machine",
        "ramdisk_id": "ari-d5709dbc",
        "architecture": "i386",
        "owner_id": "411986592491",
        "location": "411986592491/rnp-chef-server-0816-ubuntu-910-x86_32",
        "block_device_mapping": [
          {
            "deleteOnTermination": "true",
            "snapshotId": "snap-324cdb5a",
            "volumeSize": "15",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "platform": null,
        "root_device_type": "ebs",
        "product_codes": [

        ],
        "is_public": false,
        "id": "ami-bf3ad3d6",
        "root_device_name": "/dev/sda1"
      },
      "ds_key": "[:ec2, :image, \"ami-bf3ad3d6\"]",
      "ds_source_obj_type": "image",
      "data_source": "ec2"
    },
    "ami-693ad300": {
      "type": "image",
      "is_deployed": true,
      "display_name": "ami-693ad300",
      "ds_attributes": {
        "state": "available",
        "type": "machine",
        "ramdisk_id": "ari-d5709dbc",
        "architecture": "i386",
        "owner_id": "411986592491",
        "location": "411986592491/rnp-chef-0816-ubuntu-910-x86_32",
        "block_device_mapping": [
          {
            "deleteOnTermination": "true",
            "snapshotId": "snap-3c57c054",
            "volumeSize": "15",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "platform": null,
        "root_device_type": "ebs",
        "product_codes": [

        ],
        "is_public": false,
        "id": "ami-693ad300",
        "root_device_name": "/dev/sda1"
      },
      "ds_key": "[:ec2, :image, \"ami-693ad300\"]",
      "ds_source_obj_type": "image",
      "data_source": "ec2"
    },
    "i-bd39e2d7": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "i-bd39e2d7",
      "ds_attributes": {
        "state": "stopped",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": null,
        "created_at": "2010-09-16T00:08:42Z",
        "user_data": null,
        "availability_zone": "us-east-1a",
        "private_dns_name": null,
        "dns_name": null,
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "ip_address": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-07-20T22:15:22Z",
            "volumeId": "vol-74452d1d",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-34f61d5d",
        "root_device_type": "ebs",
        "reason": null,
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-bd39e2d7",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-bd39e2d7\"]",
      "ds_source_obj_type": "instance",
      "data_source": "ec2"
    },
    "i-335f0059": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "i-335f0059",
      "ds_attributes": {
        "state": "stopped",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": null,
        "created_at": "2010-09-15T15:48:36Z",
        "user_data": null,
        "availability_zone": "us-east-1a",
        "private_dns_name": null,
        "dns_name": null,
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "ip_address": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-09-09T20:55:56Z",
            "volumeId": "vol-5ef6ac37",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-06c72c6f",
        "root_device_type": "ebs",
        "reason": "User initiated (2010-09-15 23:07:50 GMT)",
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-335f0059",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-335f0059\"]",
      "ds_source_obj_type": "instance",
      "data_source": "ec2"
    },
    "i-79c39f13": {
      "type": "instance",
      "display_name": "i-79c39f13"
    },
    "i-dfcb12b5": {
      "type": "instance",
      "display_name": "i-dfcb12b5"
    },
    "i-59d58d33": {
      "type": "instance",
      "display_name": "i-59d58d33"
    },
    "i-2f5b7a44": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "i-2f5b7a44",
      "ds_attributes": {
        "state": "stopped",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": null,
        "created_at": "2010-07-25T22:49:42Z",
        "user_data": null,
        "availability_zone": "us-east-1a",
        "private_dns_name": null,
        "dns_name": null,
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "ip_address": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-05-19T20:33:31Z",
            "volumeId": "vol-f1be3f98",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-693ad300",
        "root_device_type": "ebs",
        "reason": "User initiated (2010-07-25 22:50:32 GMT)",
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-2f5b7a44",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-2f5b7a44\"]",
      "ds_source_obj_type": "instance",
      "data_source": "ec2"
    },
    "ami-28ee1b41": {
      "type": "image",
      "is_deployed": true,
      "display_name": "ami-28ee1b41",
      "ds_attributes": {
        "state": "available",
        "type": "machine",
        "ramdisk_id": "ari-d5709dbc",
        "architecture": "i386",
        "owner_id": "411986592491",
        "location": "411986592491//rnp-chef-09-8-ubuntu-910-x86_32",
        "block_device_mapping": [
          {
            "deleteOnTermination": "true",
            "snapshotId": "snap-1cfdda77",
            "volumeSize": "15",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "platform": null,
        "root_device_type": "ebs",
        "product_codes": [

        ],
        "is_public": false,
        "id": "ami-28ee1b41",
        "root_device_name": "/dev/sda1"
      },
      "ds_key": "[:ec2, :image, \"ami-28ee1b41\"]",
      "ds_source_obj_type": "image",
      "data_source": "ec2"
    },
    "i-2fb68345": {
      "type": "instance",
      "display_name": "i-2fb68345"
    },
    "i-c5f5afaf": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "i-c5f5afaf",
      "ds_attributes": {
        "state": "stopped",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": null,
        "created_at": "2010-09-17T01:38:37Z",
        "user_data": null,
        "availability_zone": "us-east-1a",
        "private_dns_name": null,
        "dns_name": null,
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "ip_address": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-09-11T23:12:39Z",
            "volumeId": "vol-2c597e45",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-c09065a9",
        "root_device_type": "ebs",
        "reason": "User initiated (2010-09-17 05:02:31 GMT)",
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-c5f5afaf",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-c5f5afaf\"]",
      "ds_source_obj_type": "instance",
      "data_source": "ec2"
    },
    "i-9bad8cf1": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "i-9bad8cf1",
      "ds_attributes": {
        "state": "stopped",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": null,
        "created_at": "2010-09-15T15:59:31Z",
        "user_data": null,
        "availability_zone": "us-east-1b",
        "private_dns_name": null,
        "dns_name": null,
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "ip_address": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-09-13T21:27:17Z",
            "volumeId": "vol-6e371607",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-06c72c6f",
        "root_device_type": "ebs",
        "reason": "User initiated (2010-09-16 00:15:50 GMT)",
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-9bad8cf1",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-9bad8cf1\"]",
      "ds_source_obj_type": "instance",
      "data_source": "ec2"
    },
    "i-871863ed": {
      "type": "instance",
      "display_name": "i-871863ed"
    },
    "i-11d8497b": {
      "type": "instance",
      "display_name": "i-11d8497b"
    },
    "i-07af096d": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "i-07af096d",
      "ds_attributes": {
        "state": "stopped",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": null,
        "created_at": "2010-09-15T23:42:55Z",
        "user_data": null,
        "availability_zone": "us-east-1a",
        "private_dns_name": null,
        "dns_name": null,
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "ip_address": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-07-23T00:24:57Z",
            "volumeId": "vol-f6157f9f",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-06c72c6f",
        "root_device_type": "ebs",
        "reason": "User initiated (2010-09-16 00:24:32 GMT)",
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-07af096d",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-07af096d\"]",
      "ds_source_obj_type": "instance",
      "data_source": "ec2"
    },
    "i-0502796f": {
      "type": "instance",
      "display_name": "i-0502796f"
    },
    "i-ef1b4385": {
      "type": "instance",
      "display_name": "i-ef1b4385"
    },
    "i-63775608": {
      "type": "instance",
      "is_deployed": true,
      "node_interface": {
        "eth0": {
          "type": "ethernet",
          "display_name": "eth0"
        }
      },
      "display_name": "i-63775608",
      "ds_attributes": {
        "state": "stopped",
        "ramdisk_id": "ari-d5709dbc",
        "ami_launch_index": 0,
        "private_ip_address": null,
        "created_at": "2010-07-26T19:00:08Z",
        "user_data": null,
        "availability_zone": "us-east-1a",
        "private_dns_name": null,
        "dns_name": null,
        "flavor": {
          "ram": 1740.8,
          "disk": 160,
          "cores": 1,
          "name": "Small Instance",
          "bits": 32,
          "id": "m1.small"
        },
        "ip_address": null,
        "block_device_mapping": [
          {
            "status": "attached",
            "deleteOnTermination": true,
            "attachTime": "2010-05-19T19:10:59Z",
            "volumeId": "vol-75b6371c",
            "deviceName": "/dev/sda1"
          }
        ],
        "kernel_id": "aki-5f15f636",
        "key_name": "rich-east",
        "groups": [
          "basic",
          "default"
        ],
        "image_id": "ami-bf3ad3d6",
        "root_device_type": "ebs",
        "reason": "User initiated (2010-07-26 22:55:26 GMT)",
        "product_codes": [

        ],
        "monitoring": false,
        "id": "i-63775608",
        "subnet_id": null,
        "flavor_id": "m1.small",
        "root_device_name": null
      },
      "image_size": "0.17408E4",
      "ds_key": "[:ec2, :instance, \"i-63775608\"]",
      "ds_source_obj_type": "instance",
      "data_source": "ec2"
    }
  },
  "component": {
    "i-07af096d__nagios::server": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-07af096d__nagios::server",
      "external_cmp_ref": "recipe[nagios::server]",
      "ds_attributes": {
        "recipe_name": "nagios::server",
        "attributes": {
        },
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, :instance, \"i-07af096d\", \"nagios::server\"]"
    },
    "hadoop_cloudera_c3": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "hadoop_cloudera_c3",
      "external_cmp_ref": "recipe[hadoop_cloudera_c3]",
	  "ui": "{\"images\": {\"tnail\":\"cloudera.png\",\"display\":\"cloudera.png\",\"tiny\":\"\"}}",
      "attribute": {
        "var[_service][hadoop_namenode][jmxremote_password]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_password]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]"
        },
        "var[_service][hadoop_namenode][jmxremote_port]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_port]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]"
        }
      },
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3",
        "attributes": {
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_password": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][password]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_port": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][namenode][port]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          }
        },
        "monitoring_items": {
        },
        "description": "Installs hadoop from Cloudera's repo"
      },
      "ds_key": "[:chef, :template, \"hadoop_cloudera_c3\"]",
      "description": "Installs hadoop from Cloudera's repo"
    },
    "postgresql::client": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "postgresql::client",
      "external_cmp_ref": "recipe[postgresql::client]",
	  "ui": "{\"images\": {\"tnail\":\"postgres.png\",\"display\":\"postgres.png\",\"tiny\":\"\"}}",
      "attribute": {
        "var[dir]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[dir]",
          "data_type": "string",
          "value_asserted": "/etc/postgresql/8.3/main",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Location of the PostgreSQL databases",
          "external_attr_ref": "node[postgresql][dir]"
        }
      },
      "ds_attributes": {
        "recipe_name": "postgresql::client",
        "attributes": {
          "postgresql/dir": {
            "type": "string",
            "required": "optional",
            "display_name": "PostgreSQL Directory",
            "value": "/etc/postgresql/8.3/main",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "/etc/postgresql/8.3/main",
            "description": "Location of the PostgreSQL databases",
            "choice": [

            ]
          }
        },
        "monitoring_items": {
        },
        "description": "Installs postgresql client package(s)"
      },
      "ds_key": "[:chef, :template, \"postgresql::client\"]",
      "description": "Installs postgresql client package(s)"
    },
    "i-c1b527ab__java_sun": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-c1b527ab__java_sun",
      "external_cmp_ref": "recipe[java_sun]",
      "ds_attributes": {
        "recipe_name": "java_sun",
        "attributes": {
        },
        "node_name": "i-c1b527ab"
      },
      "ds_key": "[:chef, :instance, \"i-c1b527ab\", \"java_sun\"]"
    },
    "i-07af096d__ntp": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-07af096d__ntp",
      "external_cmp_ref": "recipe[ntp]",
      "attribute": {
        "port[ntp][sap]": {
          "display_name": "port[ntp][sap]",
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "udp",
              "port": 123
            }
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[ntp_server][ntp][sap]"
        },
        "var[servers]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[servers]",
          "data_type": "json",
          "value_asserted": [
            "0.us.pool.ntp.org",
            "1.us.pool.ntp.org"
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "description": "Array of servers we should talk to",
          "external_attr_ref": "node[ntp][servers]"
        },
        "var[service]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[service]",
          "data_type": "string",
          "value_asserted": "ntp",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "description": "Name of the NTP service",
          "external_attr_ref": "node[ntp][service]"
        },
        "var[_service][ntp_server][ntp][sap]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][ntp_server][ntp][sap]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[ntp][_service][ntp_server][ntp][sap]"
        },
        "var[is_server]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[is_server]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "description": "Set to true if this is an NTP server",
          "external_attr_ref": "node[ntp][is_server]"
        }
      },
      "ds_attributes": {
        "recipe_name": "ntp",
        "attributes": {
          "ntp/service": {
            "type": "string",
            "required": "optional",
            "display_name": "NTP Service",
            "value": "ntp",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "default": "ntp",
            "description": "Name of the NTP service",
            "choice": [

            ]
          },
          "ntp/is_server": {
            "type": "string",
            "required": "optional",
            "display_name": "NTP Is Server?",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "default": "false",
            "description": "Set to true if this is an NTP server",
            "choice": [

            ]
          },
          "ntp/servers": {
            "type": "array",
            "required": "optional",
            "display_name": "NTP Servers",
            "value": [
              "0.us.pool.ntp.org",
              "1.us.pool.ntp.org"
            ],
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "default": [
              "0.us.pool.ntp.org",
              "1.us.pool.ntp.org"
            ],
            "description": "Array of servers we should talk to",
            "choice": [

            ]
          },
          "ntp/_service/ntp_server/ntp/sap": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "type": "inet",
                "protocol": "udp",
                "port": 123
              }
            ],
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "ntp/ntp/sap": {
            "service_name": "ntp_server",
            "value": [
              {
                "type": "inet",
                "protocol": "udp",
                "port": 123
              }
            ]
          }
        },
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, :instance, \"i-07af096d\", \"ntp\"]"
    },
    "nagios": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "nagios",
      "external_cmp_ref": "recipe[nagios]",
	  "ui": "{\"images\": {\"tnail\":\"nagios.png\",\"display\":\"nagios.png\",\"tiny\":\"\"}}",
      "ds_attributes": {
        "recipe_name": "nagios",
        "attributes": {
        },
        "monitoring_items": {
        },
        "description": "Empty, use one of the other recipes"
      },
      "ds_key": "[:chef, :template, \"nagios\"]",
      "description": "Empty, use one of the other recipes"
    },
    "i-07af096d__redis": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-07af096d__redis",
      "external_cmp_ref": "recipe[redis]",
	  "ui": "{\"images\": {\"tnail\":\"redis.png\",\"display\":\"redis.png\",\"tiny\":\"\"}}",
      "attribute": {
        "port[sap]": {
          "display_name": "port[sap]",
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "tcp",
              "port": "6379"
            }
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[redis_service][sap]"
        },
        "var[_service][redis_service][sap]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][redis_service][sap]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "node[redis][_service][redis_service][sap]"
        }
      },
      "ds_attributes": {
        "recipe_name": "redis",
        "attributes": {
          "redis/_service/redis_service/sap": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": {
                  "__ref": "node[redis][port]"
                }
              }
            ],
            "calculated": false,
            "recipes": [

            ],
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "redis/sap": {
            "service_name": "redis_service",
            "value": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": "6379"
              }
            ]
          }
        },
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, :instance, \"i-07af096d\", \"redis\"]"
    },
    "i-e7b0848d__collectd::server": {
      "display_name": "i-e7b0848d__collectd::server"
    },
    "nagios::server": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "nagios::server",
      "external_cmp_ref": "recipe[nagios::server]",
	  "ui": "{\"images\": {\"tnail\":\"nagios.png\",\"display\":\"nagios.png\",\"tiny\":\"\"}}",
      "ds_attributes": {
        "recipe_name": "nagios::server",
        "attributes": {
        },
        "monitoring_items": {
        },
        "description": "Installs and configures a nagios server"
      },
      "ds_key": "[:chef, :template, \"nagios::server\"]",
      "description": "Installs and configures a nagios server"
    },
    "i-bd39e2d7__mysql::server2": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-bd39e2d7__mysql::server2",
      "external_cmp_ref": "recipe[mysql::server2]",
      "attribute": {
        "var[_service][mysql_server][db_info]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][db_info]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][db_info]"
        },
        "port[sap]": {
          "display_name": "port[sap]",
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "tcp",
              "binding_addr_constraints": [

              ],
              "application": "sql::mysql",
              "port": 3306
            },
            {
              "type": "unix_socket",
              "socket": "/var/run/mysqld/mysqld.sock"
            }
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[mysql_server][sap]"
        },
        "var[_service][mysql_server][sap]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][sap]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][sap]"
        },
        "var[bind_address]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[bind_address]",
          "data_type": "string",
          "value_asserted": "10.254.185.190",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Address that mysqld should listen on",
          "external_attr_ref": "node[mysql][bind_address]"
        },
        "var[tunable][key_buffer]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][key_buffer]",
          "data_type": "string",
          "value_asserted": "250M",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][key_buffer]"
        },
        "var[tunable][back_log]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][back_log]",
          "data_type": "string",
          "value_asserted": "128",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][back_log]"
        },
        "var[tunable][max_connections]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][max_connections]",
          "data_type": "string",
          "value_asserted": "800",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][max_connections]"
        },
        "var[tunable][wait_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][wait_timeout]",
          "data_type": "string",
          "value_asserted": "180",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][wait_timeout]"
        },
        "var[_service][mysql_server][monitor_user_id]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][monitor_user_id]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][monitor_user_id]"
        },
        "port[monitor_user_id]": {
          "display_name": "port[monitor_user_id]",
          "value_asserted": "root",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[mysql_server][monitor_user_id]"
        },
        "var[server_root_password]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[server_root_password]",
          "data_type": "string",
          "value_asserted": "tempt5",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Randomly generated password for the mysqld root user",
          "external_attr_ref": "node[mysql][server_root_password]"
        },
        "var[tunable][max_heap_table_size]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][max_heap_table_size]",
          "data_type": "string",
          "value_asserted": "32M",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][max_heap_table_size]"
        },
        "var[tunable][net_write_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][net_write_timeout]",
          "data_type": "string",
          "value_asserted": "30",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][net_write_timeout]"
        },
        "var[datadir]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[datadir]",
          "data_type": "string",
          "value_asserted": "/var/lib/mysql",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Location of mysql databases",
          "external_attr_ref": "node[mysql][datadir]"
        },
        "var[tunable][net_read_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][net_read_timeout]",
          "data_type": "string",
          "value_asserted": "30",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][net_read_timeout]"
        },
        "var[ec2_path]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[ec2_path]",
          "data_type": "string",
          "value_asserted": "/mnt/mysql",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Location of mysql directory on EC2 instance EBS volumes",
          "external_attr_ref": "node[mysql][ec2_path]"
        },
        "port[db_info]": {
          "display_name": "port[db_info]",
          "value_asserted": [
            {
              "database": "mysql",
              "password": "tempt5",
              "username": "root"
            }
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[mysql_server][db_info]"
        },
        "var[tunable][table_cache]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][table_cache]",
          "data_type": "string",
          "value_asserted": "128",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][table_cache]"
        }
      },
      "ds_attributes": {
        "recipe_name": "mysql::server2",
        "attributes": {
          "mysql/tunable/wait_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Wait Timeout",
            "value": "180",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "180",
            "choice": [

            ]
          },
          "mysql/tunable/key_buffer": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tuntable Key Buffer",
            "value": "250M",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "250M",
            "choice": [

            ]
          },
          "mysql/bind_address": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Bind Address",
            "value": "10.254.185.190",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "ipaddress",
            "description": "Address that mysqld should listen on",
            "choice": [

            ]
          },
          "mysql/tunable/back_log": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Back Log",
            "value": "128",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/monitor_user_id": {
            "service_name": "mysql_server",
            "value": "root"
          },
          "mysql/tunable/net_write_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Net Write Timeout",
            "value": "30",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/datadir": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Data Directory",
            "value": "/var/lib/mysql",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "/var/lib/mysql",
            "description": "Location of mysql databases",
            "choice": [

            ]
          },
          "mysql/tunable/net_read_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Net Read Timeout",
            "value": "30",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/tunable/max_heap_table_size": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Max Heap Table Size",
            "value": "32M",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "32M",
            "choice": [

            ]
          },
          "mysql/_service/mysql_server/sap": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "binding_addr_constraints": [

                ],
                "application": "sql::mysql",
                "port": 3306
              },
              {
                "type": "unix_socket",
                "socket": "/var/run/mysqld/mysqld.sock"
              }
            ],
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/tunable/max_connections": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Max Connections",
            "value": "800",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "800",
            "choice": [

            ]
          },
          "mysql/sap": {
            "service_name": "mysql_server",
            "value": [
              {
                "type": "inet",
                "protocol": "tcp",
                "binding_addr_constraints": [

                ],
                "application": "sql::mysql",
                "port": 3306
              },
              {
                "type": "unix_socket",
                "socket": "/var/run/mysqld/mysqld.sock"
              }
            ]
          },
          "mysql/_service/mysql_server/db_info": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "database": "mysql",
                "password": {
                  "__ref": "node[mysql][server_root_password]"
                },
                "username": "root"
              }
            ],
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/server_root_password": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Server Root Password",
            "value": "tempt5",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "randomly generated",
            "description": "Randomly generated password for the mysqld root user",
            "choice": [

            ]
          },
          "mysql/tunable/table_cache": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Table Cache",
            "value": "128",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/db_info": {
            "service_name": "mysql_server",
            "value": [
              {
                "database": "mysql",
                "password": "tempt5",
                "username": "root"
              }
            ]
          },
          "mysql/_service/mysql_server/monitor_user_id": {
            "type": "string",
            "required": "optional",
            "transform": "root",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/ec2_path": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL EC2 Path",
            "value": "/mnt/mysql",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "/mnt/mysql",
            "description": "Location of mysql directory on EC2 instance EBS volumes",
            "choice": [

            ]
          }
        },
        "node_name": "i-bd39e2d7"
      },
      "ds_key": "[:chef, :instance, \"i-bd39e2d7\", \"mysql::server2\"]"
    },
    "i-bd39e2d7__rabbitmq": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-bd39e2d7__rabbitmq",
      "external_cmp_ref": "recipe[rabbitmq]",
      "attribute": {
        "port[sap]": {
          "display_name": "port[sap]",
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "tcp",
              "port": 5672
            }
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[rabbitmq][sap]"
        },
        "var[branch_tag]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[branch_tag]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
          "external_attr_ref": "node[rabbitmq][branch_tag]"
        },
        "var[stomp][branch_tag]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[stomp][branch_tag]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
          "external_attr_ref": "node[rabbitmq][stomp][branch_tag]"
        },
        "var[_service][rabbitmq][sap]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][rabbitmq][sap]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "node[rabbitmq][_service][rabbitmq][sap]"
        }
      },
      "ds_attributes": {
        "recipe_name": "rabbitmq",
        "attributes": {
          "rabbitmq/stomp/branch_tag": {
            "type": "string",
            "required": "optional",
            "display_name": "RabbitMQ-stomp adapter tag/branch name",
            "calculated": false,
            "recipes": [

            ],
            "default": "default",
            "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
            "choice": [

            ]
          },
          "rabbitmq/branch_tag": {
            "type": "string",
            "required": "optional",
            "display_name": "RabbitMQ tag/branch name",
            "calculated": false,
            "recipes": [

            ],
            "default": "default",
            "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
            "choice": [

            ]
          },
          "rabbitmq/_service/rabbitmq/sap": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": 5672
              }
            ],
            "calculated": false,
            "recipes": [

            ],
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "rabbitmq/sap": {
            "service_name": "rabbitmq",
            "value": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": 5672
              }
            ]
          }
        },
        "node_name": "i-bd39e2d7"
      },
      "ds_key": "[:chef, :instance, \"i-bd39e2d7\", \"rabbitmq\"]"
    },
    "i-7550141f__chef_aux": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-7550141f__chef_aux",
      "external_cmp_ref": "recipe[chef_aux]",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "attributes": {
        },
        "node_name": "i-7550141f"
      },
      "ds_key": "[:chef, :instance, \"i-7550141f\", \"chef_aux\"]"
    },
    "i-afcd95c5__hadoop_cloudera_c3::conf_pseudo": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-afcd95c5__hadoop_cloudera_c3::conf_pseudo",
      "external_cmp_ref": "recipe[hadoop_cloudera_c3::conf_pseudo]",
      "attribute": {
        "port[jmxremote_port]": {
          "display_name": "port[jmxremote_port]",
          "value_asserted": "1618",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[hadoop_namenode][jmxremote_port]"
        },
        "var[_service][hadoop_namenode][jmxremote_password]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_password]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]"
        },
        "port[jmxremote_password]": {
          "display_name": "port[jmxremote_password]",
          "value_asserted": "QED",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[hadoop_namenode][jmxremote_password]"
        },
        "var[_service][hadoop_namenode][jmxremote_port]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_port]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]"
        }
      },
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "attributes": {
          "hadoop_cloudera_c3/jmxremote_port": {
            "service_name": "hadoop_namenode",
            "value": 1618
          },
          "hadoop_cloudera_c3/jmxremote_password": {
            "service_name": "hadoop_namenode",
            "value": "QED"
          },
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_password": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][password]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_port": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][namenode][port]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          }
        },
        "node_name": "i-afcd95c5"
      },
      "ds_key": "[:chef, :instance, \"i-afcd95c5\", \"hadoop_cloudera_c3::conf_pseudo\"]"
    },
    "i-2fb68345__collectd::server": {
      "display_name": "i-2fb68345__collectd::server"
    },
    "i-374b945d__hadoop::conf_pseudo": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-374b945d__hadoop::conf_pseudo",
      "external_cmp_ref": "recipe[hadoop::conf_pseudo]",
      "ds_attributes": {
        "recipe_name": "hadoop::conf_pseudo",
        "attributes": {
        },
        "node_name": "i-374b945d"
      },
      "ds_key": "[:chef, :instance, \"i-374b945d\", \"hadoop::conf_pseudo\"]"
    },
    "i-bd39e2d7__nagios::client": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-bd39e2d7__nagios::client",
      "external_cmp_ref": "recipe[nagios::client]",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "attributes": {
        },
        "node_name": "i-bd39e2d7"
      },
      "ds_key": "[:chef, :instance, \"i-bd39e2d7\", \"nagios::client\"]"
    },
    "i-c1b527ab__nagios::client": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-c1b527ab__nagios::client",
      "external_cmp_ref": "recipe[nagios::client]",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "attributes": {
        },
        "node_name": "i-c1b527ab"
      },
      "ds_key": "[:chef, :instance, \"i-c1b527ab\", \"nagios::client\"]"
    },
    "i-0502796f__nagios::client": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-0502796f__nagios::client",
      "external_cmp_ref": "recipe[nagios::client]",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "attributes": {
        },
        "node_name": "i-0502796f"
      },
      "ds_key": "[:chef, :instance, \"i-0502796f\", \"nagios::client\"]"
    },
    "i-ef1b4385__collectd::client": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-ef1b4385__collectd::client",
      "external_cmp_ref": "recipe[collectd::client]",
      "ds_attributes": {
        "recipe_name": "collectd::client",
        "attributes": {
        },
        "node_name": "i-ef1b4385"
      },
      "ds_key": "[:chef, :instance, \"i-ef1b4385\", \"collectd::client\"]"
    },
    "i-c1b527ab__chef_aux": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-c1b527ab__chef_aux",
      "external_cmp_ref": "recipe[chef_aux]",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "attributes": {
        },
        "node_name": "i-c1b527ab"
      },
      "ds_key": "[:chef, :instance, \"i-c1b527ab\", \"chef_aux\"]"
    },
    "i-11d8497b__nagios::client": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-11d8497b__nagios::client",
      "external_cmp_ref": "recipe[nagios::client]",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "attributes": {
        },
        "node_name": "i-11d8497b"
      },
      "ds_key": "[:chef, :instance, \"i-11d8497b\", \"nagios::client\"]"
    },
    "i-374b945d__hadoop": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-374b945d__hadoop",
      "external_cmp_ref": "recipe[hadoop]",
      "ds_attributes": {
        "recipe_name": "hadoop",
        "attributes": {
        },
        "node_name": "i-374b945d"
      },
      "ds_key": "[:chef, :instance, \"i-374b945d\", \"hadoop\"]"
    },
    "i-dfcb12b5__hadoop": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-dfcb12b5__hadoop",
      "external_cmp_ref": "recipe[hadoop]",
      "ds_attributes": {
        "recipe_name": "hadoop",
        "attributes": {
        },
        "node_name": "i-dfcb12b5"
      },
      "ds_key": "[:chef, :instance, \"i-dfcb12b5\", \"hadoop\"]"
    },
    "nagios::client": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "nagios::client",
      "external_cmp_ref": "recipe[nagios::client]",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "attributes": {
        },
        "monitoring_items": {
        },
        "description": "Installs and configures a nagios client with nrpe"
      },
      "ds_key": "[:chef, :template, \"nagios::client\"]",
      "description": "Installs and configures a nagios client with nrpe"
    },
    "i-17e9dd7d__collectd::server": {
      "display_name": "i-17e9dd7d__collectd::server"
    },
    "mysql::server": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "mysql::server",
      "external_cmp_ref": "recipe[mysql::server]",
	  "ui": "{\"images\": {\"tnail\":\"mysql.png\",\"display\":\"mysql.png\",\"tiny\":\"\"}}",
      "attribute": {
        "var[_service][mysql_server][db_info]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][db_info]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][db_info]"
        },
        "port[sap]": {
          "display_name": "port[sap]",
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "tcp",
              "binding_addr_constraints": [

              ],
              "application": "sql::mysql",
              "port": 3306
            },
            {
              "type": "unix_socket",
              "socket": "/var/run/mysqld/mysqld.sock"
            }
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[mysql_server][sap]"
        },
        "var[_service][mysql_server][sap]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][sap]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][sap]"
        },
        "var[bind_address]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[bind_address]",
          "data_type": "string",
          "value_asserted": "ipaddress",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Address that mysqld should listen on",
          "external_attr_ref": "node[mysql][bind_address]"
        },
        "var[tunable][key_buffer]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][key_buffer]",
          "data_type": "string",
          "value_asserted": "250M",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][key_buffer]"
        },
        "var[tunable][back_log]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][back_log]",
          "data_type": "string",
          "value_asserted": "128",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][back_log]"
        },
        "var[tunable][max_connections]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][max_connections]",
          "data_type": "string",
          "value_asserted": "800",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][max_connections]"
        },
        "var[tunable][wait_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][wait_timeout]",
          "data_type": "string",
          "value_asserted": "180",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][wait_timeout]"
        },
        "var[_service][mysql_server][monitor_user_id]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][monitor_user_id]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][monitor_user_id]"
        },
        "port[monitor_user_id]": {
          "display_name": "port[monitor_user_id]",
          "value_asserted": "root",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[mysql_server][monitor_user_id]"
        },
        "var[server_root_password]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[server_root_password]",
          "data_type": "string",
          "value_asserted": "randomly generated",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Randomly generated password for the mysqld root user",
          "external_attr_ref": "node[mysql][server_root_password]"
        },
        "var[tunable][max_heap_table_size]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][max_heap_table_size]",
          "data_type": "string",
          "value_asserted": "32M",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][max_heap_table_size]"
        },
        "var[tunable][net_write_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][net_write_timeout]",
          "data_type": "string",
          "value_asserted": "30",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][net_write_timeout]"
        },
        "var[datadir]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[datadir]",
          "data_type": "string",
          "value_asserted": "/var/lib/mysql",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Location of mysql databases",
          "external_attr_ref": "node[mysql][datadir]"
        },
        "var[tunable][net_read_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][net_read_timeout]",
          "data_type": "string",
          "value_asserted": "30",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][net_read_timeout]"
        },
        "var[ec2_path]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[ec2_path]",
          "data_type": "string",
          "value_asserted": "/mnt/mysql",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Location of mysql directory on EC2 instance EBS volumes",
          "external_attr_ref": "node[mysql][ec2_path]"
        },
        "port[db_info]": {
          "display_name": "port[db_info]",
          "value_asserted": [
            {
              "database": "mysql",
              "password": "randomly generated",
              "username": "root"
            }
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[mysql_server][db_info]"
        },
        "var[tunable][table_cache]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][table_cache]",
          "data_type": "string",
          "value_asserted": "128",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][table_cache]"
        }
      },
      "ds_attributes": {
        "recipe_name": "mysql::server",
        "attributes": {
          "mysql/tunable/wait_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Wait Timeout",
            "value": "180",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "180",
            "choice": [

            ]
          },
          "mysql/tunable/key_buffer": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tuntable Key Buffer",
            "value": "250M",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "250M",
            "choice": [

            ]
          },
          "mysql/bind_address": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Bind Address",
            "value": "ipaddress",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "ipaddress",
            "description": "Address that mysqld should listen on",
            "choice": [

            ]
          },
          "mysql/tunable/back_log": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Back Log",
            "value": "128",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/monitor_user_id": {
            "service_name": "mysql_server",
            "value": "root"
          },
          "mysql/tunable/net_write_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Net Write Timeout",
            "value": "30",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/datadir": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Data Directory",
            "value": "/var/lib/mysql",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "/var/lib/mysql",
            "description": "Location of mysql databases",
            "choice": [

            ]
          },
          "mysql/tunable/net_read_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Net Read Timeout",
            "value": "30",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/tunable/max_heap_table_size": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Max Heap Table Size",
            "value": "32M",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "32M",
            "choice": [

            ]
          },
          "mysql/_service/mysql_server/sap": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "binding_addr_constraints": [

                ],
                "application": "sql::mysql",
                "port": 3306
              },
              {
                "type": "unix_socket",
                "socket": "/var/run/mysqld/mysqld.sock"
              }
            ],
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/tunable/max_connections": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Max Connections",
            "value": "800",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "800",
            "choice": [

            ]
          },
          "mysql/sap": {
            "service_name": "mysql_server",
            "value": [
              {
                "type": "inet",
                "protocol": "tcp",
                "binding_addr_constraints": [

                ],
                "application": "sql::mysql",
                "port": 3306
              },
              {
                "type": "unix_socket",
                "socket": "/var/run/mysqld/mysqld.sock"
              }
            ]
          },
          "mysql/_service/mysql_server/db_info": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "database": "mysql",
                "password": {
                  "__ref": "node[mysql][server_root_password]"
                },
                "username": "root"
              }
            ],
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/server_root_password": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Server Root Password",
            "value": "randomly generated",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "randomly generated",
            "description": "Randomly generated password for the mysqld root user",
            "choice": [

            ]
          },
          "mysql/tunable/table_cache": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Table Cache",
            "value": "128",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/db_info": {
            "service_name": "mysql_server",
            "value": [
              {
                "database": "mysql",
                "password": "randomly generated",
                "username": "root"
              }
            ]
          },
          "mysql/_service/mysql_server/monitor_user_id": {
            "type": "string",
            "required": "optional",
            "transform": "root",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/ec2_path": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL EC2 Path",
            "value": "/mnt/mysql",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "/mnt/mysql",
            "description": "Location of mysql directory on EC2 instance EBS volumes",
            "choice": [

            ]
          }
        },
        "monitoring_items": {
          "inet_service_up": {
            "service_name": "mysql_server",
            "condition_name": "accessible_over_tcp",
            "condition_description": "this service should be accessible over tcp",
            "params": [
              "sap"
            ],
            "enabled": true,
            "name": "inet_service_up"
          },
          "mysql_basic_health": {
            "service_name": "mysql_server",
            "applicability_conditions": [
              "lambda{|p|p[:db_info] and p[:db_info].find{|x|x[:username] == p[:monitor_user_id]}}"
            ],
            "condition_name": null,
            "condition_description": "the user 'monitor_user_id' should be able to log into this service",
            "params": [
              "db_info",
              "monitor_user_id"
            ],
            "enabled": true,
            "name": "mysql_basic_health"
          }
        },
        "description": "Installs packages required for mysql servers w/o manual intervention"
      },
      "ds_key": "[:chef, :template, \"mysql::server\"]",
      "monitoring_item": {
        "mysql_basic_health": {
          "display_name": "mysql_basic_health",
          "enabled": true
        },
        "inet_service_up": {
          "display_name": "inet_service_up",
          "enabled": true
        }
      },
      "description": "Installs packages required for mysql servers w/o manual intervention"
    },
    "mysql::server2": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "mysql::server2",
      "external_cmp_ref": "recipe[mysql::server2]",
	  "ui": "{\"images\": {\"tnail\":\"mysql.png\",\"display\":\"mysql.png\",\"tiny\":\"\"}}",
      "attribute": {
        "var[_service][mysql_server][db_info]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][db_info]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][db_info]"
        },
        "port[sap]": {
          "display_name": "port[sap]",
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "tcp",
              "binding_addr_constraints": [

              ],
              "application": "sql::mysql",
              "port": 3306
            },
            {
              "type": "unix_socket",
              "socket": "/var/run/mysqld/mysqld.sock"
            }
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[mysql_server][sap]"
        },
        "var[_service][mysql_server][sap]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][sap]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][sap]"
        },
        "var[bind_address]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[bind_address]",
          "data_type": "string",
          "value_asserted": "ipaddress",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Address that mysqld should listen on",
          "external_attr_ref": "node[mysql][bind_address]"
        },
        "var[tunable][key_buffer]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][key_buffer]",
          "data_type": "string",
          "value_asserted": "250M",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][key_buffer]"
        },
        "var[tunable][back_log]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][back_log]",
          "data_type": "string",
          "value_asserted": "128",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][back_log]"
        },
        "var[tunable][max_connections]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][max_connections]",
          "data_type": "string",
          "value_asserted": "800",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][max_connections]"
        },
        "var[tunable][wait_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][wait_timeout]",
          "data_type": "string",
          "value_asserted": "180",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][wait_timeout]"
        },
        "var[_service][mysql_server][monitor_user_id]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][monitor_user_id]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][monitor_user_id]"
        },
        "port[monitor_user_id]": {
          "display_name": "port[monitor_user_id]",
          "value_asserted": "root",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[mysql_server][monitor_user_id]"
        },
        "var[server_root_password]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[server_root_password]",
          "data_type": "string",
          "value_asserted": "randomly generated",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Randomly generated password for the mysqld root user",
          "external_attr_ref": "node[mysql][server_root_password]"
        },
        "var[tunable][max_heap_table_size]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][max_heap_table_size]",
          "data_type": "string",
          "value_asserted": "32M",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][max_heap_table_size]"
        },
        "var[tunable][net_write_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][net_write_timeout]",
          "data_type": "string",
          "value_asserted": "30",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][net_write_timeout]"
        },
        "var[datadir]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[datadir]",
          "data_type": "string",
          "value_asserted": "/var/lib/mysql",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Location of mysql databases",
          "external_attr_ref": "node[mysql][datadir]"
        },
        "var[tunable][net_read_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][net_read_timeout]",
          "data_type": "string",
          "value_asserted": "30",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][net_read_timeout]"
        },
        "var[ec2_path]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[ec2_path]",
          "data_type": "string",
          "value_asserted": "/mnt/mysql",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Location of mysql directory on EC2 instance EBS volumes",
          "external_attr_ref": "node[mysql][ec2_path]"
        },
        "port[db_info]": {
          "display_name": "port[db_info]",
          "value_asserted": [
            {
              "database": "mysql",
              "password": "randomly generated",
              "username": "root"
            }
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[mysql_server][db_info]"
        },
        "var[tunable][table_cache]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][table_cache]",
          "data_type": "string",
          "value_asserted": "128",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][table_cache]"
        }
      },
      "ds_attributes": {
        "recipe_name": "mysql::server2",
        "attributes": {
          "mysql/tunable/wait_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Wait Timeout",
            "value": "180",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "180",
            "choice": [

            ]
          },
          "mysql/tunable/key_buffer": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tuntable Key Buffer",
            "value": "250M",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "250M",
            "choice": [

            ]
          },
          "mysql/bind_address": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Bind Address",
            "value": "ipaddress",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "ipaddress",
            "description": "Address that mysqld should listen on",
            "choice": [

            ]
          },
          "mysql/tunable/back_log": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Back Log",
            "value": "128",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/monitor_user_id": {
            "service_name": "mysql_server",
            "value": "root"
          },
          "mysql/tunable/net_write_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Net Write Timeout",
            "value": "30",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/datadir": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Data Directory",
            "value": "/var/lib/mysql",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "/var/lib/mysql",
            "description": "Location of mysql databases",
            "choice": [

            ]
          },
          "mysql/tunable/net_read_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Net Read Timeout",
            "value": "30",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/tunable/max_heap_table_size": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Max Heap Table Size",
            "value": "32M",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "32M",
            "choice": [

            ]
          },
          "mysql/_service/mysql_server/sap": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "binding_addr_constraints": [

                ],
                "application": "sql::mysql",
                "port": 3306
              },
              {
                "type": "unix_socket",
                "socket": "/var/run/mysqld/mysqld.sock"
              }
            ],
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/tunable/max_connections": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Max Connections",
            "value": "800",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "800",
            "choice": [

            ]
          },
          "mysql/sap": {
            "service_name": "mysql_server",
            "value": [
              {
                "type": "inet",
                "protocol": "tcp",
                "binding_addr_constraints": [

                ],
                "application": "sql::mysql",
                "port": 3306
              },
              {
                "type": "unix_socket",
                "socket": "/var/run/mysqld/mysqld.sock"
              }
            ]
          },
          "mysql/_service/mysql_server/db_info": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "database": "mysql",
                "password": {
                  "__ref": "node[mysql][server_root_password]"
                },
                "username": "root"
              }
            ],
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/server_root_password": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Server Root Password",
            "value": "randomly generated",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "randomly generated",
            "description": "Randomly generated password for the mysqld root user",
            "choice": [

            ]
          },
          "mysql/tunable/table_cache": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Table Cache",
            "value": "128",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/db_info": {
            "service_name": "mysql_server",
            "value": [
              {
                "database": "mysql",
                "password": "randomly generated",
                "username": "root"
              }
            ]
          },
          "mysql/_service/mysql_server/monitor_user_id": {
            "type": "string",
            "required": "optional",
            "transform": "root",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/ec2_path": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL EC2 Path",
            "value": "/mnt/mysql",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "/mnt/mysql",
            "description": "Location of mysql directory on EC2 instance EBS volumes",
            "choice": [

            ]
          }
        },
        "monitoring_items": {
          "inet_service_up": {
            "service_name": "mysql_server",
            "condition_name": "accessible_over_tcp",
            "condition_description": "this service should be accessible over tcp",
            "params": [
              "sap"
            ],
            "enabled": true,
            "name": "inet_service_up"
          },
          "mysql_basic_health": {
            "service_name": "mysql_server",
            "applicability_conditions": [
              "lambda{|p|p[:db_info] and p[:db_info].find{|x|x[:username] == p[:monitor_user_id]}}"
            ],
            "condition_name": null,
            "condition_description": "the user 'monitor_user_id' should be able to log into this service",
            "params": [
              "db_info",
              "monitor_user_id"
            ],
            "enabled": true,
            "name": "mysql_basic_health"
          }
        },
        "description": "Installs packages required for mysql servers w/o manual intervention"
      },
      "ds_key": "[:chef, :template, \"mysql::server2\"]",
      "monitoring_item": {
        "mysql_basic_health": {
          "display_name": "mysql_basic_health",
          "enabled": true
        },
        "inet_service_up": {
          "display_name": "inet_service_up",
          "enabled": true
        }
      },
      "description": "Installs packages required for mysql servers w/o manual intervention"
    },
    "i-c5f5afaf__collectd::server": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-c5f5afaf__collectd::server",
      "external_cmp_ref": "recipe[collectd::server]",
      "ds_attributes": {
        "recipe_name": "collectd::server",
        "attributes": {
        },
        "node_name": "i-c5f5afaf"
      },
      "ds_key": "[:chef, :instance, \"i-c5f5afaf\", \"collectd::server\"]"
    },
    "i-7550141f__java_sun": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-7550141f__java_sun",
      "external_cmp_ref": "recipe[java_sun]",
      "ds_attributes": {
        "recipe_name": "java_sun",
        "attributes": {
        },
        "node_name": "i-7550141f"
      },
      "ds_key": "[:chef, :instance, \"i-7550141f\", \"java_sun\"]"
    },
    "i-69381003__collectd::client": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-69381003__collectd::client",
      "external_cmp_ref": "recipe[collectd::client]",
      "ds_attributes": {
        "recipe_name": "collectd::client",
        "attributes": {
        },
        "node_name": "i-69381003"
      },
      "ds_key": "[:chef, :instance, \"i-69381003\", \"collectd::client\"]"
    },
    "i-59d58d33__chef_aux": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-59d58d33__chef_aux",
      "external_cmp_ref": "recipe[chef_aux]",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "attributes": {
        },
        "node_name": "i-59d58d33"
      },
      "ds_key": "[:chef, :instance, \"i-59d58d33\", \"chef_aux\"]"
    },
    "i-fb486291__chef_aux": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-fb486291__chef_aux",
      "external_cmp_ref": "recipe[chef_aux]",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "attributes": {
        },
        "node_name": "i-fb486291"
      },
      "ds_key": "[:chef, :instance, \"i-fb486291\", \"chef_aux\"]"
    },
    "rabbitmq::edge": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "rabbitmq::edge",
      "external_cmp_ref": "recipe[rabbitmq::edge]",
	  "ui": "{\"images\": {\"tnail\":\"rabbitmq.png\",\"display\":\"rabbitmq.png\",\"tiny\":\"\"}}",
      "attribute": {
        "var[branch_tag]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[branch_tag]",
          "data_type": "string",
          "value_asserted": "default",
          "is_array": false,
          "propagation_type": "immediate",
          "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
          "external_attr_ref": "node[rabbitmq][branch_tag]"
        },
        "var[stomp][branch_tag]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[stomp][branch_tag]",
          "data_type": "string",
          "value_asserted": "default",
          "is_array": false,
          "propagation_type": "immediate",
          "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
          "external_attr_ref": "node[rabbitmq][stomp][branch_tag]"
        },
        "var[_service][rabbitmq][sap]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][rabbitmq][sap]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "node[rabbitmq][_service][rabbitmq][sap]"
        }
      },
      "ds_attributes": {
        "recipe_name": "rabbitmq::edge",
        "attributes": {
          "rabbitmq/stomp/branch_tag": {
            "type": "string",
            "required": "optional",
            "display_name": "RabbitMQ-stomp adapter tag/branch name",
            "value": "default",
            "calculated": false,
            "recipes": [

            ],
            "default": "default",
            "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
            "choice": [

            ]
          },
          "rabbitmq/branch_tag": {
            "type": "string",
            "required": "optional",
            "display_name": "RabbitMQ tag/branch name",
            "value": "default",
            "calculated": false,
            "recipes": [

            ],
            "default": "default",
            "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
            "choice": [

            ]
          },
          "rabbitmq/_service/rabbitmq/sap": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": 5672
              }
            ],
            "calculated": false,
            "recipes": [

            ],
            "is_service_attribute": true,
            "choice": [

            ]
          }
        },
        "monitoring_items": {
        },
        "description": "Set up RabbitMQ from source mercurial repository."
      },
      "ds_key": "[:chef, :template, \"rabbitmq::edge\"]",
      "description": "Set up RabbitMQ from source mercurial repository."
    },
    "mysql::client": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "mysql::client",
      "external_cmp_ref": "recipe[mysql::client]",
	  "ui": "{\"images\": {\"tnail\":\"mysql.png\",\"display\":\"mysql.png\",\"tiny\":\"\"}}",
      "attribute": {
        "var[_service][mysql_server][db_info]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][db_info]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][db_info]"
        },
        "var[_service][mysql_server][sap]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][sap]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][sap]"
        },
        "var[bind_address]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[bind_address]",
          "data_type": "string",
          "value_asserted": "ipaddress",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Address that mysqld should listen on",
          "external_attr_ref": "node[mysql][bind_address]"
        },
        "var[tunable][key_buffer]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][key_buffer]",
          "data_type": "string",
          "value_asserted": "250M",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][key_buffer]"
        },
        "var[tunable][back_log]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][back_log]",
          "data_type": "string",
          "value_asserted": "128",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][back_log]"
        },
        "var[tunable][max_connections]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][max_connections]",
          "data_type": "string",
          "value_asserted": "800",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][max_connections]"
        },
        "var[tunable][wait_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][wait_timeout]",
          "data_type": "string",
          "value_asserted": "180",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][wait_timeout]"
        },
        "var[_service][mysql_server][monitor_user_id]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][monitor_user_id]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][monitor_user_id]"
        },
        "var[server_root_password]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[server_root_password]",
          "data_type": "string",
          "value_asserted": "randomly generated",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Randomly generated password for the mysqld root user",
          "external_attr_ref": "node[mysql][server_root_password]"
        },
        "var[tunable][max_heap_table_size]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][max_heap_table_size]",
          "data_type": "string",
          "value_asserted": "32M",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][max_heap_table_size]"
        },
        "var[tunable][net_write_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][net_write_timeout]",
          "data_type": "string",
          "value_asserted": "30",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][net_write_timeout]"
        },
        "var[datadir]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[datadir]",
          "data_type": "string",
          "value_asserted": "/var/lib/mysql",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Location of mysql databases",
          "external_attr_ref": "node[mysql][datadir]"
        },
        "var[tunable][net_read_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][net_read_timeout]",
          "data_type": "string",
          "value_asserted": "30",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][net_read_timeout]"
        },
        "var[ec2_path]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[ec2_path]",
          "data_type": "string",
          "value_asserted": "/mnt/mysql",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Location of mysql directory on EC2 instance EBS volumes",
          "external_attr_ref": "node[mysql][ec2_path]"
        },
        "var[tunable][table_cache]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][table_cache]",
          "data_type": "string",
          "value_asserted": "128",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][table_cache]"
        }
      },
      "ds_attributes": {
        "recipe_name": "mysql::client",
        "attributes": {
          "mysql/tunable/wait_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Wait Timeout",
            "value": "180",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "180",
            "choice": [

            ]
          },
          "mysql/tunable/key_buffer": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tuntable Key Buffer",
            "value": "250M",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "250M",
            "choice": [

            ]
          },
          "mysql/bind_address": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Bind Address",
            "value": "ipaddress",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "ipaddress",
            "description": "Address that mysqld should listen on",
            "choice": [

            ]
          },
          "mysql/tunable/back_log": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Back Log",
            "value": "128",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/tunable/net_write_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Net Write Timeout",
            "value": "30",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/datadir": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Data Directory",
            "value": "/var/lib/mysql",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "/var/lib/mysql",
            "description": "Location of mysql databases",
            "choice": [

            ]
          },
          "mysql/tunable/net_read_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Net Read Timeout",
            "value": "30",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/tunable/max_heap_table_size": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Max Heap Table Size",
            "value": "32M",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "32M",
            "choice": [

            ]
          },
          "mysql/_service/mysql_server/sap": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "binding_addr_constraints": [

                ],
                "application": "sql::mysql",
                "port": 3306
              },
              {
                "type": "unix_socket",
                "socket": "/var/run/mysqld/mysqld.sock"
              }
            ],
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/tunable/max_connections": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Max Connections",
            "value": "800",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "800",
            "choice": [

            ]
          },
          "mysql/_service/mysql_server/db_info": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "database": "mysql",
                "password": {
                  "__ref": "node[mysql][server_root_password]"
                },
                "username": "root"
              }
            ],
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/server_root_password": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Server Root Password",
            "value": "randomly generated",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "randomly generated",
            "description": "Randomly generated password for the mysqld root user",
            "choice": [

            ]
          },
          "mysql/tunable/table_cache": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Table Cache",
            "value": "128",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/_service/mysql_server/monitor_user_id": {
            "type": "string",
            "required": "optional",
            "transform": "root",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/ec2_path": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL EC2 Path",
            "value": "/mnt/mysql",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "/mnt/mysql",
            "description": "Location of mysql directory on EC2 instance EBS volumes",
            "choice": [

            ]
          }
        },
        "monitoring_items": {
        },
        "description": "Installs packages required for mysql clients using run_action magic"
      },
      "ds_key": "[:chef, :template, \"mysql::client\"]",
      "description": "Installs packages required for mysql clients using run_action magic"
    },
    "i-fb486291__hadoop_cloudera_c3::conf_pseudo": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-fb486291__hadoop_cloudera_c3::conf_pseudo",
      "external_cmp_ref": "recipe[hadoop_cloudera_c3::conf_pseudo]",
      "attribute": {
        "port[jmxremote_port]": {
          "display_name": "port[jmxremote_port]",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[hadoop_namenode][jmxremote_port]"
        },
        "var[_service][hadoop_namenode][jmxremote_password]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_password]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]"
        },
        "port[jmxremote_password]": {
          "display_name": "port[jmxremote_password]",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[hadoop_namenode][jmxremote_password]"
        },
        "var[_service][hadoop_namenode][jmxremote_port]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_port]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]"
        }
      },
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "attributes": {
          "hadoop_cloudera_c3/jmxremote_port": {
            "service_name": "hadoop_namenode",
            "value": null
          },
          "hadoop_cloudera_c3/jmxremote_password": {
            "service_name": "hadoop_namenode",
            "value": null
          },
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_password": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][password]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_port": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][namenode][port]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          }
        },
        "node_name": "i-fb486291"
      },
      "ds_key": "[:chef, :instance, \"i-fb486291\", \"hadoop_cloudera_c3::conf_pseudo\"]"
    },
    "i-b5c5f1df__collectd::server": {
      "display_name": "i-b5c5f1df__collectd::server"
    },
    "hadoop::hive": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "hadoop::hive",
      "external_cmp_ref": "recipe[hadoop::hive]",
      "ds_attributes": {
        "recipe_name": "hadoop::hive",
        "attributes": {
        },
        "monitoring_items": {
        },
        "description": "Installs hadoop's hive package"
      },
      "ds_key": "[:chef, :template, \"hadoop::hive\"]",
      "description": "Installs hadoop's hive package"
    },
    "hadoop::conf_pseudo": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "hadoop::conf_pseudo",
      "external_cmp_ref": "recipe[hadoop::conf_pseudo]",
      "ds_attributes": {
        "recipe_name": "hadoop::conf_pseudo",
        "attributes": {
        },
        "monitoring_items": {
        },
        "description": "Installs hadoop-conf-pseudo and enables hadoop services"
      },
      "ds_key": "[:chef, :template, \"hadoop::conf_pseudo\"]",
      "description": "Installs hadoop-conf-pseudo and enables hadoop services"
    },
    "i-ef1b4385__chef_aux": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-ef1b4385__chef_aux",
      "external_cmp_ref": "recipe[chef_aux]",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "attributes": {
        },
        "node_name": "i-ef1b4385"
      },
      "ds_key": "[:chef, :instance, \"i-ef1b4385\", \"chef_aux\"]"
    },
    "i-33886f59__nagios::client": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-33886f59__nagios::client",
      "external_cmp_ref": "recipe[nagios::client]",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "attributes": {
        },
        "node_name": "i-33886f59"
      },
      "ds_key": "[:chef, :instance, \"i-33886f59\", \"nagios::client\"]"
    },
    "i-b04bf4da__collectd::client": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-b04bf4da__collectd::client",
      "external_cmp_ref": "recipe[collectd::client]",
	  "ui": "{\"images\": {\"tnail\":\"collectd.png\",\"display\":\"collectd.png\",\"tiny\":\"\"}}",
      "ds_attributes": {
        "recipe_name": "collectd::client",
        "attributes": {
        },
        "node_name": "i-b04bf4da"
      },
      "ds_key": "[:chef, :instance, \"i-b04bf4da\", \"collectd::client\"]"
    },
    "i-59d58d33__hadoop_cloudera_c3::conf_pseudo": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-59d58d33__hadoop_cloudera_c3::conf_pseudo",
      "external_cmp_ref": "recipe[hadoop_cloudera_c3::conf_pseudo]",
      "attribute": {
        "port[jmxremote_port]": {
          "display_name": "port[jmxremote_port]",
          "value_asserted": "1618",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[hadoop_namenode][jmxremote_port]"
        },
        "var[_service][hadoop_namenode][jmxremote_password]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_password]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]"
        },
        "port[jmxremote_password]": {
          "display_name": "port[jmxremote_password]",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[hadoop_namenode][jmxremote_password]"
        },
        "var[_service][hadoop_namenode][jmxremote_port]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_port]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]"
        }
      },
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "attributes": {
          "hadoop_cloudera_c3/jmxremote_port": {
            "service_name": "hadoop_namenode",
            "value": 1618
          },
          "hadoop_cloudera_c3/jmxremote_password": {
            "service_name": "hadoop_namenode",
            "value": null
          },
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_password": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][password]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_port": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][namenode][port]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          }
        },
        "node_name": "i-59d58d33"
      },
      "ds_key": "[:chef, :instance, \"i-59d58d33\", \"hadoop_cloudera_c3::conf_pseudo\"]"
    },
    "i-871863ed__hadoop_cloudera_c2::conf_pseudo": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-871863ed__hadoop_cloudera_c2::conf_pseudo",
      "external_cmp_ref": "recipe[hadoop_cloudera_c2::conf_pseudo]",
      "attribute": {
        "var[_service][hadoop_namenode][jmxremote_password]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_password]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c2][_service][hadoop_namenode][jmxremote_password]"
        },
        "var[_service][hadoop_namenode][jmxremote_port]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_port]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c2][_service][hadoop_namenode][jmxremote_port]"
        }
      },
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c2::conf_pseudo",
        "attributes": {
          "hadoop_cloudera_c2/_service/hadoop_namenode/jmxremote_port": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][namenode][port]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "hadoop_cloudera_c2/_service/hadoop_namenode/jmxremote_password": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][password]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          }
        },
        "node_name": "i-871863ed"
      },
      "ds_key": "[:chef, :instance, \"i-871863ed\", \"hadoop_cloudera_c2::conf_pseudo\"]"
    },
    "i-b04bf4da__nagios::client": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-b04bf4da__nagios::client",
      "external_cmp_ref": "recipe[nagios::client]",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "attributes": {
        },
        "node_name": "i-b04bf4da"
      },
      "ds_key": "[:chef, :instance, \"i-b04bf4da\", \"nagios::client\"]"
    },
    "i-79c39f13__collectd": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-79c39f13__collectd",
      "external_cmp_ref": "recipe[collectd]",
	  "ui": "{\"images\": {\"tnail\":\"collectd.png\",\"display\":\"collectd.png\",\"tiny\":\"\"}}",
      "ds_attributes": {
        "recipe_name": "collectd",
        "attributes": {
        },
        "node_name": "i-79c39f13"
      },
      "ds_key": "[:chef, :instance, \"i-79c39f13\", \"collectd\"]"
    },
    "i-b04bf4da__hadoop_cloudera_c3::conf_pseudo": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-b04bf4da__hadoop_cloudera_c3::conf_pseudo",
      "external_cmp_ref": "recipe[hadoop_cloudera_c3::conf_pseudo]",
      "attribute": {
        "port[jmxremote_port]": {
          "display_name": "port[jmxremote_port]",
          "value_asserted": "1618",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[hadoop_namenode][jmxremote_port]"
        },
        "var[_service][hadoop_namenode][jmxremote_password]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_password]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]"
        },
        "port[jmxremote_password]": {
          "display_name": "port[jmxremote_password]",
          "value_asserted": "QED",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[hadoop_namenode][jmxremote_password]"
        },
        "var[_service][hadoop_namenode][jmxremote_port]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_port]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]"
        }
      },
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "attributes": {
          "hadoop_cloudera_c3/jmxremote_port": {
            "service_name": "hadoop_namenode",
            "value": 1618
          },
          "hadoop_cloudera_c3/jmxremote_password": {
            "service_name": "hadoop_namenode",
            "value": "QED"
          },
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_password": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][password]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_port": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][namenode][port]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          }
        },
        "node_name": "i-b04bf4da"
      },
      "ds_key": "[:chef, :instance, \"i-b04bf4da\", \"hadoop_cloudera_c3::conf_pseudo\"]"
    },
    "i-dfcb12b5__hadoop::conf_pseudo": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-dfcb12b5__hadoop::conf_pseudo",
      "external_cmp_ref": "recipe[hadoop::conf_pseudo]",
      "ds_attributes": {
        "recipe_name": "hadoop::conf_pseudo",
        "attributes": {
        },
        "node_name": "i-dfcb12b5"
      },
      "ds_key": "[:chef, :instance, \"i-dfcb12b5\", \"hadoop::conf_pseudo\"]"
    },
    "postgresql::server": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "postgresql::server",
      "external_cmp_ref": "recipe[postgresql::server]",
      "attribute": {
        "var[dir]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[dir]",
          "data_type": "string",
          "value_asserted": "/etc/postgresql/8.3/main",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Location of the PostgreSQL databases",
          "external_attr_ref": "node[postgresql][dir]"
        }
      },
      "ds_attributes": {
        "recipe_name": "postgresql::server",
        "attributes": {
          "postgresql/dir": {
            "type": "string",
            "required": "optional",
            "display_name": "PostgreSQL Directory",
            "value": "/etc/postgresql/8.3/main",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "/etc/postgresql/8.3/main",
            "description": "Location of the PostgreSQL databases",
            "choice": [

            ]
          }
        },
        "monitoring_items": {
        },
        "description": "Installs postgresql server packages, templates"
      },
      "ds_key": "[:chef, :template, \"postgresql::server\"]",
      "description": "Installs postgresql server packages, templates"
    },
    "redis": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "redis",
      "external_cmp_ref": "recipe[redis]",
	  "ui": "{\"images\": {\"tnail\":\"redis.png\",\"display\":\"redis.png\",\"tiny\":\"\"}}",
      "attribute": {
        "port[sap]": {
          "display_name": "port[sap]",
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "tcp",
              "port": null
            }
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[redis_service][sap]"
        },
        "var[_service][redis_service][sap]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][redis_service][sap]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "node[redis][_service][redis_service][sap]"
        }
      },
      "ds_attributes": {
        "recipe_name": "redis",
        "attributes": {
          "redis/_service/redis_service/sap": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": {
                  "__ref": "node[redis][port]"
                }
              }
            ],
            "calculated": false,
            "recipes": [

            ],
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "redis/sap": {
            "service_name": "redis_service",
            "value": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": null
              }
            ]
          }
        },
        "monitoring_items": {
          "inet_service_up": {
            "service_name": "redis_service",
            "condition_name": "accessible_over_tcp",
            "condition_description": "this service should be accessible over tcp",
            "params": [
              "sap"
            ],
            "enabled": true,
            "name": "inet_service_up"
          },
          "redis_basic_health": {
            "service_name": "redis_service",
            "condition_name": null,
            "condition_description": "anonymous user should be able to log into this service",
            "params": [
              "sap"
            ],
            "enabled": true,
            "name": "redis_basic_health"
          }
        },
        "description": "Installs/Configures redis"
      },
      "ds_key": "[:chef, :template, \"redis\"]",
      "monitoring_item": {
        "inet_service_up": {
          "display_name": "inet_service_up",
          "enabled": true
        },
        "redis_basic_health": {
          "display_name": "redis_basic_health",
          "enabled": true
        }
      },
      "description": "Installs/Configures redis"
    },
    "i-07af096d__nagios::client": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-07af096d__nagios::client",
      "external_cmp_ref": "recipe[nagios::client]",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "attributes": {
        },
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, :instance, \"i-07af096d\", \"nagios::client\"]"
    },
    "i-69381003__java_sun": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-69381003__java_sun",
      "external_cmp_ref": "recipe[java_sun]",
      "ds_attributes": {
        "recipe_name": "java_sun",
        "attributes": {
        },
        "node_name": "i-69381003"
      },
      "ds_key": "[:chef, :instance, \"i-69381003\", \"java_sun\"]"
    },
    "i-0502796f__hadoop_cloudera_c3_228::conf_pseudo": {
      "display_name": "i-0502796f__hadoop_cloudera_c3_228::conf_pseudo"
    },
    "i-656e580f__collectd::server": {
      "display_name": "i-656e580f__collectd::server"
    },
    "i-ef1b4385__hadoop_cloudera_c3::conf_pseudo": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-ef1b4385__hadoop_cloudera_c3::conf_pseudo",
      "external_cmp_ref": "recipe[hadoop_cloudera_c3::conf_pseudo]",
      "attribute": {
        "port[jmxremote_port]": {
          "display_name": "port[jmxremote_port]",
          "value_asserted": "1618",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[hadoop_namenode][jmxremote_port]"
        },
        "var[_service][hadoop_namenode][jmxremote_password]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_password]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]"
        },
        "port[jmxremote_password]": {
          "display_name": "port[jmxremote_password]",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[hadoop_namenode][jmxremote_password]"
        },
        "var[_service][hadoop_namenode][jmxremote_port]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_port]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]"
        }
      },
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "attributes": {
          "hadoop_cloudera_c3/jmxremote_port": {
            "service_name": "hadoop_namenode",
            "value": 1618
          },
          "hadoop_cloudera_c3/jmxremote_password": {
            "service_name": "hadoop_namenode",
            "value": null
          },
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_password": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][password]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_port": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][namenode][port]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          }
        },
        "node_name": "i-ef1b4385"
      },
      "ds_key": "[:chef, :instance, \"i-ef1b4385\", \"hadoop_cloudera_c3::conf_pseudo\"]"
    },
    "hadoop_cloudera_c3::conf_pseudo": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "hadoop_cloudera_c3::conf_pseudo",
      "external_cmp_ref": "recipe[hadoop_cloudera_c3::conf_pseudo]",
      "attribute": {
        "port[jmxremote_port]": {
          "display_name": "port[jmxremote_port]",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[hadoop_namenode][jmxremote_port]"
        },
        "var[_service][hadoop_namenode][jmxremote_password]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_password]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]"
        },
        "port[jmxremote_password]": {
          "display_name": "port[jmxremote_password]",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[hadoop_namenode][jmxremote_password]"
        },
        "var[_service][hadoop_namenode][jmxremote_port]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_port]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]"
        }
      },
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "attributes": {
          "hadoop_cloudera_c3/jmxremote_port": {
            "service_name": "hadoop_namenode",
            "value": null
          },
          "hadoop_cloudera_c3/jmxremote_password": {
            "service_name": "hadoop_namenode",
            "value": null
          },
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_password": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][password]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_port": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][namenode][port]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          }
        },
        "monitoring_items": {
          "check_hadoop_dfs": {
            "service_name": "hadoop_namenode",
            "condition_name": null,
            "condition_description": "a hadoop dfs report is available",
            "enabled": true,
            "name": "check_hadoop_dfs"
          },
          "check_hadoop_namenode_jmx": {
            "service_name": "hadoop_namenode",
            "condition_name": null,
            "condition_description": "jmx attributes are monitored",
            "params": [
              "jmxremote_port",
              "jmxremote_password"
            ],
            "enabled": true,
            "attributes_to_monitor": [
              {
                "attribute": "FilesTotal",
                "object_name": "hadoop:name=FSNamesystemState,service=NameNode",
                "warning": ">750000",
                "critical": ">1000000"
              },
              {
                "attribute": "CapacityTotal",
                "object_name": "hadoop:name=FSNamesystemState,service=NameNode",
                "warning": "",
                "critical": "<20000000"
              },
              {
                "attribute": "HeapMemoryUsage.used",
                "object_name": "java.lang:type=Memory",
                "warning": "",
                "critical": ""
              }
            ],
            "name": "check_hadoop_namenode_jmx"
          },
          "check_hadoop_namenode_remotely": {
            "service_name": "hadoop_namenode",
            "condition_name": "accessible_over_tcp",
            "condition_description": "this service should be accessible over tcp",
            "enabled": true,
            "name": "check_hadoop_namenode_remotely"
          },
          "check_hadoop_datanode_remotely": {
            "service_name": "hadoop_datanode",
            "condition_name": "accessible_over_tcp",
            "condition_description": "this service should be accessible over tcp",
            "enabled": true,
            "name": "check_hadoop_datanode_remotely"
          }
        },
        "description": "Installs hadoop-conf-pseudo and enables hadoop services"
      },
      "ds_key": "[:chef, :template, \"hadoop_cloudera_c3::conf_pseudo\"]",
      "monitoring_item": {
        "check_hadoop_namenode_remotely": {
          "display_name": "check_hadoop_namenode_remotely",
          "enabled": true
        },
        "check_hadoop_datanode_remotely": {
          "display_name": "check_hadoop_datanode_remotely",
          "enabled": true
        },
        "check_hadoop_dfs": {
          "display_name": "check_hadoop_dfs",
          "enabled": true
        },
        "check_hadoop_namenode_jmx": {
          "display_name": "check_hadoop_namenode_jmx",
          "enabled": true
        }
      },
      "description": "Installs hadoop-conf-pseudo and enables hadoop services"
    },
    "i-afcd95c5__nagios::client": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-afcd95c5__nagios::client",
      "external_cmp_ref": "recipe[nagios::client]",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "attributes": {
        },
        "node_name": "i-afcd95c5"
      },
      "ds_key": "[:chef, :instance, \"i-afcd95c5\", \"nagios::client\"]"
    },
    "rabbitmq::default": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "rabbitmq::default",
      "external_cmp_ref": "recipe[rabbitmq::default]",
	  "ui": "{\"images\": {\"tnail\":\"rabbitmq.png\",\"display\":\"rabbitmq.png\",\"tiny\":\"\"}}",
      "attribute": {
        "var[branch_tag]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[branch_tag]",
          "data_type": "string",
          "value_asserted": "default",
          "is_array": false,
          "propagation_type": "immediate",
          "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
          "external_attr_ref": "node[rabbitmq][branch_tag]"
        },
        "var[stomp][branch_tag]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[stomp][branch_tag]",
          "data_type": "string",
          "value_asserted": "default",
          "is_array": false,
          "propagation_type": "immediate",
          "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
          "external_attr_ref": "node[rabbitmq][stomp][branch_tag]"
        },
        "var[_service][rabbitmq][sap]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][rabbitmq][sap]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "node[rabbitmq][_service][rabbitmq][sap]"
        }
      },
      "ds_attributes": {
        "recipe_name": "rabbitmq::default",
        "attributes": {
          "rabbitmq/stomp/branch_tag": {
            "type": "string",
            "required": "optional",
            "display_name": "RabbitMQ-stomp adapter tag/branch name",
            "value": "default",
            "calculated": false,
            "recipes": [

            ],
            "default": "default",
            "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
            "choice": [

            ]
          },
          "rabbitmq/branch_tag": {
            "type": "string",
            "required": "optional",
            "display_name": "RabbitMQ tag/branch name",
            "value": "default",
            "calculated": false,
            "recipes": [

            ],
            "default": "default",
            "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
            "choice": [

            ]
          },
          "rabbitmq/_service/rabbitmq/sap": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": 5672
              }
            ],
            "calculated": false,
            "recipes": [

            ],
            "is_service_attribute": true,
            "choice": [

            ]
          }
        },
        "monitoring_items": {
        },
        "description": "Set up RabbitMQ from rabbitmq.com debian repository."
      },
      "ds_key": "[:chef, :template, \"rabbitmq::default\"]",
      "description": "Set up RabbitMQ from rabbitmq.com debian repository."
    },
    "java_sun": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "java_sun",
      "external_cmp_ref": "recipe[java_sun]",
	  "ui": "{\"images\": {\"tnail\":\"java-01.png\",\"display\":\"java-01.png\",\"tiny\":\"\"}}",
      "ds_attributes": {
        "recipe_name": "java_sun",
        "attributes": {
        },
        "monitoring_items": {
        },
        "description": "Installs Sun Java using preseed to accept terms"
      },
      "ds_key": "[:chef, :template, \"java_sun\"]",
      "description": "Installs Sun Java using preseed to accept terms"
    },
    "i-11d8497b__java": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-11d8497b__java",
      "external_cmp_ref": "recipe[java]",
      "ds_attributes": {
        "recipe_name": "java",
        "attributes": {
        },
        "node_name": "i-11d8497b"
      },
      "ds_key": "[:chef, :instance, \"i-11d8497b\", \"java\"]"
    },
    "i-07af096d__mysql::server2": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-07af096d__mysql::server2",
      "external_cmp_ref": "recipe[mysql::server2]",
      "attribute": {
        "var[_service][mysql_server][db_info]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][db_info]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][db_info]"
        },
        "port[sap]": {
          "display_name": "port[sap]",
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "tcp",
              "binding_addr_constraints": [

              ],
              "application": "sql::mysql",
              "port": 3306
            },
            {
              "type": "unix_socket",
              "socket": "/var/run/mysqld/mysqld.sock"
            }
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[mysql_server][sap]"
        },
        "var[_service][mysql_server][sap]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][sap]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][sap]"
        },
        "var[bind_address]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[bind_address]",
          "data_type": "string",
          "value_asserted": "10.206.241.161",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Address that mysqld should listen on",
          "external_attr_ref": "node[mysql][bind_address]"
        },
        "var[tunable][key_buffer]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][key_buffer]",
          "data_type": "string",
          "value_asserted": "250M",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][key_buffer]"
        },
        "var[tunable][back_log]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][back_log]",
          "data_type": "string",
          "value_asserted": "128",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][back_log]"
        },
        "var[tunable][max_connections]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][max_connections]",
          "data_type": "string",
          "value_asserted": "800",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][max_connections]"
        },
        "var[tunable][wait_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][wait_timeout]",
          "data_type": "string",
          "value_asserted": "180",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][wait_timeout]"
        },
        "var[_service][mysql_server][monitor_user_id]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][monitor_user_id]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][monitor_user_id]"
        },
        "port[monitor_user_id]": {
          "display_name": "port[monitor_user_id]",
          "value_asserted": "root",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[mysql_server][monitor_user_id]"
        },
        "var[server_root_password]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[server_root_password]",
          "data_type": "string",
          "value_asserted": "tempt5",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Randomly generated password for the mysqld root user",
          "external_attr_ref": "node[mysql][server_root_password]"
        },
        "var[tunable][max_heap_table_size]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][max_heap_table_size]",
          "data_type": "string",
          "value_asserted": "32M",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][max_heap_table_size]"
        },
        "var[tunable][net_write_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][net_write_timeout]",
          "data_type": "string",
          "value_asserted": "30",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][net_write_timeout]"
        },
        "var[datadir]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[datadir]",
          "data_type": "string",
          "value_asserted": "/var/lib/mysql",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Location of mysql databases",
          "external_attr_ref": "node[mysql][datadir]"
        },
        "var[tunable][net_read_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][net_read_timeout]",
          "data_type": "string",
          "value_asserted": "30",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][net_read_timeout]"
        },
        "var[ec2_path]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[ec2_path]",
          "data_type": "string",
          "value_asserted": "/mnt/mysql",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Location of mysql directory on EC2 instance EBS volumes",
          "external_attr_ref": "node[mysql][ec2_path]"
        },
        "port[db_info]": {
          "display_name": "port[db_info]",
          "value_asserted": [
            {
              "database": "mysql",
              "password": "tempt5",
              "username": "root"
            }
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[mysql_server][db_info]"
        },
        "var[tunable][table_cache]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][table_cache]",
          "data_type": "string",
          "value_asserted": "128",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][table_cache]"
        }
      },
      "ds_attributes": {
        "recipe_name": "mysql::server2",
        "attributes": {
          "mysql/tunable/wait_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Wait Timeout",
            "value": "180",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "180",
            "choice": [

            ]
          },
          "mysql/tunable/key_buffer": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tuntable Key Buffer",
            "value": "250M",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "250M",
            "choice": [

            ]
          },
          "mysql/bind_address": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Bind Address",
            "value": "10.206.241.161",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "ipaddress",
            "description": "Address that mysqld should listen on",
            "choice": [

            ]
          },
          "mysql/tunable/back_log": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Back Log",
            "value": "128",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/monitor_user_id": {
            "service_name": "mysql_server",
            "value": "root"
          },
          "mysql/tunable/net_write_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Net Write Timeout",
            "value": "30",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/datadir": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Data Directory",
            "value": "/var/lib/mysql",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "/var/lib/mysql",
            "description": "Location of mysql databases",
            "choice": [

            ]
          },
          "mysql/tunable/net_read_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Net Read Timeout",
            "value": "30",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/tunable/max_heap_table_size": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Max Heap Table Size",
            "value": "32M",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "32M",
            "choice": [

            ]
          },
          "mysql/_service/mysql_server/sap": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "binding_addr_constraints": [

                ],
                "application": "sql::mysql",
                "port": 3306
              },
              {
                "type": "unix_socket",
                "socket": "/var/run/mysqld/mysqld.sock"
              }
            ],
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/tunable/max_connections": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Max Connections",
            "value": "800",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "800",
            "choice": [

            ]
          },
          "mysql/sap": {
            "service_name": "mysql_server",
            "value": [
              {
                "type": "inet",
                "protocol": "tcp",
                "binding_addr_constraints": [

                ],
                "application": "sql::mysql",
                "port": 3306
              },
              {
                "type": "unix_socket",
                "socket": "/var/run/mysqld/mysqld.sock"
              }
            ]
          },
          "mysql/_service/mysql_server/db_info": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "database": "mysql",
                "password": {
                  "__ref": "node[mysql][server_root_password]"
                },
                "username": "root"
              }
            ],
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/server_root_password": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Server Root Password",
            "value": "tempt5",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "randomly generated",
            "description": "Randomly generated password for the mysqld root user",
            "choice": [

            ]
          },
          "mysql/tunable/table_cache": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Table Cache",
            "value": "128",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/db_info": {
            "service_name": "mysql_server",
            "value": [
              {
                "database": "mysql",
                "password": "tempt5",
                "username": "root"
              }
            ]
          },
          "mysql/_service/mysql_server/monitor_user_id": {
            "type": "string",
            "required": "optional",
            "transform": "root",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/ec2_path": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL EC2 Path",
            "value": "/mnt/mysql",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "/mnt/mysql",
            "description": "Location of mysql directory on EC2 instance EBS volumes",
            "choice": [

            ]
          }
        },
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, :instance, \"i-07af096d\", \"mysql::server2\"]"
    },
    "i-07af096d__chef_aux": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-07af096d__chef_aux",
      "external_cmp_ref": "recipe[chef_aux]",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "attributes": {
        },
        "node_name": "i-07af096d"
      },
      "ds_key": "[:chef, :instance, \"i-07af096d\", \"chef_aux\"]"
    },
    "i-33886f59__collectd::client": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-33886f59__collectd::client",
      "external_cmp_ref": "recipe[collectd::client]",
	  "ui": "{\"images\": {\"tnail\":\"collectd.png\",\"display\":\"collectd.png\",\"tiny\":\"\"}}",
      "ds_attributes": {
        "recipe_name": "collectd::client",
        "attributes": {
        },
        "node_name": "i-33886f59"
      },
      "ds_key": "[:chef, :instance, \"i-33886f59\", \"collectd::client\"]"
    },
    "i-9bad8cf1__postgresql::server": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-9bad8cf1__postgresql::server",
      "external_cmp_ref": "recipe[postgresql::server]",
      "attribute": {
        "var[dir]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[dir]",
          "data_type": "string",
          "value_asserted": "/etc/postgresql/8.4/main",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Location of the PostgreSQL databases",
          "external_attr_ref": "node[postgresql][dir]"
        }
      },
      "ds_attributes": {
        "recipe_name": "postgresql::server",
        "attributes": {
          "postgresql/dir": {
            "type": "string",
            "required": "optional",
            "display_name": "PostgreSQL Directory",
            "value": "/etc/postgresql/8.4/main",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "/etc/postgresql/8.3/main",
            "description": "Location of the PostgreSQL databases",
            "choice": [

            ]
          }
        },
        "node_name": "i-9bad8cf1"
      },
      "ds_key": "[:chef, :instance, \"i-9bad8cf1\", \"postgresql::server\"]"
    },
    "i-bd39e2d7__redis": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-bd39e2d7__redis",
      "external_cmp_ref": "recipe[redis]",
	  "ui": "{\"images\": {\"tnail\":\"redis.png\",\"display\":\"redis.png\",\"tiny\":\"\"}}",
      "attribute": {
        "port[sap]": {
          "display_name": "port[sap]",
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "tcp",
              "port": "6379"
            }
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[redis_service][sap]"
        },
        "var[_service][redis_service][sap]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][redis_service][sap]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "node[redis][_service][redis_service][sap]"
        }
      },
      "ds_attributes": {
        "recipe_name": "redis",
        "attributes": {
          "redis/_service/redis_service/sap": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": {
                  "__ref": "node[redis][port]"
                }
              }
            ],
            "calculated": false,
            "recipes": [

            ],
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "redis/sap": {
            "service_name": "redis_service",
            "value": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": "6379"
              }
            ]
          }
        },
        "node_name": "i-bd39e2d7"
      },
      "ds_key": "[:chef, :instance, \"i-bd39e2d7\", \"redis\"]"
    },
    "i-afcd95c5__chef_aux": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-afcd95c5__chef_aux",
      "external_cmp_ref": "recipe[chef_aux]",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "attributes": {
        },
        "node_name": "i-afcd95c5"
      },
      "ds_key": "[:chef, :instance, \"i-afcd95c5\", \"chef_aux\"]"
    },
    "java": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "java",
      "external_cmp_ref": "recipe[java]",
	  "ui": "{\"images\": {\"tnail\":\"java-01.png\",\"display\":\"java-01.png\",\"tiny\":\"\"}}",
      "ds_attributes": {
        "recipe_name": "java",
        "attributes": {
        },
        "monitoring_items": {
        },
        "description": "Installs openjdk to provide Java"
      },
      "ds_key": "[:chef, :template, \"java\"]",
      "description": "Installs openjdk to provide Java"
    },
    "i-c5f5afaf__hadoop_cloudera_c3::conf_pseudo": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-c5f5afaf__hadoop_cloudera_c3::conf_pseudo",
      "external_cmp_ref": "recipe[hadoop_cloudera_c3::conf_pseudo]",
      "attribute": {
        "port[jmxremote_port]": {
          "display_name": "port[jmxremote_port]",
          "value_asserted": "1618",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[hadoop_namenode][jmxremote_port]"
        },
        "var[_service][hadoop_namenode][jmxremote_password]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_password]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_password]"
        },
        "port[jmxremote_password]": {
          "display_name": "port[jmxremote_password]",
          "value_asserted": "QED",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[hadoop_namenode][jmxremote_password]"
        },
        "var[_service][hadoop_namenode][jmxremote_port]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][hadoop_namenode][jmxremote_port]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[hadoop_cloudera_c3][_service][hadoop_namenode][jmxremote_port]"
        }
      },
      "ds_attributes": {
        "recipe_name": "hadoop_cloudera_c3::conf_pseudo",
        "attributes": {
          "hadoop_cloudera_c3/jmxremote_port": {
            "service_name": "hadoop_namenode",
            "value": 1618
          },
          "hadoop_cloudera_c3/jmxremote_password": {
            "service_name": "hadoop_namenode",
            "value": "QED"
          },
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_password": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][password]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "hadoop_cloudera_c3/_service/hadoop_namenode/jmxremote_port": {
            "type": "string",
            "required": "optional",
            "transform": {
              "__ref": "node[hadoop][jmxremote][namenode][port]"
            },
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          }
        },
        "node_name": "i-c5f5afaf"
      },
      "ds_key": "[:chef, :instance, \"i-c5f5afaf\", \"hadoop_cloudera_c3::conf_pseudo\"]"
    },
    "i-bd39e2d7__chef_aux": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-bd39e2d7__chef_aux",
      "external_cmp_ref": "recipe[chef_aux]",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "attributes": {
        },
        "node_name": "i-bd39e2d7"
      },
      "ds_key": "[:chef, :instance, \"i-bd39e2d7\", \"chef_aux\"]"
    },
    "i-871863ed__nagios::client": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-871863ed__nagios::client",
      "external_cmp_ref": "recipe[nagios::client]",
      "ds_attributes": {
        "recipe_name": "nagios::client",
        "attributes": {
        },
        "node_name": "i-871863ed"
      },
      "ds_key": "[:chef, :instance, \"i-871863ed\", \"nagios::client\"]"
    },
    "ntp": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "ntp",
      "external_cmp_ref": "recipe[ntp]",
      "attribute": {
        "port[ntp][sap]": {
          "display_name": "port[ntp][sap]",
          "value_asserted": [
            {
              "type": "inet",
              "protocol": "udp",
              "port": 123
            }
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "service[ntp_server][ntp][sap]"
        },
        "var[servers]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[servers]",
          "data_type": "json",
          "value_asserted": [
            "0.us.pool.ntp.org",
            "1.us.pool.ntp.org"
          ],
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "description": "Array of servers we should talk to",
          "external_attr_ref": "node[ntp][servers]"
        },
        "var[service]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[service]",
          "data_type": "string",
          "value_asserted": "ntp",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "description": "Name of the NTP service",
          "external_attr_ref": "node[ntp][service]"
        },
        "var[_service][ntp_server][ntp][sap]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][ntp_server][ntp][sap]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "external_attr_ref": "node[ntp][_service][ntp_server][ntp][sap]"
        },
        "var[is_server]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[is_server]",
          "data_type": "string",
          "value_asserted": "false",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "output",
          "description": "Set to true if this is an NTP server",
          "external_attr_ref": "node[ntp][is_server]"
        }
      },
      "ds_attributes": {
        "recipe_name": "ntp",
        "attributes": {
          "ntp/service": {
            "type": "string",
            "required": "optional",
            "display_name": "NTP Service",
            "value": "ntp",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "default": "ntp",
            "description": "Name of the NTP service",
            "choice": [

            ]
          },
          "ntp/is_server": {
            "type": "string",
            "required": "optional",
            "display_name": "NTP Is Server?",
            "value": "false",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "default": "false",
            "description": "Set to true if this is an NTP server",
            "choice": [

            ]
          },
          "ntp/servers": {
            "type": "array",
            "required": "optional",
            "display_name": "NTP Servers",
            "value": [
              "0.us.pool.ntp.org",
              "1.us.pool.ntp.org"
            ],
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "default": [
              "0.us.pool.ntp.org",
              "1.us.pool.ntp.org"
            ],
            "description": "Array of servers we should talk to",
            "choice": [

            ]
          },
          "ntp/_service/ntp_server/ntp/sap": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "type": "inet",
                "protocol": "udp",
                "port": 123
              }
            ],
            "calculated": false,
            "recipes": [

            ],
            "port_type": "output",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "ntp/ntp/sap": {
            "service_name": "ntp_server",
            "value": [
              {
                "type": "inet",
                "protocol": "udp",
                "port": 123
              }
            ]
          }
        },
        "monitoring_items": {
        },
        "description": "Installs and configures ntp either as a server or client"
      },
      "ds_key": "[:chef, :template, \"ntp\"]",
      "description": "Installs and configures ntp either as a server or client"
    },
    "i-b04bf4da__chef_aux": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-b04bf4da__chef_aux",
      "external_cmp_ref": "recipe[chef_aux]",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "attributes": {
        },
        "node_name": "i-b04bf4da"
      },
      "ds_key": "[:chef, :instance, \"i-b04bf4da\", \"chef_aux\"]"
    },
    "i-97bb8ffd__collectd::server": {
      "display_name": "i-97bb8ffd__collectd::server"
    },
    "mysql::server_ec2": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "mysql::server_ec2",
      "external_cmp_ref": "recipe[mysql::server_ec2]",
	  "ui": "{\"images\": {\"tnail\":\"mysql.png\",\"display\":\"mysql.png\",\"tiny\":\"\"}}",
      "attribute": {
        "var[_service][mysql_server][db_info]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][db_info]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][db_info]"
        },
        "var[_service][mysql_server][sap]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][sap]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][sap]"
        },
        "var[bind_address]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[bind_address]",
          "data_type": "string",
          "value_asserted": "ipaddress",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Address that mysqld should listen on",
          "external_attr_ref": "node[mysql][bind_address]"
        },
        "var[tunable][key_buffer]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][key_buffer]",
          "data_type": "string",
          "value_asserted": "250M",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][key_buffer]"
        },
        "var[tunable][back_log]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][back_log]",
          "data_type": "string",
          "value_asserted": "128",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][back_log]"
        },
        "var[tunable][max_connections]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][max_connections]",
          "data_type": "string",
          "value_asserted": "800",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][max_connections]"
        },
        "var[tunable][wait_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][wait_timeout]",
          "data_type": "string",
          "value_asserted": "180",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][wait_timeout]"
        },
        "var[_service][mysql_server][monitor_user_id]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][mysql_server][monitor_user_id]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][_service][mysql_server][monitor_user_id]"
        },
        "var[server_root_password]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[server_root_password]",
          "data_type": "string",
          "value_asserted": "randomly generated",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Randomly generated password for the mysqld root user",
          "external_attr_ref": "node[mysql][server_root_password]"
        },
        "var[tunable][max_heap_table_size]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][max_heap_table_size]",
          "data_type": "string",
          "value_asserted": "32M",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][max_heap_table_size]"
        },
        "var[tunable][net_write_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][net_write_timeout]",
          "data_type": "string",
          "value_asserted": "30",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][net_write_timeout]"
        },
        "var[datadir]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[datadir]",
          "data_type": "string",
          "value_asserted": "/var/lib/mysql",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Location of mysql databases",
          "external_attr_ref": "node[mysql][datadir]"
        },
        "var[tunable][net_read_timeout]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][net_read_timeout]",
          "data_type": "string",
          "value_asserted": "30",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][net_read_timeout]"
        },
        "var[ec2_path]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[ec2_path]",
          "data_type": "string",
          "value_asserted": "/mnt/mysql",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "description": "Location of mysql directory on EC2 instance EBS volumes",
          "external_attr_ref": "node[mysql][ec2_path]"
        },
        "var[tunable][table_cache]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[tunable][table_cache]",
          "data_type": "string",
          "value_asserted": "128",
          "is_array": false,
          "propagation_type": "immediate",
          "port_type": "input",
          "external_attr_ref": "node[mysql][tunable][table_cache]"
        }
      },
      "ds_attributes": {
        "recipe_name": "mysql::server_ec2",
        "attributes": {
          "mysql/tunable/wait_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Wait Timeout",
            "value": "180",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "180",
            "choice": [

            ]
          },
          "mysql/tunable/key_buffer": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tuntable Key Buffer",
            "value": "250M",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "250M",
            "choice": [

            ]
          },
          "mysql/bind_address": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Bind Address",
            "value": "ipaddress",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "ipaddress",
            "description": "Address that mysqld should listen on",
            "choice": [

            ]
          },
          "mysql/tunable/back_log": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Back Log",
            "value": "128",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/tunable/net_write_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Net Write Timeout",
            "value": "30",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/datadir": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Data Directory",
            "value": "/var/lib/mysql",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "/var/lib/mysql",
            "description": "Location of mysql databases",
            "choice": [

            ]
          },
          "mysql/tunable/net_read_timeout": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Net Read Timeout",
            "value": "30",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "30",
            "choice": [

            ]
          },
          "mysql/tunable/max_heap_table_size": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Max Heap Table Size",
            "value": "32M",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "32M",
            "choice": [

            ]
          },
          "mysql/_service/mysql_server/sap": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "binding_addr_constraints": [

                ],
                "application": "sql::mysql",
                "port": 3306
              },
              {
                "type": "unix_socket",
                "socket": "/var/run/mysqld/mysqld.sock"
              }
            ],
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/tunable/max_connections": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Max Connections",
            "value": "800",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "800",
            "choice": [

            ]
          },
          "mysql/_service/mysql_server/db_info": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "database": "mysql",
                "password": {
                  "__ref": "node[mysql][server_root_password]"
                },
                "username": "root"
              }
            ],
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/server_root_password": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Server Root Password",
            "value": "randomly generated",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "randomly generated",
            "description": "Randomly generated password for the mysqld root user",
            "choice": [

            ]
          },
          "mysql/tunable/table_cache": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL Tunable Table Cache",
            "value": "128",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "128",
            "choice": [

            ]
          },
          "mysql/_service/mysql_server/monitor_user_id": {
            "type": "string",
            "required": "optional",
            "transform": "root",
            "calculated": false,
            "recipes": [
              "mysql::server",
              "mysql::server2"
            ],
            "monitoring_input": "true",
            "port_type": "input",
            "is_service_attribute": true,
            "choice": [

            ]
          },
          "mysql/ec2_path": {
            "type": "string",
            "required": "optional",
            "display_name": "MySQL EC2 Path",
            "value": "/mnt/mysql",
            "calculated": false,
            "recipes": [

            ],
            "port_type": "input",
            "default": "/mnt/mysql",
            "description": "Location of mysql directory on EC2 instance EBS volumes",
            "choice": [

            ]
          }
        },
        "monitoring_items": {
        },
        "description": "Performs EC2-specific mountpoint manipulation"
      },
      "ds_key": "[:chef, :template, \"mysql::server_ec2\"]",
      "description": "Performs EC2-specific mountpoint manipulation"
    },
    "i-871863ed__chef_aux": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-871863ed__chef_aux",
      "external_cmp_ref": "recipe[chef_aux]",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "attributes": {
        },
        "node_name": "i-871863ed"
      },
      "ds_key": "[:chef, :instance, \"i-871863ed\", \"chef_aux\"]"
    },
    "chef_aux": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "chef_aux",
      "external_cmp_ref": "recipe[chef_aux]",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "attributes": {
        },
        "monitoring_items": {
        },
        "description": ""
      },
      "ds_key": "[:chef, :template, \"chef_aux\"]",
      "description": ""
    },
    "hadoop::doc": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "hadoop::doc",
      "external_cmp_ref": "recipe[hadoop::doc]",
      "ds_attributes": {
        "recipe_name": "hadoop::doc",
        "attributes": {
        },
        "monitoring_items": {
        },
        "description": "Installs hadoop documentation"
      },
      "ds_key": "[:chef, :template, \"hadoop::doc\"]",
      "description": "Installs hadoop documentation"
    },
    "hadoop": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "hadoop",
      "external_cmp_ref": "recipe[hadoop]",
	  "ui": "{\"images\": {\"tnail\":\"hadoop.png\",\"display\":\"hadoop.png\",\"tiny\":\"\"}}",
      "ds_attributes": {
        "recipe_name": "hadoop",
        "attributes": {
        },
        "monitoring_items": {
        },
        "description": "Installs hadoop from Cloudera's repo"
      },
      "ds_key": "[:chef, :template, \"hadoop\"]",
      "description": "Installs hadoop from Cloudera's repo"
    },
    "i-b04bf4da__ganglia_data_collector": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-b04bf4da__ganglia_data_collector",
      "external_cmp_ref": "recipe[ganglia_data_collector]",
      "ds_attributes": {
        "recipe_name": "ganglia_data_collector",
        "attributes": {
        },
        "node_name": "i-b04bf4da"
      },
      "ds_key": "[:chef, :instance, \"i-b04bf4da\", \"ganglia_data_collector\"]"
    },
    "i-0502796f__chef_aux": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-0502796f__chef_aux",
      "external_cmp_ref": "recipe[chef_aux]",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "attributes": {
        },
        "node_name": "i-0502796f"
      },
      "ds_key": "[:chef, :instance, \"i-0502796f\", \"chef_aux\"]"
    },
    "i-c5f5afaf__chef_aux": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-c5f5afaf__chef_aux",
      "external_cmp_ref": "recipe[chef_aux]",
      "ds_attributes": {
        "recipe_name": "chef_aux",
        "attributes": {
        },
        "node_name": "i-c5f5afaf"
      },
      "ds_key": "[:chef, :instance, \"i-c5f5afaf\", \"chef_aux\"]"
    },
    "i-374b945d__hudson": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-374b945d__hudson",
      "external_cmp_ref": "recipe[hudson]",
      "ds_attributes": {
        "recipe_name": "hudson",
        "attributes": {
        },
        "node_name": "i-374b945d"
      },
      "ds_key": "[:chef, :instance, \"i-374b945d\", \"hudson\"]"
    },
    "i-335f0059__collectd::server": {
      "type": "instance",
      "external_type": "chef_recipe",
      "display_name": "i-335f0059__collectd::server",
      "external_cmp_ref": "recipe[collectd::server]",
	  "ui": "{\"images\": {\"tnail\":\"collectd.png\",\"display\":\"collectd.png\",\"tiny\":\"\"}}",
      "ds_attributes": {
        "recipe_name": "collectd::server",
        "attributes": {
        },
        "node_name": "i-335f0059"
      },
      "ds_key": "[:chef, :instance, \"i-335f0059\", \"collectd::server\"]"
    },
    "hadoop::pig": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "hadoop::pig",
      "external_cmp_ref": "recipe[hadoop::pig]",
      "ds_attributes": {
        "recipe_name": "hadoop::pig",
        "attributes": {
        },
        "monitoring_items": {
        },
        "description": "Installs hadoop's pig package"
      },
      "ds_key": "[:chef, :template, \"hadoop::pig\"]",
      "description": "Installs hadoop's pig package"
    },
    "rabbitmq::edge_stomp": {
      "type": "template",
      "external_type": "chef_recipe",
      "display_name": "rabbitmq::edge_stomp",
      "external_cmp_ref": "recipe[rabbitmq::edge_stomp]",
	  "ui": "{\"images\": {\"tnail\":\"rabbitmq.png\",\"display\":\"rabbitmq.png\",\"tiny\":\"\"}}",
      "attribute": {
        "var[branch_tag]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[branch_tag]",
          "data_type": "string",
          "value_asserted": "default",
          "is_array": false,
          "propagation_type": "immediate",
          "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
          "external_attr_ref": "node[rabbitmq][branch_tag]"
        },
        "var[stomp][branch_tag]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[stomp][branch_tag]",
          "data_type": "string",
          "value_asserted": "default",
          "is_array": false,
          "propagation_type": "immediate",
          "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
          "external_attr_ref": "node[rabbitmq][stomp][branch_tag]"
        },
        "var[_service][rabbitmq][sap]": {
          "required": false,
          "output_variable": false,
          "display_name": "var[_service][rabbitmq][sap]",
          "data_type": "string",
          "is_array": false,
          "propagation_type": "immediate",
          "external_attr_ref": "node[rabbitmq][_service][rabbitmq][sap]"
        }
      },
      "ds_attributes": {
        "recipe_name": "rabbitmq::edge_stomp",
        "attributes": {
          "rabbitmq/stomp/branch_tag": {
            "type": "string",
            "required": "optional",
            "display_name": "RabbitMQ-stomp adapter tag/branch name",
            "value": "default",
            "calculated": false,
            "recipes": [

            ],
            "default": "default",
            "description": "The RabbitMQ-stomp adapter tag/branch name.  The default is default, the latest qa'd branch.",
            "choice": [

            ]
          },
          "rabbitmq/branch_tag": {
            "type": "string",
            "required": "optional",
            "display_name": "RabbitMQ tag/branch name",
            "value": "default",
            "calculated": false,
            "recipes": [

            ],
            "default": "default",
            "description": "The RabbitMQ tag/branch name.  The default is default, the latest qa'd branch.",
            "choice": [

            ]
          },
          "rabbitmq/_service/rabbitmq/sap": {
            "type": "string",
            "required": "optional",
            "transform": [
              {
                "type": "inet",
                "protocol": "tcp",
                "port": 5672
              }
            ],
            "calculated": false,
            "recipes": [

            ],
            "is_service_attribute": true,
            "choice": [

            ]
          }
        },
        "monitoring_items": {
        },
        "description": "Set up RabbitMQ-stomp adapter from source mercurial repository."
      },
      "ds_key": "[:chef, :template, \"rabbitmq::edge_stomp\"]",
      "description": "Set up RabbitMQ-stomp adapter from source mercurial repository."
    }
  },
  "data_source": {
    "chef": {
      "display_name": "chef",
      "data_source_entry": {
        "component_instance": {
          "ds_is_golden_store": true,
          "display_name": "component_instance",
          "obj_type": "component",
          "data_source_entry": {
            "component_attribute": {
              "ds_is_golden_store": true,
              "display_name": "component_attribute",
              "obj_type": "attribute",
              "ds_name": "chef"
            }
          },
          "ds_name": "chef",
          "source_obj_type": "instance"
        },
        "component_recipe": {
          "ds_is_golden_store": true,
          "display_name": "component_recipe",
          "obj_type": "component",
          "data_source_entry": {
            "component_monitoring_item": {
              "ds_is_golden_store": true,
              "display_name": "component_monitoring_item",
              "obj_type": "monitoring_item",
              "ds_name": "chef"
            },
            "component_attribute": {
              "ds_is_golden_store": true,
              "display_name": "component_attribute",
              "obj_type": "attribute",
              "ds_name": "chef"
            }
          },
          "ds_name": "chef",
          "source_obj_type": "recipe"
        },
        "assoc_node_component": {
          "ds_is_golden_store": true,
          "display_name": "assoc_node_component",
          "obj_type": "assoc_node_component",
          "ds_name": "chef"
        }
      },
      "ds_name": "chef"
    },
    "ec2": {
      "display_name": "ec2",
      "data_source_entry": {
        "node_image": {
          "ds_is_golden_store": true,
          "display_name": "node_image",
          "obj_type": "node",
          "ds_name": "ec2",
          "source_obj_type": "image"
        },
        "node_instance": {
          "ds_is_golden_store": true,
          "display_name": "node_instance",
          "obj_type": "node",
          "ds_name": "ec2",
          "source_obj_type": "instance"
        }
      },
      "ds_name": "ec2"
    }
  }
}

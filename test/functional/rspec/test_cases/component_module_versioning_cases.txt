Test Cases for Componend and Service Module Versioning: 

- Test Case 01: Import component module from local filesystem, version it and push it to remote
	Precondition:
		- component module on local filesystem: versioned_component_module
		- component module version: 0.0.1
	Test steps:
		1. Import component module from local dir
		2. Publish it to remote repo
		3. Create version of the component module
		4. Push version to remote repo (push-dtkn)
	Test cleanup:
		- delete component module (tenant + locally)
		- delete component module version (tenant + locally)
		- delete component module from remote: versioned_component_module
___________________________________________________________________________________________________________________

- Test Case 02: Install component module, version it and push it to remote
	Precondition:
		- component module present on repo: versioned_component_module
		- component module version: 0.0.1
	Test steps:
		1. Install component module
		2. Create component module version  
		3. Push version to remote
	Test cleanup:
		- delete component module (tenant + locally)
		- delete component module version (tenant + locally)
		- delete component module version from remote (* If the feature is implemented)
___________________________________________________________________________________________________________________

- Test Case 03: Install component module version, create new version, push it to remote
	Precondition:
		- component module present on repo: versioned_component_module
		- component module version present on repo: 0.0.1
		- new component module version: 0.0.2
	Test steps:
		1. Install component module version
		2. Create new component module version
		3. Push new version to remote
	Test cleanup:
		- delete new component module version: 0.0.2
		- delete component module (tenant + locally)
		- delete component module version (tenant + locally)
___________________________________________________________________________________________________________________

- Test Case 04: Pull changes from remote to a versioned component module
	Precondition:
		- component module present on tenant and on repo: versioned_component_module
		- component module version exists: 0.0.1
	Test steps:
		1. List component module's version
		2. List diffs changes from remote
		3. Pull changes for the component module version
	Cleanup:
		None.
___________________________________________________________________________________________________________________

- Test Case 05: Install versioned component module, add it to assembly, stage assembly to service and converge the service
	Precondition:
		- component module exists on repo: versioned_component_module
		- component module version exists on repo: 0.0.1
		- service module exists on tenant
	Test steps:
		1. Install component module version 
		2. Stage assembly
		3. Add versioned component to staged assembly
		4. Converge the staged assembly
	Cleanup:
		- delete converged service
		- delete component module (tenant + locally)
		- delete component module version (tenant + locally)
___________________________________________________________________________________________________________________

- Test Case 06 (N): Create version of a component module that already exists
	Precondition:
		- component module exists on repo: versioned_component_module
		- component module version exists on repo: 0.0.1
	Test steps:
		1. Install component module version
		2. Create existing component module version
	Cleanup: 
		- none
	Expected Error Message:
		- Message saying that said version already exists
___________________________________________________________________________________________________________________

- Test Case 07 (N): Add a versioned component module to assembly that already has a version of that component module added
	Precondition:
		- component module exists on repo: versioned_component_module
		- component module version exists: 0.0.1
		- service module exists on tenant
	Test steps: 
		1. Install component module version
		2. Create new component module version
		3. Stage assebmly
		4. Add versioned component module to staged assembly
		5. Add new versioned component module to staged assembly
	Clenup:
		- remove the staged assembly 
	Expected Error Message:  
		- Message saying that assembly already contains version of the component module
___________________________________________________________________________________________________________________

- Test Case 08: Install component module version, make some change and push the changed component module version
	Precondition:
		- component module exists on repo: versioned_component_module
		- component module version exists: 0.0.1
	Test steps:
		1. Install component module version
		2. Make some change
		3. Push component module changes to tenant
		4. Push changes to remote (push dtkn)
	Cleanup:
		- delete changes form remote (potentialy not possible)
		- delete component module (tenant + locally)
		- delete component module version (tenant + locally)
___________________________________________________________________________________________________________________

- Test Case 09: Install component module version, list components
	Precondition:
		- component module exists on repo: versioned_component_module
		- component module version exists: 0.0.1
	Test steps:
		1. Install component module version
		2. List components
	Cleanup:
		- delete component module (tenant + locally)
		- delete component module version (tenant + locally)
___________________________________________________________________________________________________________________	
- Test Case 10: Install component module, version it, check if version is cloned to local filesystem
	Precondition:
		- component module exists on repo: versioned_component_module
		- component module version exists: 0.0.1
	Test steps:
		1. Import component module version
		2. Create new component module version
		3. Clone it to local filesystem
	Cleanup:
		- delete component module (tenant + locally)
		- delete component module version (tenant + locally)
___________________________________________________________________________________________________________________

- Test Case 11 (N): Check if deleting base component module version from remote displays warning message
	Reminder: Feature may not be implemented
	Precondition:
		- component module exists on repo: versioned_component_module
		- component module versions exist
	Test steps:
	1. Delete from catalog base component module
	2. Warning message appeared
	Cleanup:
		- none
___________________________________________________________________________________________________________________

- Test Case 12 (N): Import component module from local filesystem, version it, publish version
	Precondition:
		- component module exists locally
		- component module does not exist on repo
	Test steps:
		1. Import component module from local filesystem
		2. Create new component module version
		3. Publsih created version to the remote repo 
	Cleanup:
		- delete component module (tenant + locally)
		- delete component module version (tenant + locally)
	Expected Error Message:
		- Message saying taht base component module repository does not exist on remote repo
